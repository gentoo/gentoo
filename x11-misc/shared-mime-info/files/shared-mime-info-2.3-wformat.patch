https://gitlab.freedesktop.org/xdg/shared-mime-info/-/commit/157c16b09f54741aefbc4be6a3507455f0378389

From 157c16b09f54741aefbc4be6a3507455f0378389 Mon Sep 17 00:00:00 2001
From: Biswapriyo Nath <nathbappai@gmail.com>
Date: Sun, 8 Oct 2023 13:26:43 +0000
Subject: [PATCH] Fix missing sentinel warning with clang

This fixes the compiler warnings similar as following.

../src/update-mime-database.cpp:393:50: warning: missing sentinel in function call [-Wsentinel]
  393 |                         g_strconcat(namespaceURI, " ", localName, NULL),
      |                                                                       ^
      |                                                                       , nullptr
---
 src/update-mime-database.cpp | 58 ++++++++++++++++++------------------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/src/update-mime-database.cpp b/src/update-mime-database.cpp
index 29d82a9d..7838a0eb 100644
--- a/src/update-mime-database.cpp
+++ b/src/update-mime-database.cpp
@@ -390,7 +390,7 @@ static void add_namespace(Type *type, const char *namespaceURI,
 	}
 
 	g_hash_table_insert(namespace_hash,
-			g_strconcat(namespaceURI, " ", localName, NULL),
+			g_strconcat(namespaceURI, " ", localName, nullptr),
 			type);
 }
 
@@ -1023,7 +1023,7 @@ static void write_out_type(gpointer key, gpointer value, gpointer data)
 	char *lower;
 
 	lower = g_ascii_strdown(type->media, -1);
-	media = g_strconcat(mime_dir, "/", lower, NULL);
+	media = g_strconcat(mime_dir, "/", lower, nullptr);
 	g_free(lower);
 #ifdef _WIN32
 	fs::create_directory(media);
@@ -1032,7 +1032,7 @@ static void write_out_type(gpointer key, gpointer value, gpointer data)
 #endif
 
 	lower = g_ascii_strdown(type->subtype, -1);
-	filename = g_strconcat(media, "/", lower, ".xml.new", NULL);
+	filename = g_strconcat(media, "/", lower, ".xml.new", nullptr);
 	g_free(lower);
 	g_free(media);
 	media = NULL;
@@ -1622,7 +1622,7 @@ static Magic *magic_new(xmlNode *node, Type *type, GError **error)
 			magic_free(magic);
 			magic = NULL;
 			(*error)->message = g_strconcat(
-				_("Error in <match> element: "), old, NULL);
+				_("Error in <match> element: "), old, nullptr);
 			g_free(old);
 		} else if (magic->matches == NULL) {
 			magic_free(magic);
@@ -1843,7 +1843,7 @@ static TreeMagic *tree_magic_new(xmlNode *node, Type *type, GError **error)
 			tree_magic_free(magic);
 			magic = NULL;
 			(*error)->message = g_strconcat(
-				_("Error in <treematch> element: "), old, NULL);
+				_("Error in <treematch> element: "), old, nullptr);
 			g_free(old);
 		}
 	}
@@ -1960,7 +1960,7 @@ static void delete_old_types(const gchar *mime_dir)
 
 	for (i = 0; i < G_N_ELEMENTS(media_types); i++)
 	{
-		const fs::path media_dir = g_strconcat(mime_dir, "/", media_types[i], NULL);
+		const fs::path media_dir = g_strconcat(mime_dir, "/", media_types[i], nullptr);
 
 		if (!fs::is_directory(fs::status(media_dir)))
 			continue;
@@ -1973,13 +1973,13 @@ static void delete_old_types(const gchar *mime_dir)
 				continue;
 
 			char *type_name = g_strconcat(media_types[i], "/",
-						dir_entry.path().filename().string().c_str(), NULL);
+						dir_entry.path().filename().string().c_str(), nullptr);
 			type_name[strlen(type_name) - 4] = '\0';
 			if (!g_hash_table_lookup(types, type_name))
 			{
 				char *path;
 				path = g_strconcat(mime_dir, "/",
-						type_name, ".xml", NULL);
+						type_name, ".xml", nullptr);
 #if 0
 				g_warning("Removing old info for type %s",
 						path);
@@ -2002,7 +2002,7 @@ static void add_ns(gpointer key, gpointer value, gpointer data)
 	Type *type = (Type *) value;
 
 	g_ptr_array_add(lines, g_strconcat(ns, " ", type->media,
-					   "/", type->subtype, "\n", NULL));
+					   "/", type->subtype, "\n", nullptr));
 }
 
 /* Write all the collected namespace rules to 'XMLnamespaces' */
@@ -2038,7 +2038,7 @@ static void write_subclass(gpointer key, gpointer value, gpointer data)
 
 	for (l = list; l; l = l->next)
 	{
-		line = g_strconcat (static_cast<const gchar *>(key), " ", l->data, "\n", NULL);
+		line = g_strconcat (static_cast<const gchar *>(key), " ", l->data, "\n", nullptr);
 		fwrite(line, 1, strlen(line), stream);
 		g_free (line);
 	}
@@ -2061,7 +2061,7 @@ static void add_alias(gpointer key, gpointer value, gpointer data)
 	
 	g_ptr_array_add(lines, g_strconcat(alias, " ", type->media,
 					   "/", type->subtype, "\n", 
-					   NULL));
+					   nullptr));
 }
 
 /* Write all the collected aliases */
@@ -2092,7 +2092,7 @@ static void add_type(gpointer key, gpointer value, gpointer data)
 {
 	GPtrArray *lines = (GPtrArray *) data;
 	
-	g_ptr_array_add(lines, g_strconcat((char *)key, "\n", NULL));
+	g_ptr_array_add(lines, g_strconcat((char *)key, "\n", nullptr));
 }
 
 /* Write all the collected types */
@@ -2127,7 +2127,7 @@ static void write_one_icon(gpointer key, gpointer value, gpointer data)
 	FILE *stream = (FILE *)data;
 	char *line;
 
-	line = g_strconcat (mimetype, ":", iconname, "\n", NULL);
+	line = g_strconcat (mimetype, ":", iconname, "\n", nullptr);
 	fwrite(line, 1, strlen(line), stream);
 	g_free (line);
 }
@@ -2168,7 +2168,7 @@ static void check_in_path_xdg_data(const char *mime_path)
 		dirs[n] = g_strdup(env);
 	else
 		dirs[n] = g_build_filename(g_get_home_dir(), ".local",
-						"share", NULL);
+						"share", nullptr);
 	n++;
 
 	for (i = 0; i < n; i++)
@@ -3588,7 +3588,7 @@ newest_mtime(const char *packagedir)
 	while ((name = g_dir_read_name(dir))) {
 		char *path;
 
-		path = g_build_filename(packagedir, name, NULL);
+		path = g_build_filename(packagedir, name, nullptr);
 		retval = g_stat(path, &statbuf);
 		g_free(path);
 		if (retval < 0)
@@ -3609,7 +3609,7 @@ is_cache_up_to_date (const char *mimedir, const char *packagedir)
 	char *mimeversion;
 	int retval;
 
-	mimeversion = g_build_filename(mimedir, "/version", NULL);
+	mimeversion = g_build_filename(mimedir, "/version", nullptr);
 	retval = g_stat(mimeversion, &version_stat);
 	g_free(mimeversion);
 	if (retval < 0)
@@ -3694,7 +3694,7 @@ int main(int argc, char **argv)
 		}
 	}
 
-	package_dir = g_strconcat(mime_dir, "/packages", NULL);
+	package_dir = g_strconcat(mime_dir, "/packages", nullptr);
 
 	if (!fs::exists(mime_dir) && !fs::is_directory(fs::status(mime_dir)))
 	{
@@ -3747,7 +3747,7 @@ int main(int argc, char **argv)
 
 		g_hash_table_foreach(globs_hash, collect_glob2, &glob_list);
 		glob_list = g_list_sort(glob_list, (GCompareFunc)compare_glob_by_weight);
-		globs_path = g_strconcat(mime_dir, "/globs.new", NULL);
+		globs_path = g_strconcat(mime_dir, "/globs.new", nullptr);
 		globs = fopen_gerror(globs_path, error);
 		if (!globs)
 			goto out;
@@ -3761,7 +3761,7 @@ int main(int argc, char **argv)
 			goto out;
 		g_free(globs_path);
 
-		globs_path = g_strconcat(mime_dir, "/globs2.new", NULL);
+		globs_path = g_strconcat(mime_dir, "/globs2.new", nullptr);
 		globs = fopen_gerror(globs_path, error);
 		if (!globs)
 			goto out;
@@ -3782,7 +3782,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *magic_path;
 		int i;
-		magic_path = g_strconcat(mime_dir, "/magic.new", NULL);
+		magic_path = g_strconcat(mime_dir, "/magic.new", nullptr);
 		stream = fopen_gerror(magic_path, error);
 		if (!stream)
 			goto out;
@@ -3807,7 +3807,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *ns_path;
 
-		ns_path = g_strconcat(mime_dir, "/XMLnamespaces.new", NULL);
+		ns_path = g_strconcat(mime_dir, "/XMLnamespaces.new", nullptr);
 		stream = fopen_gerror(ns_path, error);
 		if (!stream)
 			goto out;
@@ -3823,7 +3823,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *path;
 		
-		path = g_strconcat(mime_dir, "/subclasses.new", NULL);
+		path = g_strconcat(mime_dir, "/subclasses.new", nullptr);
 		stream = fopen_gerror(path, error);
 		if (!stream)
 			goto out;
@@ -3839,7 +3839,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *path;
 		
-		path = g_strconcat(mime_dir, "/aliases.new", NULL);
+		path = g_strconcat(mime_dir, "/aliases.new", nullptr);
 		stream = fopen_gerror(path, error);
 		if (!stream)
 			goto out;
@@ -3855,7 +3855,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *path;
 		
-		path = g_strconcat(mime_dir, "/types.new", NULL);
+		path = g_strconcat(mime_dir, "/types.new", nullptr);
 		stream = fopen_gerror(path, error);
 		if (!stream)
 			goto out;
@@ -3871,7 +3871,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *icon_path;
 
-		icon_path = g_strconcat(mime_dir, "/generic-icons.new", NULL);
+		icon_path = g_strconcat(mime_dir, "/generic-icons.new", nullptr);
 		stream = fopen_gerror(icon_path, error);
 		if (!stream)
 			goto out;
@@ -3887,7 +3887,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *icon_path;
 
-		icon_path = g_strconcat(mime_dir, "/icons.new", NULL);
+		icon_path = g_strconcat(mime_dir, "/icons.new", nullptr);
 		stream = fopen_gerror(icon_path, error);
 		if (!stream)
 			goto out;
@@ -3903,7 +3903,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *path;
 		int i;
-		path = g_strconcat(mime_dir, "/treemagic.new", NULL);
+		path = g_strconcat(mime_dir, "/treemagic.new", nullptr);
 		stream = fopen_gerror(path, error);
 		if (!stream)
 			goto out;
@@ -3928,7 +3928,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *path;
 		
-		path = g_strconcat(mime_dir, "/mime.cache.new", NULL);
+		path = g_strconcat(mime_dir, "/mime.cache.new", nullptr);
 		stream = fopen_gerror(path, error);
 		if (!stream)
 			goto out;
@@ -3944,7 +3944,7 @@ int main(int argc, char **argv)
 		FILE *stream;
 		char *path;
 
-		path = g_strconcat(mime_dir, "/version.new", NULL);
+		path = g_strconcat(mime_dir, "/version.new", nullptr);
 		stream = fopen_gerror(path, error);
 		if (!stream)
 			goto out;
-- 
GitLab
