Skip tests that can't run on Gentoo because of the network sandbox
diff --git a/test/hardware_loader_test.go b/test/hardware_loader_test.go
index 147396e..da6c8ef 100644
--- a/src/github.com/arduino/arduino-builder/test/hardware_loader_test.go
+++ b/src/github.com/arduino/arduino-builder/test/hardware_loader_test.go
@@ -41,6 +41,7 @@ import (
 )
 
 func TestLoadHardware(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{"downloaded_hardware", filepath.Join("..", "hardware"), "hardware"},
 	}
@@ -85,6 +86,7 @@ func TestLoadHardware(t *testing.T) {
 }
 
 func TestLoadHardwareMixingUserHardwareFolder(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{"downloaded_hardware", filepath.Join("..", "hardware"), "hardware", "user_hardware"},
 	}
@@ -155,6 +157,7 @@ func TestLoadHardwareMixingUserHardwareFolder(t *testing.T) {
 }
 
 func TestLoadHardwareWithBoardManagerFolderStructure(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{"downloaded_board_manager_stuff"},
 	}
@@ -203,6 +206,7 @@ func TestLoadHardwareWithBoardManagerFolderStructure(t *testing.T) {
 }
 
 func TestLoadLotsOfHardware(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{"downloaded_board_manager_stuff", "downloaded_hardware", filepath.Join("..", "hardware"), "hardware", "user_hardware"},
 	}
diff --git a/test/helper_tools_downloader.go b/test/helper_tools_downloader.go
index 49aa847..ba77a57 100644
--- a/src/github.com/arduino/arduino-builder/test/helper_tools_downloader.go
+++ b/src/github.com/arduino/arduino-builder/test/helper_tools_downloader.go
@@ -83,6 +83,7 @@ type Core struct {
 }
 
 func DownloadCoresAndToolsAndLibraries(t *testing.T) {
+    t.Skip("Gentoo skips tests requiring network");
 	cores := []Core{
 		Core{Maintainer: "arduino", Arch: "avr", Version: "1.6.10"},
 		Core{Maintainer: "arduino", Arch: "sam", Version: "1.6.7"},
@@ -177,6 +178,7 @@ func patchFiles(t *testing.T) {
 }
 
 func download(t *testing.T, cores, boardsManagerCores, boardsManagerRedBearCores []Core, tools, toolsMultipleVersions, boardsManagerTools, boardsManagerRFduinoTools []Tool, libraries []Library) {
+    t.Skip("Gentoo skips tests requiring network");
 	allCoresDownloaded, err := allCoresAlreadyDownloadedAndUnpacked(HARDWARE_FOLDER, cores)
 	NoError(t, err)
 	if allCoresDownloaded &&
diff --git a/test/target_board_resolver_test.go b/test/target_board_resolver_test.go
index 49e0abe..7a50fe1 100644
--- a/src/github.com/arduino/arduino-builder/test/target_board_resolver_test.go
+++ b/src/github.com/arduino/arduino-builder/test/target_board_resolver_test.go
@@ -39,6 +39,7 @@ import (
 )
 
 func TestTargetBoardResolverUno(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{filepath.Join("..", "hardware"), "hardware", "downloaded_hardware"},
 		FQBN:            "arduino:avr:uno",
@@ -64,6 +65,7 @@ func TestTargetBoardResolverUno(t *testing.T) {
 }
 
 func TestTargetBoardResolverDue(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{filepath.Join("..", "hardware"), "hardware", "downloaded_hardware"},
 		FQBN:            "arduino:sam:arduino_due_x",
@@ -89,6 +91,7 @@ func TestTargetBoardResolverDue(t *testing.T) {
 }
 
 func TestTargetBoardResolverMega1280(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{filepath.Join("..", "hardware"), "hardware", "downloaded_hardware"},
 		FQBN:            "arduino:avr:mega:cpu=atmega1280",
@@ -115,6 +118,7 @@ func TestTargetBoardResolverMega1280(t *testing.T) {
 }
 
 func TestTargetBoardResolverMega2560(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{filepath.Join("..", "hardware"), "hardware", "downloaded_hardware"},
 		FQBN:            "arduino:avr:mega:cpu=atmega2560",
@@ -141,6 +145,7 @@ func TestTargetBoardResolverMega2560(t *testing.T) {
 }
 
 func TestTargetBoardResolverCustomYun(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{filepath.Join("..", "hardware"), "hardware", "downloaded_hardware", "user_hardware"},
 		FQBN:            "my_avr_platform:avr:custom_yun",
@@ -167,6 +172,7 @@ func TestTargetBoardResolverCustomYun(t *testing.T) {
 }
 
 func TestTargetBoardResolverCustomCore(t *testing.T) {
+    t.Skip("Can't run on Gentoo")
 	ctx := &types.Context{
 		HardwareFolders: []string{filepath.Join("..", "hardware"), "hardware", "downloaded_hardware", "user_hardware"},
 		FQBN:            "watterott:avr:attiny841:core=spencekonde,info=info",
diff --git a/test/wipeout_build_path_if_build_options_changed_test.go b/test/wipeout_build_path_if_build_options_changed_test.go
index 51bfe80..8501fb6 100644
--- a/src/github.com/arduino/arduino-builder/test/wipeout_build_path_if_build_options_changed_test.go
+++ b/src/github.com/arduino/arduino-builder/test/wipeout_build_path_if_build_options_changed_test.go
@@ -42,6 +42,7 @@ import (
 )
 
 func TestWipeoutBuildPathIfBuildOptionsChanged(t *testing.T) {
+    t.Skip("Can't run in Gentoo")
 	ctx := &types.Context{}
 
 	buildPath := SetupBuildPath(t, ctx)
@@ -73,6 +74,7 @@ func TestWipeoutBuildPathIfBuildOptionsChanged(t *testing.T) {
 }
 
 func TestWipeoutBuildPathIfBuildOptionsChangedNoPreviousBuildOptions(t *testing.T) {
+    t.Skip("Can't run in Gentoo")
 	ctx := &types.Context{}
 
 	buildPath := SetupBuildPath(t, ctx)
