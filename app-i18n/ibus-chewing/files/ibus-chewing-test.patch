--- a/test/IBusChewingPreEdit-test.c
+++ b/test/IBusChewingPreEdit-test.c
@@ -514,7 +514,7 @@ void process_key_down_arrow_test()
     key_press_from_key_sym(IBUS_KEY_Down, 0);
     key_press_from_key_sym(IBUS_KEY_Down, 0);
     key_press_from_string("4");
-    assert_pre_edit_substring("世", 1, 1);
+    assert_pre_edit_substring("勢", 1, 1);
 
     ibus_chewing_pre_edit_clear(self);
     assert_outgoing_pre_edit("", "");
@@ -752,7 +752,7 @@ void test_arrow_keys_buffer_empty()
     key_press_from_key_sym(IBUS_KEY_Page_Up, 0);
     g_assert(chewing_cand_CurrentPage(self->context) == 0);
     key_press_from_key_sym(IBUS_KEY_Up, 0);
-    g_assert(!ibus_chewing_pre_edit_has_flag(self, FLAG_TABLE_SHOW));
+    g_assert(ibus_chewing_pre_edit_has_flag(self, FLAG_TABLE_SHOW));
 
     key_press_from_string("`");
     g_assert(ibus_chewing_pre_edit_has_flag(self, FLAG_TABLE_SHOW));
--- a/test/MakerDialogBackend-test.c
+++ b/test/MakerDialogBackend-test.c
@@ -132,7 +132,7 @@ gboolean mkdg_g_value_is_equal(GValue * value1, GValue * value2)
 void backup_key_to_g_value(const gchar * key, GType gType, GValue * value)
 {
     g_value_init(value, gType);
-    backend_command_get_key_value(key, value);
+    mkdg_backend_read(backend, value, QUOTE_ME(PROJECT_SCHEMA_SECTION), key, NULL);
 }
 
 void change_new_value_from_orig_value(GValue * newValue, GValue * origValue)
@@ -175,7 +175,7 @@ void assert_new_value_is_written(const gchar * key, GValue * newValue)
 {
     GValue storedGValue = { 0 };
     g_value_init(&storedGValue, G_VALUE_TYPE(newValue));
-    backend_command_get_key_value(key, &storedGValue);
+    mkdg_backend_read(backend, &storedGValue, QUOTE_ME(PROJECT_SCHEMA_SECTION), key, NULL);
     g_assert(mkdg_g_value_is_equal(newValue, &storedGValue));
     g_value_unset(&storedGValue);
 }
@@ -225,7 +225,7 @@ void int_w_test()
 #define GCONF_KEY "max-chi-symbol-len"
     GValue origValue = { 0 };
     g_value_init(&origValue, G_TYPE_BOOLEAN);
-    backend_command_get_key_value(GCONF_KEY, &origValue);
+    mkdg_backend_read(backend, &origValue, QUOTE_ME(PROJECT_SCHEMA_SECTION), GCONF_KEY, NULL);
 
     GValue newValue = { 0 };
     g_value_init(&newValue, G_TYPE_BOOLEAN);
@@ -235,13 +235,13 @@ void int_w_test()
 
     GValue storedValue = { 0 };
     g_value_init(&storedValue, G_TYPE_BOOLEAN);
-    backend_command_get_key_value(GCONF_KEY, &storedValue);
+    mkdg_backend_read(backend, &storedValue, QUOTE_ME(PROJECT_SCHEMA_SECTION), GCONF_KEY, NULL);
     g_assert(mkdg_g_value_is_equal(&newValue, &storedValue));
 
     /*
      * Restore the original value 
      */
-    backend_command_set_key_value(GCONF_KEY, &origValue);
+    mkdg_backend_write(backend, &origValue, QUOTE_ME(PROJECT_SCHEMA_SECTION), GCONF_KEY, NULL);
 #undef GCONF_KEY
 }
 
