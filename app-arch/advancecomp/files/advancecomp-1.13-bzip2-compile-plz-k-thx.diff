--- advancecomp-1.13.orig/compress.cc	2004-12-16 23:19:17.779774920 -0200
+++ advancecomp-1.13/compress.cc	2004-12-16 23:36:05.356599960 -0200
@@ -181,16 +181,17 @@
 }
 
 #if USE_BZIP2
-bool compress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int blocksize, int workfactor)
+
+bool compress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned& out_size, int blocksize, int workfactor)
 {
-	return BZ2_bzBuffToBuffCompress(out_data, &out_size, const_cast<unsigned char*>(in_data), in_size, blocksize, 0, workfactor) == BZ_OK;
+	return BZ2_bzBuffToBuffCompress(out_data,&out_size,const_cast<char*>(in_data),in_size,blocksize,0,workfactor) == BZ_OK;
 }
 
-bool decompress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size)
+bool decompress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned out_size)
 {
 	unsigned size = out_size;
 
-	if (BZ2_bzBuffToBuffDecompress(out_data, &size, const_cast<unsigned char*>(in_data), in_size, 0, 0)!=BZ_OK)
+	if (BZ2_bzBuffToBuffDecompress(out_data,&size,const_cast< char*>(in_data),in_size,0,0)!=BZ_OK)
 		return false;
 
 	if (size != out_size)
--- advancecomp-1.13.orig/compress.h	2004-12-16 23:19:17.778775072 -0200
+++ advancecomp-1.13/compress.h	2004-12-16 23:37:00.178265800 -0200
@@ -37,8 +37,8 @@
 bool decompress_deflate_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size);
 bool compress_deflate_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int compression_level, int strategy, int mem_level);
 
-bool decompress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size);
-bool compress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int blocksize, int workfactor);
+bool decompress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned out_size);
+bool compress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned& out_size, int blocksize, int workfactor);
 
 bool decompress_rfc1950_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size);
 bool compress_rfc1950_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int compression_level, int strategy, int mem_level);
--- advancecomp-1.13.orig/stamp-h1	1969-12-31 21:00:00.000000000 -0300
+++ advancecomp-1.13/stamp-h1	2004-12-16 23:37:46.906162080 -0200
@@ -0,0 +1 @@
+timestamp for config.h
--- advancecomp-1.13.orig/zipsh.cc	2004-12-16 23:19:17.779774920 -0200
+++ advancecomp-1.13/zipsh.cc	2004-12-16 23:39:30.099474312 -0200
@@ -39,7 +39,7 @@
 		}
 #ifdef USE_BZIP2
 	} else if (info.compression_method == ZIP_METHOD_BZIP2) {
-		if (!decompress_bzip2(data, compressed_size_get(), uncompressed_data, uncompressed_size_get())) {
+		if (!decompress_bzip2((char *)data,compressed_size_get(),(char *)uncompressed_data,uncompressed_size_get())) {
 			throw error_invalid() << "Invalid compressed data on file " << name_get();
 		}
 #endif
@@ -247,7 +247,7 @@
 			c1_met = ZIP_METHOD_BZIP2;
 			c1_fla = 0;
 
-			if (!compress_bzip2(uncompressed_data, uncompressed_size_get(), c1_data, c1_size, bzip2_level, bzip2_workfactor)) {
+			if (!compress_bzip2((char *)uncompressed_data,uncompressed_size_get(),(char *)c1_data,c1_size,bzip2_level,bzip2_workfactor)) {
 				data_free(c1_data);
 				c1_data = 0;
 			}
