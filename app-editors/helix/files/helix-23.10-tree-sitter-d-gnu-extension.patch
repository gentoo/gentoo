From 394998798ef15175455a29cc239999e61ff78e6f Mon Sep 17 00:00:00 2001
From: Michal Rostecki <vadorovsky@protonmail.com>
Date: Wed, 6 Dec 2023 15:24:34 +0000
Bug: https://bugs.gentoo.org/912050
Subject: [PATCH] chore: Update tree-sitter-d

One of the included changes is gdamore/tree-sitter-d#22 which
fixes the build of Helix when using clang as `CC`.
---
 languages.toml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/languages.toml b/languages.toml
index 66b43472f5a3..7f1c6b769fad 100644
--- a/languages.toml
+++ b/languages.toml
@@ -2220,7 +2220,7 @@ formatter = { command = "dfmt" }
 
 [[grammar]]
 name = "d"
-source = { git = "https://github.com/gdamore/tree-sitter-d", rev="601c4a1e8310fb2f3c43fa8a923d0d27497f3c04" }
+source = { git = "https://github.com/gdamore/tree-sitter-d", rev = "5566f8ce8fc24186fad06170bbb3c8d97c935d74" }
 
 [[language]]
 name = "vhs"
diff --git a/runtime/grammars/sources/d/src/scanner.c b/runtime/grammars/sources/d/src/scanner.c
index 6753ba0..2061b02 100644
--- a/runtime/grammars/sources/d/src/scanner.c
+++ b/runtime/grammars/sources/d/src/scanner.c
@@ -67,7 +67,7 @@ match_escape(TSLexer *lexer)
 	case 'x':
 		for (int i = 0; i < 2; i++) { // expect two hex digits
 			lexer->advance(lexer, false);
-			if (!isascii(lexer->lookahead) ||
+			if (!(lexer->lookahead >= 0 && lexer->lookahead <= 127) ||
 			    !isxdigit(lexer->lookahead)) {
 				return (false);
 			}
@@ -78,7 +78,7 @@ match_escape(TSLexer *lexer)
 	case 'u':
 		for (int i = 0; i < 4; i++) {
 			lexer->advance(lexer, false);
-			if (!isascii(lexer->lookahead) ||
+			if (!(lexer->lookahead >= 0 && lexer->lookahead <= 127) ||
 			    !isxdigit(lexer->lookahead)) {
 				return (false);
 			}
@@ -89,7 +89,7 @@ match_escape(TSLexer *lexer)
 	case 'U':
 		for (int i = 0; i < 8; i++) {
 			lexer->advance(lexer, false);
-			if (!isascii(lexer->lookahead) ||
+			if (!(lexer->lookahead >= 0 && lexer->lookahead <= 127) ||
 			    !isxdigit(lexer->lookahead)) {
 				return (false);
 			}
@@ -123,7 +123,7 @@ match_escape(TSLexer *lexer)
 				}
 				break;
 			}
-			if (!isascii(lexer->lookahead) ||
+			if (!(lexer->lookahead >= 0 && lexer->lookahead <= 127) ||
 			    !isalnum(lexer->lookahead)) {
 				return (false);
 			}
