https://bugs.gentoo.org/727008
--- a/adl.h
+++ b/adl.h
@@ -4,10 +4,10 @@
 
 #include <stdbool.h>
 
-bool adl_active;
-bool opt_reorder;
-const int opt_targettemp;
-const int opt_overheattemp;
+extern bool adl_active;
+extern bool opt_reorder;
+extern const int opt_targettemp;
+extern const int opt_overheattemp;
 void init_adl(int nDevs);
 float gpu_temp(int gpu);
 int gpu_engineclock(int gpu);
--- a/driver-cpu.c
+++ b/driver-cpu.c
@@ -43,6 +43,8 @@
 
 BFG_REGISTER_DRIVER(cpu_drv)
 
+struct cgpu_info *cpus;
+
 #if defined(__linux) && defined(CPU_ZERO)  /* Linux specific policy and affinity management */
 #include <sched.h>
 static inline void drop_policy(void)
--- a/driver-opencl.c
+++ b/driver-opencl.c
@@ -795,7 +795,6 @@ char *print_ndevs_and_exit(int *ndevs)
 
 
 struct cgpu_info gpus[MAX_GPUDEVICES]; /* Maximum number apparently possible */
-struct cgpu_info *cpus;
 
 
 /* In dynamic mode, only the first thread of each device will be in use.
--- a/miner.c
+++ b/miner.c
@@ -3762,10 +3762,6 @@ static int statusy;
 static int devsummaryYOffset;
 static int total_lines;
 #endif
-#ifdef USE_OPENCL
-struct cgpu_info gpus[MAX_GPUDEVICES]; /* Maximum number apparently possible */
-#endif
-struct cgpu_info *cpus;
 
 bool _bfg_console_cancel_disabled;
 int _bfg_console_prev_cancelstate;
--- a/sha256_sse2_amd64.c
+++ b/sha256_sse2_amd64.c
@@ -48,7 +48,6 @@ static uint32_t g_sha256_k[]__attribute__((aligned(0x100))) = {
 const uint32_t sha256_init_sse2[8]__asm__("sha256_init_sse2")__attribute__((aligned(0x100))) =
 {0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};
 
-__m128i g_4sha256_k[64];
 __m128i sha256_consts_m128i[64]__asm__("sha256_consts_m128i")__attribute__((aligned(0x1000)));
 
 bool scanhash_sse2_64(struct thr_info * const thr, struct work * const work,
--- a/sha256_sse2_i386.c
+++ b/sha256_sse2_i386.c
@@ -48,7 +48,6 @@ static uint32_t g_sha256_k[]__attribute__((aligned(0x100))) = {
 const uint32_t sha256_32init[8]__attribute__((aligned(0x100))) =
 {0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};
 
-__m128i g_4sha256_k[64];
 __m128i sha256_consts_m128i[64]__asm__("sha256_consts_m128i")__attribute__((aligned(0x1000)));
 
 bool scanhash_sse2_32(struct thr_info * const thr, struct work * const work,
--- a/util.h
+++ b/util.h
@@ -217,7 +217,7 @@ void cgsleep_us(int64_t us);
 #define cgtimer_time(ts_start) timer_set_now(ts_start)
 #define cgsleep_prepare_r(ts_start) cgtimer_time(ts_start)
 void cgsleep_ms_r(cgtimer_t *ts_start, int ms);
-void (*cgsleep_us_r)(cgtimer_t *ts_start, int64_t us);
+extern void (*cgsleep_us_r)(cgtimer_t *ts_start, int64_t us);
 
 static inline
 int cgtimer_to_ms(cgtimer_t *cgt)
