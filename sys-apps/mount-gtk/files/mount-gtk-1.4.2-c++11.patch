http://bugs.gentoo.org/484264

--- configure.ac
+++ configure.ac
@@ -27,6 +27,7 @@
 AC_LANG_CPLUSPLUS dnl switch to C++
 AC_TYPE_SIZE_T
 AC_CHECK_TYPES(ssize_t)
+AX_CHECK_COMPILE_FLAG([-std=c++11], [CXXFLAGS="$CXXFLAGS -std=c++11"])
 AC_CHECK_RANGE_FOR_SUPPORT
 AC_CHECK_LAMBDA_SUPPORT
 
--- m4/ax_check_compile_flag.m4
+++ m4/ax_check_compile_flag.m4
@@ -0,0 +1,16 @@
+# This macro is part of autoconf-archive with license GPL-3 or any later version
+AC_DEFUN([AX_CHECK_COMPILE_FLAG],
+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX
+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
+  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
+    [AS_VAR_SET(CACHEVAR,[yes])],
+    [AS_VAR_SET(CACHEVAR,[no])])
+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
+AS_IF([test x"AS_VAR_GET(CACHEVAR)" = xyes],
+  [m4_default([$2], :)],
+  [m4_default([$3], :)])
+AS_VAR_POPDEF([CACHEVAR])dnl
+])dnl AX_CHECK_COMPILE_FLAGS
