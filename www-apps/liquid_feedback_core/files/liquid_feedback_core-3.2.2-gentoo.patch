--- a/lf_update_issue_order.c	2021-04-10 18:32:19.101947834 +0200
+++ b/lf_update_issue_order.c	2021-04-10 18:36:07.377117090 +0200
@@ -1,3 +1,5 @@
+#define _GNU_SOURCE
+
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
@@ -417,7 +419,7 @@
       logging = 1;
     }
     for (i=argb; i<argc; i++) len += strlen(argv[i]) + 1;
-    conninfo = malloc(len * sizeof(char));
+    conninfo = malloc(len * sizeof(char) + 1);
     if (!conninfo) {
       fprintf(stderr, "Error: Could not allocate memory for conninfo string.\n");
       abort();
--- a/lf_update_suggestion_order.c	2021-04-10 18:38:31.138743181 +0200
+++ b/lf_update_suggestion_order.c	2021-04-10 18:39:29.851786017 +0200
@@ -1,3 +1,5 @@
+#define _GNU_SOURCE
+
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
@@ -474,7 +476,7 @@
       logging = 1;
     }
     for (i=argb; i<argc; i++) len += strlen(argv[i]) + 1;
-    conninfo = malloc(len * sizeof(char));
+    conninfo = malloc(len * sizeof(char) + 1);
     if (!conninfo) {
       fprintf(stderr, "Error: Could not allocate memory for conninfo string.\n");
       abort();
--- a/lf_update.c	2021-04-10 18:40:48.036510216 +0200
+++ b/lf_update.c	2021-04-10 18:55:46.869758233 +0200
@@ -1,3 +1,5 @@
+#define _GNU_SOURCE
+
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
@@ -51,7 +53,7 @@
   {
     size_t len = 0;
     for (i=1; i<argc; i++) len += strlen(argv[i]) + 1;
-    conninfo = malloc(len * sizeof(char));
+    conninfo = malloc(len * sizeof(char) + 1);
     if (!conninfo) {
       fprintf(stderr, "Error: Could not allocate memory for conninfo string\n");
       return 1;
