#########################################################################
############  S E T U P #################################################

## -- INSTALL_BASE
## folder path to the webdav.conf, .css, .js, and. msg files for the Web interface
## (don't forget the trailing slash)
## DEFAULT: $INSTALL_BASE=q{} # use webdav.pl script path
$INSTALL_BASE = '/usr/share/webdavcgi-1.1/';

## -- VIRTUAL_BASE
## only neccassary if you use redirects or rewrites from a VIRTUAL_BASE to the DOCUMENT_ROOT;
## regular expressions are allowed
## EXAMPLE: $VIRTUAL_BASE = qr{/}xms
$VIRTUAL_BASE = '/webdav';

## -- DOCUMENT_ROOT
## by default the server document root
## (don't forget a trailing slash q{/}):
$DOCUMENT_ROOT = '/home/';

## -- UMASK
## mask for file/folder creation
## (it does not change permission of existing files/folders):
## DEFAULT: $UMASK = oct 2; # read/write/execute for users and groups, others get read/execute permissions
$UMASK = 0007;

## -- MIMEFILE
## path to your MIME types file
## EXAMPLE: $MIMEFILE = '/etc/mime.types';
$MIMEFILE = '/etc/webdavcgi-1.1/default/mime.types';

## -- ENABLE_COMPRESSION
## enables/disables gzip content encoding for the Web interface
## EXAMPLE: $ENABLE_COMPRESSION = 1;
$ENABLE_COMPRESSION = 0;

## -- ENABLE_DAVMOUNT
## enables DAV mount button in the folder navigation of the Web interface
## DEFAULT: $ENABLE_DAVMOUNT = 0;
$ENABLE_DAVMOUNT = 1;


## -- HEADER
## content after body tag in the Web interface
$HEADER =
q{<div class="header">WebDAV CGI - Web interface: You are logged in as ${USER} (<a href="$ENV{LOGOUTURL}" style="color:inherit;">Logout</a>) <div style="float:right;font-size:0.8em;">$NOW</div></div>.};

## -- DBI_(SRC/USER/PASS)
## database setup for LOCK/UNLOCK/PROPPATCH/PROPFIND data
##
## SQLite config
## If users share the same folder they should use the same database
## in this case you have to use a single file writeable for all users.
#$DBI_SRC='dbi:SQLite:dbname=/var/lib/webdavcgi/1.1/default/webdav.db';
#$DBI_USER='';
#$DBI_PASS='';
#$CREATE_DB = !-e '/var/lib/webdavcgi/1.1/default/webdav.db';

## MySQL config
#$DBI_SRC='DBI:mysql:database=webdavcgi;host=localhost;port=3306';
#$DBI_USER='mysqluser';
#$DBI_PASS='changeme';
#$CREATE_DB=0;

## PostgreSQL config
#$DBI_SRC='dbi:Pg:dbname=webdavcgi;host=localhost;port=5432';
#$DBI_USER='pguser';
#$DBI_PASS='changeme';
#$CREATE_DB = 0;

## -- ENABLE_CALDAV
## enable CalDAV support for Lightning/Sunbird/iCal/iPhone calender/task support
$ENABLE_CALDAV = 0;

## -- ENABLE_CARDDAV
## enable CardDAV support for Apple's Addressbook
$ENABLE_CARDDAV = 0;

## -- ENABLE_TRASH
## enables the server-side trash can (don't forget to setup $TRASH_FOLDER)
$ENABLE_TRASH = 0;

## -- TRASH_FOLDER
## neccessary if you enable trash
## it should be writable by your users (chmod a+rwxt <trash folder>)
## EXAMPLE: $TRASH_FOLDER = '/tmp/trash';
$TRASH_FOLDER = '/var/tmp/webdavcgi/1.1/default/trash';

## -- ENABLE_GROUPDAV
## enables GroupDAV (http://groupdav.org/draft-hess-groupdav-01.txt)
## EXAMPLE: $ENABLE_GROUPDAV = 0;
$ENABLE_GROUPDAV = 0;

## -- ENABLE_THUMBNAIL
## enables image thumbnail support and media rss feed for folder listings of the Web interface.
## If enabled the default icons for images will be replaced by thumbnails
## and if the mouse is over a icon the icon will be zoomed to the size of $THUMBNAIL_WIDTH.
## DEFAULT: $ENABLE_THUMBNAIL = 0;
$ENABLE_THUMBNAIL = 0;

## -- THUMBNAIL_CACHEDIR
## defines the path to a cache directory for image thumbnails
## this is neccessary if you enable the thumbnail cache ($ENABLE_THUMBNAIL_CACHE)
## EXAMPLE: $THUMBNAIL_CACHEDIR=".thumbs";
$THUMBNAIL_CACHEDIR = '/var/tmp/webdavcgi/1.1/default/thumbnails';

## -- OPTIMIZERTMP
### defines absolute path to a cache directory
$OPTIMIZERTMP = '/var/tmp/webdavcgi/1.1/default/optimized';

## -- BACKEND
## defines the WebDAV/Web interface backend (see $INSTALL_BASE/lib/perl/Backend/<BACKEND> for supported backends)
$BACKEND = 'FS';

## -- BACKEND_CONFIG
## allowes backend specific configurations (see doc/doc.html)
## EXAMPLE: $BACKEND_CONFIG{FS}={ fsvlink=> { '/home/testuser/' => {'testlink' => '/home/testuser/testlinkdest' } }}

## -- DEBUG
## enables/disables debug output
## you can find the debug output in your web server error log
$DEBUG = 0;

############  S E T U P - END ###########################################
#########################################################################
