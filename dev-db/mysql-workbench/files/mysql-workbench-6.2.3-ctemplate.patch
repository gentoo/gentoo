Fix compilation with ctemplate 2.3 by avoiding long-deprecated method.

Patch by Marcel PennewiÃŸ in https://bugs.gentoo.org/show_bug.cgi?id=533086

Unresolved upstream bug http://bugs.mysql.com/bug.php?id=72585

--- mysql-workbench-community-6.0.9-src/backend/wbpublic/sqlide/recordset_text_storage.cpp
+++ mysql-workbench-community-6.0.9-src/backend/wbpublic/sqlide/recordset_text_storage.cpp
@@ -204,7 +204,7 @@
       if (!pre_tpl)
         g_warning("Failed to open template file: `%s`", pre_tpl_path.c_str()); 
       else
-        pre_tpl->ReloadIfChanged();
+        pre_tpl->ReloadAllIfChanged();
     }      
     if (g_file_test((name+".post.tpl").c_str(), G_FILE_TEST_EXISTS))
     {
@@ -213,7 +213,7 @@
       if (!post_tpl)
         g_warning("Failed to open template file: `%s`", post_tpl_path.c_str());
       else
-        post_tpl->ReloadIfChanged();
+        post_tpl->ReloadAllIfChanged();
     }
   }    
   
@@ -222,7 +222,7 @@
       throw std::runtime_error(strfmt("Failed to open output file: `%s`", _file_path.c_str()));
   }
 
-  tpl->ReloadIfChanged();
+  tpl->ReloadAllIfChanged();
 
   std::auto_ptr<TemplateDictionary> dict(new TemplateDictionary("/"));
   BOOST_FOREACH (const Parameters::value_type &param, _parameters)
