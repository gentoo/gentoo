--- qdbm-1.8.78.orig/ruby/Makefile.in
+++ qdbm-1.8.78/ruby/Makefile.in
@@ -85,27 +85,27 @@
 	sync ; sync
 	cd depot && rm -rf casket
 	cd depot && \
-	  $(RUNENV) ruby -w -Ilib rbdptest write casket 10000 1000
+	  $(RUNENV) ruby -w -Ilib -I. rbdptest write casket 10000 1000
 	cd depot && \
-	  $(RUNENV) ruby -w -Ilib rbdptest read casket
+	  $(RUNENV) ruby -w -Ilib -I. rbdptest read casket
 	cd depot && \
-	  $(RUNENV) ruby -w -Ilib rbdptest misc casket
+	  $(RUNENV) ruby -w -Ilib -I. rbdptest misc casket
 	cd depot && rm -rf casket
 	cd curia && rm -rf casket
 	cd curia && \
-	  $(RUNENV) ruby -w -Ilib rbcrtest write casket 10000 1000 10
+	  $(RUNENV) ruby -w -Ilib -I. rbcrtest write casket 10000 1000 10
 	cd curia && \
-	  $(RUNENV) ruby -w -Ilib rbcrtest read casket
+	  $(RUNENV) ruby -w -Ilib -I. rbcrtest read casket
 	cd curia && \
-	  $(RUNENV) ruby -w -Ilib rbcrtest misc casket
+	  $(RUNENV) ruby -w -Ilib -I. rbcrtest misc casket
 	cd curia && rm -rf casket
 	cd villa && rm -rf casket
 	cd villa && \
-	  $(RUNENV) ruby -w -Ilib rbvltest write casket 10000
+	  $(RUNENV) ruby -w -Ilib -I. rbvltest write casket 10000
 	cd villa && \
-	  $(RUNENV) ruby -w -Ilib rbvltest read casket
+	  $(RUNENV) ruby -w -Ilib -I. rbvltest read casket
 	cd villa && \
-	  $(RUNENV) ruby -w -Ilib rbvltest misc casket
+	  $(RUNENV) ruby -w -Ilib -I. rbvltest misc casket
 	cd villa && rm -rf casket
 	@printf '\n'
 	@printf '#================================================================\n'
--- qdbm-1.8.78.orig/ruby/curia/mod_curia.c
+++ qdbm-1.8.78/ruby/curia/mod_curia.c
@@ -24,6 +24,13 @@
 
 #define MAXOPEN 1024
 
+#ifndef StringValuePtr
+#  define StringValuePtr(v) STR2CSTR(v)
+#endif
+#ifndef RSTRING_LEN
+#  define RSTRING_LEN(s) (RSTRING(s)->len)
+#endif
+
 
 VALUE ccuriaerror;
 VALUE ccuriaerror_ENOERR;
@@ -233,7 +240,7 @@
   const char *name;
   int index, omode, bnum, dnum;
   if((index = getnewindex()) == -1) myerror(DP_EMISC);
-  name = STR2CSTR(vname);
+  name = StringValuePtr(vname);
   FIXNUM_P(vomode);
   omode = FIX2INT(vomode);
   FIXNUM_P(vbnum);
@@ -276,10 +283,10 @@
   int index, ksiz, vsiz, dmode;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
-  vbuf = STR2CSTR(vval);
-  vsiz = RSTRING(vval)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
+  vbuf = StringValuePtr(vval);
+  vsiz = RSTRING_LEN(vval);
   FIXNUM_P(vdmode);
   dmode = FIX2INT(vdmode);
   curia = crtable[index];
@@ -297,8 +304,8 @@
   int index, ksiz;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   curia = crtable[index];
   if(!crout(curia, kbuf, ksiz)){
     if(crsltable[index] && dpecode == DP_ENOITEM) return Qfalse;
@@ -316,8 +323,8 @@
   VALUE vval;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   FIXNUM_P(vstart);
   start = FIX2INT(vstart);
   FIXNUM_P(vmax);
@@ -339,8 +346,8 @@
   int index, ksiz, vsiz;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   curia = crtable[index];
   if((vsiz = crvsiz(curia, kbuf, ksiz)) == -1){
     if(crsltable[index] && dpecode == DP_ENOITEM) return INT2FIX(-1);
--- qdbm-1.8.78.orig/ruby/curia/rbcrtest
+++ qdbm-1.8.78/ruby/curia/rbcrtest
@@ -21,7 +21,7 @@
 
 # main routine
 def main()
-  $0.gsub!(/.*\//, "")
+  $0 = $0.gsub(/.*\//, "")
   (ARGV.length >= 1) || usage()
   if(ARGV[0] == "write")
     rv = runwrite()
@@ -283,7 +283,7 @@
 
 
 # execute main
-$0.gsub!(/.*\//, "")
+$0 = $0.gsub(/.*\//, "")
 exit(main())
 
 
Only in qdbm-1.8.78/ruby/depot: mkmf.log
--- qdbm-1.8.78.orig/ruby/depot/mod_depot.c
+++ qdbm-1.8.78/ruby/depot/mod_depot.c
@@ -23,6 +23,13 @@
 
 #define MAXOPEN 1024
 
+#ifndef StringValuePtr
+#  define StringValuePtr(v) STR2CSTR(v)
+#endif
+#ifndef RSTRING_LEN
+#  define RSTRING_LEN(s) (RSTRING(s)->len)
+#endif
+
 
 VALUE cdepoterror;
 VALUE cdepoterror_ENOERR;
@@ -232,7 +239,7 @@
   const char *name;
   int index, omode, bnum;
   if((index = getnewindex()) == -1) myerror(DP_EMISC);
-  name = STR2CSTR(vname);
+  name = StringValuePtr(vname);
   FIXNUM_P(vomode);
   omode = FIX2INT(vomode);
   FIXNUM_P(vbnum);
@@ -273,10 +280,10 @@
   int index, ksiz, vsiz, dmode;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
-  vbuf = STR2CSTR(vval);
-  vsiz = RSTRING(vval)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
+  vbuf = StringValuePtr(vval);
+  vsiz = RSTRING_LEN(vval);
   FIXNUM_P(vdmode);
   dmode = FIX2INT(vdmode);
   depot = dptable[index];
@@ -294,8 +301,8 @@
   int index, ksiz;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   depot = dptable[index];
   if(!dpout(depot, kbuf, ksiz)){
     if(dpsltable[index] && dpecode == DP_ENOITEM) return Qfalse;
@@ -313,8 +320,8 @@
   VALUE vval;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   FIXNUM_P(vstart);
   start = FIX2INT(vstart);
   FIXNUM_P(vmax);
@@ -336,8 +343,8 @@
   int index, ksiz, vsiz;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   depot = dptable[index];
   if((vsiz = dpvsiz(depot, kbuf, ksiz)) == -1){
     if(dpsltable[index] && dpecode == DP_ENOITEM) return INT2FIX(-1);
--- qdbm-1.8.78.orig/ruby/depot/rbdptest
+++ qdbm-1.8.78/ruby/depot/rbdptest
@@ -21,7 +21,7 @@
 
 # main routine
 def main()
-  $0.gsub!(/.*\//, "")
+  $0 = $0.gsub(/.*\//, "")
   (ARGV.length >= 1) || usage()
   if(ARGV[0] == "write")
     rv = runwrite()
@@ -278,7 +278,7 @@
 
 
 # execute main
-$0.gsub!(/.*\//, "")
+$0 = $0.gsub(/.*\//, "")
 exit(main())
 
 
--- qdbm-1.8.78.orig/ruby/myrbdoc
+++ qdbm-1.8.78/ruby/myrbdoc
@@ -186,7 +186,7 @@
 
 
 # execute main
-#$0.gsub!(/.*\//, "")
+#$0 = $0.gsub(/.*\//, "")
 exit(main())
 
 
--- qdbm-1.8.78.orig/ruby/villa/mod_villa.c
+++ qdbm-1.8.78/ruby/villa/mod_villa.c
@@ -25,6 +25,13 @@
 
 #define MAXOPEN 1024
 
+#ifndef StringValuePtr
+#  define StringValuePtr(v) STR2CSTR(v)
+#endif
+#ifndef RSTRING_LEN
+#  define RSTRING_LEN(s) (RSTRING(s)->len)
+#endif
+
 
 VALUE cvillaerror;
 VALUE cvillaerror_ENOERR;
@@ -304,7 +311,7 @@
   int index, omode, cmode;
   VLCFUNC cmp;
   if((index = getnewindex()) == -1) myerror(DP_EMISC);
-  name = STR2CSTR(vname);
+  name = StringValuePtr(vname);
   FIXNUM_P(vomode);
   omode = FIX2INT(vomode);
   FIXNUM_P(vcmode);
@@ -352,10 +359,10 @@
   int index, ksiz, vsiz, dmode;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
-  vbuf = STR2CSTR(vval);
-  vsiz = RSTRING(vval)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
+  vbuf = StringValuePtr(vval);
+  vsiz = RSTRING_LEN(vval);
   FIXNUM_P(vdmode);
   dmode = FIX2INT(vdmode);
   villa = vltable[index];
@@ -373,8 +380,8 @@
   int index, ksiz;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   villa = vltable[index];
   if(!vlout(villa, kbuf, ksiz)){
     if(vlsltable[index] && dpecode == DP_ENOITEM) return Qfalse;
@@ -391,8 +398,8 @@
   VALUE vval;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   villa = vltable[index];
   if(!(vbuf = vlget(villa, kbuf, ksiz, &vsiz))){
     if(vlsltable[index] && dpecode == DP_ENOITEM) return Qnil;
@@ -409,8 +416,8 @@
   int index, ksiz, vsiz;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   villa = vltable[index];
   if((vsiz = vlvsiz(villa, kbuf, ksiz)) == -1){
     if(vlsltable[index] && dpecode == DP_ENOITEM) return INT2FIX(-1);
@@ -426,8 +433,8 @@
   int index, ksiz, vnum;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   villa = vltable[index];
   vnum = vlvnum(villa, kbuf, ksiz);
   return INT2FIX(vnum);
@@ -497,8 +504,8 @@
   VALUE vval;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  kbuf = STR2CSTR(vkey);
-  ksiz = RSTRING(vkey)->len;
+  kbuf = StringValuePtr(vkey);
+  ksiz = RSTRING_LEN(vkey);
   FIXNUM_P(vjmode);
   jmode = FIX2INT(vjmode);
   villa = vltable[index];
@@ -551,8 +558,8 @@
   int index, vsiz, cpmode;
   FIXNUM_P(vindex);
   if((index = FIX2INT(vindex)) == -1) myerror(DP_EMISC);
-  vbuf = STR2CSTR(vval);
-  vsiz = RSTRING(vval)->len;
+  vbuf = StringValuePtr(vval);
+  vsiz = RSTRING_LEN(vval);
   FIXNUM_P(vcpmode);
   cpmode = FIX2INT(vcpmode);
   villa = vltable[index];
--- qdbm-1.8.78.orig/ruby/villa/rbvltest
+++ qdbm-1.8.78/ruby/villa/rbvltest
@@ -21,7 +21,7 @@
 
 # main routine
 def main()
-  $0.gsub!(/.*\//, "")
+  $0 = $0.gsub(/.*\//, "")
   (ARGV.length >= 1) || usage()
   if(ARGV[0] == "write")
     rv = runwrite()
@@ -280,7 +280,7 @@
 
 
 # execute main
-$0.gsub!(/.*\//, "")
+$0 = $0.gsub(/.*\//, "")
 exit(main())
 
 
