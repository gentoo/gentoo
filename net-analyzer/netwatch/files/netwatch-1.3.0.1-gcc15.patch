--- a/dispdata.c
+++ b/dispdata.c
@@ -22,6 +22,7 @@
 #include <curses.h>
 #endif
 #endif
+
 #if NETINET_SUPP_icmp
 #include <netinet/ip_icmp.h>
 #else
@@ -33,6 +34,7 @@
 #include <linux/in.h>
 #endif
 
+#include <arpa/inet.h>
 
 #include <signal.h>
 #include <unistd.h>
@@ -48,7 +50,6 @@
 EXT_CREATE_LOCK(resolvechange);
 void clearnetresolv ();
 void startnetresolv ();
-char *inet_ntoa ();
 
 #define MAXREFRESH 85
 #define ROUTERSTATSMAX 160
@@ -296,11 +297,15 @@
 void print_icmp (unsigned char *dp, unsigned short len, char *s)
 {
   struct icmphdr *p = (struct icmphdr *) dp;
+  struct in_addr gw = { .s_addr = p->un.gateway };
 
   sprintf (s,
 	   "\\3 ICMP TYPE:\\2%-3d\\3 CODE:\\2%-3d\\3 ID:\\2%-5d\\3 SEQ:\\2%-5d\\3 GATEWAY:\\2%-15s \\3FRAGMTU:\\2%d ",
-	   p->type, p->code, ntohs (p->un.echo.id),
-	   ntohs (p->un.echo.sequence), inet_ntoa (p->un.gateway),
+	   p->type,
+	   p->code,
+	   ntohs (p->un.echo.id),
+	   ntohs (p->un.echo.sequence),
+	   inet_ntoa (gw),
 	   ntohs (p->un.frag.mtu));
 }
 
--- a/netwatch.c
+++ b/netwatch.c
@@ -1137,7 +1137,7 @@
 /*
    * Simple Control C and Hangup handler... to clean the screen 
 */
-void intrhandle ()
+void intrhandle (int)
 {
   //alarm (0);
   signal_intr (SIGALRM, SIG_DFL);
@@ -1537,7 +1537,7 @@
 
 }
 
-void winchange ()
+void winchange (int)
 {
   static struct winsize size;
 
