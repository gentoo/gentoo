https://bugs.gentoo.org/493022

From c31095e1562494a74d56b46fcc01541d1444cd5c Mon Sep 17 00:00:00 2001
From: Simon Dawson <spdawson@gmail.com>
Date: Sun, 8 Dec 2013 10:31:25 +0000
Subject: [PATCH] gpsmon: fix build when nmea is false

When nmea is False and ncurses support is enabled, the build fails as
follows.

gpsmon.o: In function `gpsmon_hook':
gpsmon.c:(.text+0x974): undefined reference to `driver_nmea0183'
collect2: error: ld returned 1 exit status
scons: *** [gpsmon] Error 1
scons: building terminated because of errors.

The problem appears to be a failure to protect use of the driver_nmea0183
variable with appropriate #ifdef guards.

Signed-off-by: Simon Dawson <spdawson@gmail.com>
Signed-off-by: Eric S. Raymond <esr@thyrsus.com>
---
 gpsmon.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/gpsmon.c b/gpsmon.c
index de1f14b..b030979 100644
--- a/gpsmon.c
+++ b/gpsmon.c
@@ -36,7 +36,9 @@ extern struct monitor_object_t garmin_mmt, garmin_bin_ser_mmt;
 extern struct monitor_object_t italk_mmt, ubx_mmt, superstar2_mmt;
 extern struct monitor_object_t fv18_mmt, gpsclock_mmt, mtk3301_mmt;
 extern struct monitor_object_t oncore_mmt, tnt_mmt, aivdm_mmt;
+#ifdef NMEA_ENABLE
 extern const struct gps_type_t driver_nmea0183;
+#endif /* NMEA_ENABLE */
 
 /* These are public */
 struct gps_device_t session;
@@ -477,9 +479,11 @@ static void select_packet_monitor(struct gps_device_t *device)
      */
     if (device->packet.type != last_type) {
 	const struct gps_type_t *active_type = device->device_type;
+#ifdef NMEA_ENABLE
 	if (device->packet.type == NMEA_PACKET
 	    && ((device->device_type->flags & DRIVER_STICKY) != 0))
 	    active_type = &driver_nmea0183;
+#endif /* NMEA_ENABLE */
 	if (!switch_type(active_type))
 	    longjmp(terminate, TERM_DRIVER_SWITCH);
 	else {
-- 
2.1.2

