From bbcd60ae52b6f1395ef2390a2d2ba9d0f98db548 Mon Sep 17 00:00:00 2001
From: "Alexander V. Wolf" <alex.v.wolf@gmail.com>
Date: Wed, 26 Mar 2025 01:55:43 +0700
Subject: [PATCH] [Qt 6.9] Fix compilation

---
 src/core/modules/ZoneArray.cpp |  2 +-
 src/gui/AngleSpinBox.cpp       | 12 +++++-------
 2 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/src/core/modules/ZoneArray.cpp b/src/core/modules/ZoneArray.cpp
index 19567500ae9bc..6ce092112767f 100644
--- a/src/core/modules/ZoneArray.cpp
+++ b/src/core/modules/ZoneArray.cpp
@@ -564,7 +564,7 @@ void SpecialZoneArray<Star>::searchAround(const StelCore* core, int index, const
 	const float dyrs = static_cast<float>(core->getJDE()-STAR_CATALOG_JDEPOCH)/365.25;
 	const SpecialZoneData<Star> *const z = getZones()+index;
 	Vec3d tmp;
-	double RA, DEC, pmra, pmdec, PlxErr, Plx, RadialVel;
+	double RA, DEC, pmra, pmdec, Plx, RadialVel;
 	for (const Star* s=z->getStars();s<z->getStars()+z->size;++s)
 	{
 		s->getFull6DSolution(RA, DEC, Plx, pmra, pmdec, RadialVel, dyrs);
diff --git a/src/gui/AngleSpinBox.cpp b/src/gui/AngleSpinBox.cpp
index 3b1e4f9f2267b..bb7cb5da0166a 100644
--- a/src/gui/AngleSpinBox.cpp
+++ b/src/gui/AngleSpinBox.cpp
@@ -509,25 +509,23 @@ QSize AngleSpinBox::minimumSizeHint() const
 		case DMSSymbolsUnsigned:
 		{
 			if (angleSpinBoxFormat == DMSLetters || angleSpinBoxFormat == DMSLettersUnsigned)
-				refText = QString("%1%2d %3m %4s").arg(signPlaceholder).arg(359).arg(59)
-				                                  .arg(0, 0, 'f', decimalPlaces, ' ');
+				refText = QString("%1%2d %3m %4s").arg(signPlaceholder).arg(359).arg(59).arg(0., 0, 'f', decimalPlaces, ' ');
 			else
-				refText = QString("%1%2째 %3' %4\"").arg(signPlaceholder).arg(359).arg(59)
-				                                   .arg(0, 0, 'f', decimalPlaces, ' ');
+				refText = QString("%1%2째 %3' %4\"").arg(signPlaceholder).arg(359).arg(59).arg(0., 0, 'f', decimalPlaces, ' ');
 			break;
 		}
 		case HMSLetters:
 		case HMSSymbols:
 		{
 			if (angleSpinBoxFormat == HMSLetters)
-				refText = QString("%1h %2m %3s").arg(23).arg(59).arg(0, 0, 'f', decimalPlaces, ' ');
+				refText = QString("%1h %2m %3s").arg(23).arg(59).arg(0., 0, 'f', decimalPlaces, ' ');
 			else
-				refText = QString("%1h %2' %3\"").arg(23).arg(59).arg(0, 0, 'f', decimalPlaces, ' ');
+				refText = QString("%1h %2' %3\"").arg(23).arg(59).arg(0., 0, 'f', decimalPlaces, ' ');
 			break;
 		}
 		case DecimalDeg:
 		{
-			refText = QString("%1%2째").arg(signPlaceholder).arg(360, 0, 'f', decimalPlaces, ' ');
+			refText = QString("%1%2째").arg(signPlaceholder).arg(360., 0, 'f', decimalPlaces, ' ');
 			break;
 		}
 		default:
