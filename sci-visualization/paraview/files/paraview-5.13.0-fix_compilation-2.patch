diff --git a/VTK/ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/filter/scalar_topology/worklet/contourtree_distributed/HierarchicalContourTree.h b/VTK/ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/filter/scalar_topology/worklet/contourtree_distributed/HierarchicalContourTree.h
index acd5eca2..5a23705d 100644
--- a/VTK/ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/filter/scalar_topology/worklet/contourtree_distributed/HierarchicalContourTree.h
+++ b/VTK/ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/filter/scalar_topology/worklet/contourtree_distributed/HierarchicalContourTree.h
@@ -663,7 +663,7 @@ std::string HierarchicalContourTree<FieldType>::PrintDotSuperStructure(const cha
   auto hyperarcsPortal = this->Hyperarcs.ReadPortal();
   auto regularNodeGlobalIdsPortal = this->RegularNodeGlobalIds.ReadPortal();
   auto whichIterationPortal = this->WhichIteration.ReadPortal();
-  auto whichRoundPortal = this->whichRound.ReadPortal();
+  auto whichRoundPortal = this->WhichRound.ReadPortal();
   auto superarcsPortal = this->Superarcs.ReadPortal();
   auto superparentsPortal = this->Superparents.ReadPortal();
   for (vtkm::Id supernode = 0; supernode < this->Supernodes.GetNumberOfValues(); supernode++)
@@ -708,7 +708,7 @@ std::string HierarchicalContourTree<FieldType>::PrintDotSuperStructure(const cha
     if (contourtree_augmented::NoSuchElement(superarcTo))
     { // no superarc
       // if it occurred on the final round, it's the global root and is shown as the NULL node
-      if (whichRoundPortal.Get(superarcFrom) == this->NRounds)
+      if (whichRoundPortal.Get(superarcFrom) == this->NumRounds)
       { // root node
         outstream << "\tSN" << std::setw(1) << superarcFrom << " -> SA" << std::setw(1) << superarc
                   << " [label=\"S" << std::setw(1) << superarc << "\",style=dotted]\n";
