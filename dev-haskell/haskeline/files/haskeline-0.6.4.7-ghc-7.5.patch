--- haskeline-0.6.4.7-orig/haskeline.cabal	2012-05-14 04:29:12.000000000 +1000
+++ haskeline-0.6.4.7/haskeline.cabal	2012-06-30 22:20:29.154377863 +1000
@@ -50,7 +50,7 @@
     }
     else {
         if impl(ghc>=6.11) {
-            Build-depends: base >=4.1 && < 4.6, containers>=0.1 && < 0.6, directory>=1.0 && < 1.2,
+            Build-depends: base >=4.1 && < 4.7, containers>=0.1 && < 0.6, directory>=1.0 && < 1.2,
                            bytestring>=0.9 && < 0.11
         }
         else {
--- haskeline-0.6.4.7-orig/System/Console/Haskeline/Monads.hs	2012-05-14 04:29:12.000000000 +1000
+++ haskeline-0.6.4.7/System/Console/Haskeline/Monads.hs	2012-06-30 22:21:34.478861860 +1000
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 module System.Console.Haskeline.Monads(
                 module Control.Monad.Trans,
                 module System.Console.Haskeline.MonadException,
@@ -18,7 +19,9 @@
 
 import Control.Monad.Trans
 import System.Console.Haskeline.MonadException
+#if !MIN_VERSION_base(4,6,0)
 import Prelude hiding (catch)
+#endif
 
 import Control.Monad.Reader hiding (MonadReader,ask,asks,local)
 import qualified Control.Monad.Reader as Reader
--- haskeline-0.6.4.7-orig/System/Console/Haskeline/MonadException.hs	2012-05-14 04:29:12.000000000 +1000
+++ haskeline-0.6.4.7/System/Console/Haskeline/MonadException.hs	2012-06-30 22:21:29.657752340 +1000
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {- | This module redefines some of the functions in "Control.Exception.Extensible" to
 work for more general monads than only 'IO'.
 -}
@@ -18,7 +19,9 @@
 
 import qualified Control.Exception.Extensible as E
 import Control.Exception.Extensible(Exception,SomeException)
+#if !MIN_VERSION_base(4,6,0)
 import Prelude hiding (catch)
+#endif
 import Control.Monad.Reader
 import Control.Monad.State
 import Control.Concurrent(ThreadId)
