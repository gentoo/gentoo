--- gtk+-1.2.10/acinclude.m4.orig	2006-05-24 23:23:51.000000000 -0700
+++ gtk+-1.2.10/acinclude.m4	2006-05-24 23:23:19.000000000 -0700
@@ -672,7 +672,7 @@
      AC_DEFINE(HAVE_STPCPY)
    fi
 
-   AM_LC_MESSAGES
+   gt_LC_MESSAGES
    AM_GTK_WITH_NLS
 
    if test "x$CATOBJEXT" != "x"; then
--- gtk+-1.2.10/gtk.m4.orig	2006-05-24 23:32:00.000000000 -0700
+++ gtk+-1.2.10/gtk.m4	2006-05-24 23:36:16.000000000 -0700
@@ -1,6 +1,11 @@
 # Configure paths for GTK+
 # Owen Taylor     97-11-3
-
+AC_DEFUN([GTK_AC_DIVERT_BEFORE_HELP],
+[ifdef([m4_divert_text], [m4_divert_text([NOTICE],[$1])],
+       [ifdef([AC_DIVERT], [AC_DIVERT([NOTICE],[$1])],
+              [AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
+$1
+AC_DIVERT_POP()])])])
 dnl AM_PATH_GTK([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])
 dnl Test for GTK, and define GTK_CFLAGS and GTK_LIBS
 dnl
--- gtk+-1.2.10/configure.in.orig	2006-05-25 05:45:06.000000000 -0700
+++ gtk+-1.2.10/configure.in	2006-05-25 05:44:08.000000000 -0700
@@ -1,6 +1,8 @@
+builtin(include,gtk.m4)
+
+
 # Process this file with autoconf to produce a configure script.
 AC_INIT(gdk/gdktypes.h)
-
 # In the following, there are a the following variants
 # of GLib cflags and libs variables
 #
@@ -12,12 +14,11 @@
 # glib_thread_cflags: cflags to store in gtk-config for gtk-config gthread
 # glib_thread_libs:   libs to store in gtk-config for gtk-config gthread
 
+AC_CANONICAL_TARGET
 # Save this value here, since automake will set cflags later
 cflags_set=${CFLAGS+set}
 
-dnl we need to AC_DIVERT_PUSH/AC_DIVERT_POP these variable definitions so they
-dnl are available for $ac_help expansion (don't we all *love* autoconf?)
-AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
+GTK_AC_DIVERT_BEFORE_HELP([
 #
 # Making releases:
 #   GTK_MICRO_VERSION += 1;
@@ -32,9 +33,8 @@
 GTK_MICRO_VERSION=10
 GTK_INTERFACE_AGE=1
 GTK_BINARY_AGE=10
-GTK_VERSION=$GTK_MAJOR_VERSION.$GTK_MINOR_VERSION.$GTK_MICRO_VERSION
-dnl
-AC_DIVERT_POP()dnl
+GTK_VERSION="$GTK_MAJOR_VERSION.$GTK_MINOR_VERSION.$GTK_MICRO_VERSION"
+])
 
 AC_SUBST(GTK_MAJOR_VERSION)
 AC_SUBST(GTK_MINOR_VERSION)
@@ -44,9 +44,9 @@
 AC_SUBST(GTK_VERSION)
 
 # libtool versioning
-LT_RELEASE=$GTK_MAJOR_VERSION.$GTK_MINOR_VERSION
+LT_RELEASE="$GTK_MAJOR_VERSION.$GTK_MINOR_VERSION"
 LT_CURRENT=`expr $GTK_MICRO_VERSION - $GTK_INTERFACE_AGE`
-LT_REVISION=$GTK_INTERFACE_AGE
+LT_REVISION="$GTK_INTERFACE_AGE"
 LT_AGE=`expr $GTK_BINARY_AGE - $GTK_INTERFACE_AGE`
 AC_SUBST(LT_RELEASE)
 AC_SUBST(LT_CURRENT)
@@ -54,11 +54,8 @@
 AC_SUBST(LT_AGE)
 
 # For automake.
-VERSION=$GTK_VERSION
-PACKAGE=gtk+
-
-# Save this value here, since automake will set cflags later
-cflags_set=${CFLAGS+set}
+VERSION="$GTK_VERSION"
+PACKAGE="gtk+"
 
 dnl Initialize automake stuff
 AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
@@ -67,42 +64,40 @@
 AM_CONFIG_HEADER(config.h)
 
 dnl Initialize libtool
-AM_PROG_LIBTOOL
+AC_PROG_LIBTOOL
 
 dnl Initialize maintainer mode
 AM_MAINTAINER_MODE
 
-AC_CANONICAL_HOST
-
 dnl figure debugging default, prior to $ac_help setup
-dnl
-AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
+
+GTK_AC_DIVERT_BEFORE_HELP([
 if test `expr $GTK_MINOR_VERSION \% 2` = 1 ; then
-        debug_default=yes
+  debug_default="yes"
 else
-        debug_default=minimum
+  debug_default="minimum"
 fi
-AC_DIVERT_POP()dnl
-
+])
 dnl declare --enable-* args and collect ac_help strings
-AC_ARG_ENABLE(debug, [  --enable-debug=[no/minimum/yes] turn on debugging [default=$debug_default]],,enable_debug=$debug_default)
+AC_ARG_ENABLE(debug, [  --enable-debug=[no/minimum/yes] turn on debugging [default=$debug_default]],,
+  [enable_debug="$debug_default"])
 AC_ARG_ENABLE(shm, [  --enable-shm            support shared memory if available [default=yes]],
-		   echo $enable_shm, enable_shm="yes")
-AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]],
-		    , enable_ansi=no)
+  [echo "$enable_shm"],[enable_shm="yes"])
+AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]],,[enable_ansi="no"])
 AC_ARG_WITH(glib, [  --with-glib=DIR         Use uninstalled copy of glib])
-AC_ARG_ENABLE(xim, [  --enable-xim            support XIM [default=yes]],
-			, enable_xim="yes")
-AC_ARG_ENABLE(xim_inst, [  --disable-xim-inst      does not use xim instantiate callback],
-			, enable_xim_inst="maybe")
-AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,enable_rebuilds=yes)
+AC_ARG_ENABLE(xim, [  --enable-xim            support XIM [default=yes]],,[enable_xim="yes"])
+AC_ARG_ENABLE(xim_inst, [  --disable-xim-inst      does not use xim instantiate callback],,
+  [enable_xim_inst="maybe"])
+AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,
+  [enable_rebuilds="yes"])
 AC_ARG_WITH(locale, [  --with-locale=LOCALE    locale name you want to use ])
-
 AC_ARG_WITH(xinput, [  --with-xinput=[no/gxi/xfree] support XInput ])
-AC_ARG_WITH(native_locale, [  --with-native-locale=[yes/no] Use native locale support [default=no]],,with_native_locale=no)
+AC_ARG_WITH(native_locale, [  --with-native-locale=[yes/no] Use native locale support [default=no]],,
+  [with_native_locale="no"])
+
 
 if test "x$enable_debug" = "xyes"; then
-  test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
+  test "$cflags_set" = "set" || CFLAGS="$CFLAGS -g"
   GTK_DEBUG_FLAGS="-DG_ENABLE_DEBUG"
 else
   if test "x$enable_debug" = "xno"; then
@@ -113,16 +108,14 @@
 fi
 
 AC_DEFINE_UNQUOTED(GTK_COMPILED_WITH_DEBUGGING, "${enable_debug}")
-
 # Build time sanity check...
 AM_SANITY_CHECK
 
 # Checks for programs.
 AC_PROG_CC
 AC_ISC_POSIX
-AM_PROG_CC_STDC
+AC_PROG_CC_STDC
 AC_PROG_INSTALL
-AC_PROG_MAKE_SET
 
 changequote(,)dnl
 if test "x$GCC" = "xyes"; then
@@ -144,7 +137,6 @@
   fi
 fi
 changequote([,])dnl
-
 # Honor aclocal flags
 ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"
 
@@ -158,8 +150,7 @@
 AC_CHECK_PROG(INDENT, indent, indent)
 
 REBUILD=\#
-if test "x$enable_rebuilds" = "xyes" && \
-     test -n "$PERL" && \
+if test "x$enable_rebuilds" = "xyes" && test -n "$PERL" && \
      $PERL -e 'exit !($] >= 5.002)' > /dev/null 2>&1 && \
      test -n "$AWK" ; then
   REBUILD=
@@ -194,55 +185,58 @@
 
 dnl Check for nl_langinfo and CODESET
 AC_MSG_CHECKING([for nl_langinfo (CODESET)])
-AC_TRY_COMPILE([#include <langinfo.h>],
+AC_TRY_COMPILE([#include <langinfo.h>
+  ],
         [char *codeset = nl_langinfo (CODESET);],
    AC_DEFINE(HAVE_CODESET,1,[Have nl_langinfo (CODESET)])
-   have_codeset=yes,
-   have_codeset=no)
+  have_codeset="yes",
+  have_codeset="no"
+)
 AC_MSG_RESULT($have_codeset)
 
 dnl The DU4 header files don't provide library prototypes unless 
 dnl -std1 is given to the native cc.
 AC_MSG_CHECKING([for extra flags to get ANSI library prototypes])
 
-gtk_save_LIBS=$LIBS
+gtk_save_LIBS="$LIBS"
 LIBS="$LIBS -lm"
 AC_TRY_RUN([#include <math.h>
              int main (void) { return (log(1) != log(1.)); }],
      AC_MSG_RESULT(none needed),
-     gtk_save_CFLAGS=$CFLAGS
+  [gtk_save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS -std1"
      AC_TRY_RUN([#include <math.h>
 	         int main (void) { return (log(1) != log(1.)); }],
          AC_MSG_RESULT(-std1),
          AC_MSG_RESULT()
-         CFLAGS=$gtk_save_CFLAGS
-         AC_MSG_WARN(
-                [No ANSI prototypes found in library. (-std1 didn't work.)]),
-	 true
-     ),
+    CFLAGS="$gtk_save_CFLAGS"
+    AC_MSG_WARN([No ANSI prototypes found in library. (-std1 didn't work.)]),
+  true)],
      AC_MSG_RESULT(none needed)
 )
-LIBS=$gtk_save_LIBS
+LIBS="$gtk_save_LIBS"
 
 dnl NeXTStep cc seems to need this
 AC_MSG_CHECKING([for extra flags for POSIX compliance])
-AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;],
+AC_TRY_COMPILE([#include <dirent.h>
+  ],[DIR *dir;],
   AC_MSG_RESULT(none needed),
-  gtk_save_CFLAGS=$CFLAGS
+  [gtk_save_CFLAGS="$CFLAGS"
   CFLAGS="$CFLAGS -posix"
-  AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;],
+  AC_TRY_COMPILE([#include <dirent.h>
+    ],[DIR *dir;],
     AC_MSG_RESULT(-posix),
     AC_MSG_RESULT()
-    CFLAGS=$gtk_save_CFLAGS
-    AC_MSG_WARN([Could not determine POSIX flag. (-posix didn't work.)])))
+    CFLAGS="$gtk_save_CFLAGS"
+    AC_MSG_WARN([Could not determine POSIX flag. (-posix didn't work.)])]))
 
-if test x$with_glib = xyes ; then
-  AC_MSG_ERROR([
-*** Directory must be specified for --with-glib])
+
+
+if test "x$with_glib" = "xyes" ; then
+  AC_MSG_ERROR([*** Directory must be specified for --with-glib])
 fi
 
-if test x$with_glib = x ; then 
+if test "x$with_glib" = "x" ; then 
   # Look for separately installed glib
 
   AM_PATH_GLIB(1.2.8,,
@@ -261,7 +255,7 @@
 else
   # Use uninstalled glib (assume they got the version right)
 
-  GLIB_CONFIG=$with_glib/glib-config
+  GLIB_CONFIG="$with_glib/glib-config"
   if test -x $GLIB_CONFIG ; then 
     :
   else
@@ -277,9 +271,9 @@
   glib_release=`$GLIB_CONFIG --version | sed 's%\\.[[0-9]]*$%%'`
 
   # canonicalize relative paths
-  case $with_glib in 
+  case "$with_glib" in 
     /*)
-      glib_dir=$with_glib
+      glib_dir="$with_glib"
       ;;
     *)
       glib_dir="\$(top_builddir)/$with_glib"
@@ -312,61 +306,56 @@
 saved_ldflags="$LDFLAGS"
 
 CFLAGS="$CFLAGS $X_CFLAGS"
-LDFLAGS="$LDFLAGS $X_LDFLAGS $X_LIBS"
+LDFLAGS="$LDFLAGS $X_LDFLAGS" 
 
 if test "x$no_x" = "xyes"; then 
   AC_MSG_ERROR([
 *** X libraries or include files not found. Check 'config.log' for 
 *** more details.])
 fi
-
 # Checks for libraries.
 # Check for the X11 library
-AC_CHECK_LIB(X11, XOpenDisplay, x_libs="-lX11 $X_EXTRA_LIBS", 
+AC_CHECK_LIB(X11,XOpenDisplay,
+  x_libs="-lX11 $X_EXTRA_LIBS", 
   AC_MSG_ERROR([*** libX11 not found. Check 'config.log' for more details.]),
-  $X_EXTRA_LIBS)
-
+  $X_EXTRA_LIBS
+)
 if test "x$enable_shm" = "xyes"; then
   # Check for the Xext library (needed for XShm extention)
   AC_CHECK_LIB(Xext, XShmAttach, 
       x_libs="-lXext $x_libs", 
       # On AIX, it is in XextSam instead, but we still need -lXext
-      AC_CHECK_LIB(XextSam, XShmAttach, 
+      [AC_CHECK_LIB(XextSam, XShmAttach, 
           x_libs="-lXextSam -lXext $x_libs", 
-          no_xext_lib=yes, $x_libs),
-      $x_libs)
+          no_xext_lib="yes",
+          $x_libs
+      )],
+      $x_libs
+  )
 fi
-
 # Check for shaped window extension
-
 AC_CHECK_LIB(Xext, XShapeCombineMask,
-      if test -z "`echo $x_libs | grep "\-lXext" 2> /dev/null`"; then
+  if test -z "`echo $x_libs | grep \-lXext 2> /dev/null`"; then
            x_libs="-lXext $x_libs"
       fi
-      AC_DEFINE(HAVE_SHAPE_EXT),
-      ,
-      $x_libs)
-
+  AC_DEFINE(HAVE_SHAPE_EXT),,
+  $x_libs
+)
 # Check for XConvertCase (X11R6 specific)
-
 AC_CHECK_LIB(X11, XConvertCase,
-      AC_DEFINE(HAVE_XCONVERTCASE),
-      ,
-      $x_libs)
-
+  AC_DEFINE(HAVE_XCONVERTCASE),,
+  $x_libs
+)
 # Check for XIM support.
-
-AC_CHECK_LIB(X11, XUnregisterIMInstantiateCallback,
-	    : ,
+AC_CHECK_LIB(X11, XUnregisterIMInstantiateCallback,,
 	    enable_xim_inst="no",
-	    $x_libs)
-
+  $x_libs
+)
 # On Solaris, calling XRegisterIMInstantiateCallback seems to
 # cause an immediate segfault, so we disable it, unless
 # the user specifically forces it to be on.
-
-if test x$enable_xim_inst = xmaybe ; then
-  case host in
+if test "x$enable_xim_inst" = "xmaybe" ; then
+  case "$host" in
 	*-*-solaris*)
             enable_xim_inst="no"
             ;;
@@ -384,16 +373,15 @@
 fi
 
 x_cflags="$X_CFLAGS"
-x_ldflags="$X_LDFLAGS $X_LIBS"
+x_ldflags="$X_LDFLAGS" 
 
 # set up things for XInput
-
 if test "x$with_xinput" = "xgxi"; then
   AC_MSG_WARN([
 *** The generic XInput support has not been tested for several years
 *** and is not known to work with any currently available X servers])
   AC_DEFINE(XINPUT_GXI)
-  xinput_progs=gxid
+  xinput_progs="gxid"
   x_libs="-lXi $x_libs"
 elif test "x$with_xinput" = "xxfree" || test "x$with_xinput" = "xyes"; then
   AC_DEFINE(XINPUT_XFREE)
@@ -413,77 +401,72 @@
 
 if test "x$enable_shm" = "xyes"; then
   # Check for shared memory
-  AC_CHECK_HEADER(sys/ipc.h, AC_DEFINE(HAVE_IPC_H), no_sys_ipc=yes)
-  AC_CHECK_HEADER(sys/shm.h, AC_DEFINE(HAVE_SHM_H), no_sys_shm=yes)
+  AC_CHECK_HEADER(sys/ipc.h, AC_DEFINE(HAVE_IPC_H), no_sys_ipc="yes")
+  AC_CHECK_HEADER(sys/shm.h, AC_DEFINE(HAVE_SHM_H), no_sys_shm="yes")
 
   # Check for the X shared memory extension header file
   AC_MSG_CHECKING(X11/extensions/XShm.h)
   if test "x$no_xext_lib" = "xyes"; then
     AC_MSG_RESULT(no)
-    no_xshm=yes
+    no_xshm="yes"
   else
     if test -f "$x_includes/X11/extensions/XShm.h"; then
       AC_MSG_RESULT(yes)
       AC_DEFINE(HAVE_XSHM_H)
     else
       AC_MSG_RESULT(no)
-      no_xshm=yes
+      no_xshm="yes"
     fi
   fi
 fi
-
 # Check if X_LOCALE definition is necessary
-
 AC_MSG_CHECKING(need -DX_LOCALE)
 
 AC_TRY_RUN([
 #include <stdio.h>
 #include <locale.h>
-
-int
-main ()
+  int main ()
 {
   return setlocale (LC_ALL, "${with_locale}") == NULL;
 }],
-need_x_locale=no,
-need_x_locale=yes,
-need_x_locale=no)
+  need_x_locale="no",
+  need_x_locale="yes",
+  need_x_locale="no"
+)
 AC_MSG_RESULT($need_x_locale)
 
-use_native_locale=no
-if test $need_x_locale = yes; then
+use_native_locale="no"
+if test "$need_x_locale" = "yes"; then
   GTK_LOCALE_FLAGS="-DX_LOCALE"
 else
-  if test x$with_native_locale = xyes ; then
+  if test "x$with_native_locale" = "xyes" ; then
     AC_MSG_CHECKING(functioning locale support)
   
-    AC_TRY_COMPILE([#include <stdlib.h>],[
-          char c;
+    AC_TRY_COMPILE([#include <stdlib.h>],
+      [char c;
           if (MB_CUR_MAX == 1) {
               wctomb(&c, 42);
-          }
-    ],use_native_locale=yes,)
-
+      }],
+      use_native_locale="yes"
+    )
     AC_MSG_RESULT($use_native_locale)
   fi
 fi
 
-if test x$use_native_locale = xyes ; then
+if test "x$use_native_locale" = "xyes" ; then
   AC_MSG_CHECKING(if sizeof(wchar_t) == 4)
 
-  AC_TRY_RUN([
-  #include <stdlib.h>
-
-  int
-  main ()
+  AC_TRY_RUN([#include <stdlib.h>
+    int main ()
   {
     return (sizeof(wchar_t) == 4) ? 0 : 1;
-  }],
-  ,use_native_locale=no,:)
+    }],,
+    use_native_locale="no"
+  )
   AC_MSG_RESULT($use_native_locale)
 fi
 
-if test $use_native_locale = yes ; then 
+if test "$use_native_locale" = "yes" ; then 
   AC_DEFINE(USE_NATIVE_LOCALE)
 fi
 
@@ -502,13 +485,17 @@
 
 # Check if <sys/select.h> needs to be included for fd_set
 AC_MSG_CHECKING([for fd_set])
-AC_TRY_COMPILE([#include <sys/types.h>],
-        [fd_set readMask, writeMask;], gtk_ok=yes, gtk_ok=no)
-if test $gtk_ok = yes; then
+AC_TRY_COMPILE([#include <sys/types.h>
+  ],
+  [fd_set readMask, writeMask;],
+  gtk_ok="yes",
+  gtk_ok="no"
+)
+if test "$gtk_ok" = "yes"; then
     AC_MSG_RESULT([yes, found in sys/types.h])
 else
-    AC_HEADER_EGREP(fd_mask, sys/select.h, gtk_ok=yes)
-    if test $gtk_ok = yes; then
+  AC_HEADER_EGREP(fd_mask, sys/select.h, gtk_ok="yes")
+  if test "$gtk_ok" = "yes"; then
         AC_DEFINE(HAVE_SYS_SELECT_H)
         AC_MSG_RESULT([yes, found in sys/select.h])
     else
@@ -520,30 +507,35 @@
 # Duplicate `widechar' tests from `glib'.
 # Check for wchar.h
 AC_MSG_CHECKING(for wchar.h)
-AC_TRY_CPP([#include <wchar.h>], gtk_ok=yes, gtk_ok=no)
-if test $gtk_ok = yes; then
+AC_TRY_CPP([#include <wchar.h>
+  ],
+  gtk_ok="yes",
+  gtk_ok="no"
+)
+if test "$gtk_ok" = "yes"; then
    AC_DEFINE(HAVE_WCHAR_H,1,[Define if wchar.h exists])
 fi
 AC_MSG_RESULT($gtk_ok)
 
 # Check for wctype.h (for iswalnum)
 AC_MSG_CHECKING(for wctype.h)
-AC_TRY_CPP([#include <wctype.h>], gtk_ok=yes, gtk_ok=no)
-if test $gtk_ok = yes; then
+AC_TRY_CPP([#include <wctype.h>], gtk_ok="yes", gtk_ok="no")
+if test "$gtk_ok" = "yes"; then
    AC_DEFINE(HAVE_WCTYPE_H,1,[Define if wctype.h exists])
 fi
 AC_MSG_RESULT($gtk_ok)
 
 # in Solaris 2.5, `iswalnum' is in -lw
 GDK_WLIBS=
-AC_CHECK_FUNC(iswalnum,,[AC_CHECK_LIB(w,iswalnum,GDK_WLIBS=-lw)])
+AC_CHECK_FUNC(iswalnum,,[AC_CHECK_LIB(w,iswalnum,GDK_WLIBS="-lw")])
 
 # The following is necessary for Linux libc-5.4.38
 oLIBS="$LIBS"
 LIBS="$LIBS $GDK_WLIBS"
 AC_MSG_CHECKING(if iswalnum() and friends are properly defined)
-AC_TRY_LINK([#include <stdlib.h>],[
-#if (defined(HAVE_WCTYPE_H) || defined(HAVE_WCHAR_H))
+AC_TRY_LINK([#include <stdlib.h>
+  ],
+  [#if (defined(HAVE_WCTYPE_H) || defined(HAVE_WCHAR_H))
 #  ifdef HAVE_WCTYPE_H
 #    include <wctype.h>
 #  else
@@ -554,11 +546,13 @@
 #else
 #  define iswalnum(c) ((wchar_t)(c) <= 0xFF && isalnum(c))
 #endif
-iswalnum((wchar_t) 0);
-], gtk_ok=yes, gtk_ok=no)
+  iswalnum((wchar_t) 0);],
+  gtk_ok="yes",
+  gtk_ok="no"
+)
 LIBS="$oLIBS"
 
-if test $gtk_ok = no; then
+if test "$gtk_ok" = "no"; then
    AC_DEFINE(HAVE_BROKEN_WCTYPE,1,[Define if the wctype function is broken])
    GDK_WLIBS=
 fi
@@ -580,5 +574,5 @@
 gtk/Makefile
 gtk/gtkfeatures.h
 gdk.pc
-gtk+.pc
-], [chmod +x gtk-config])
+gtk+.pc],
+[chmod +x gtk-config])
--- gtk+-1.2.10/gdk/Makefile.am.orig	2006-05-19 02:41:18.000000000 -0700
+++ gtk+-1.2.10/gdk/Makefile.am		2006-05-19 02:11:54.000000000 -0700
@@ -21,12 +21,11 @@
 	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
 	-release $(LT_RELEASE) \
 	-export-dynamic \
-	@GLIB_DEPLIBS@	\
 	@x_ldflags@	\
-	@x_libs@	\
-	-lm		\
 @STRIP_END@
 
+libgdk_la_LIBADD = @GLIB_DEPLIBS@ @x_libs@ -lm
+
 #
 # setup source file variables
 #
@@ -104,14 +103,13 @@
 EXTRA_PROGRAMS = gxid
 bin_PROGRAMS = @xinput_progs@
 LDADDS = @STRIP_BEGIN@ \
-	@x_ldflags@	\
 	@x_libs@	\
 	@GLIB_LIBS@	\
 	-lm		\
 @STRIP_END@
 gxid_SOURCES = gxid.c
 gxid_LDADD = $(LDADDS)
-
+gxid_LDFLAGS = @x_ldflags@
 
 .PHONY: files
 
--- gtk+-1.2.10/gtk/Makefile.am.orig	2006-05-25 07:40:45.000000000 -0700
+++ gtk+-1.2.10/gtk/Makefile.am	2006-05-25 07:43:20.000000000 -0700
@@ -27,13 +27,15 @@
 	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)	\
 	-release $(LT_RELEASE) 					\
 	-export-dynamic						\
-	@GLIB_DEPLIBS@ 						\
 	@x_ldflags@						\
-	@x_libs@ 						\
-	-lm							\
 @STRIP_END@
-#	$(top_builddir)/gdk/libgdk.la
-
+libgtk_la_LIBADD = @STRIP_BEGIN@ \
+        $(top_builddir)/gdk/libgdk.la   \
+        @x_libs@                        \
+        @GDK_WLIBS@                     \
+        @GLIB_LIBS@                     \
+        -lm                             \
+	@STRIP_END@
 
 #
 # setup source file variables
@@ -374,14 +376,17 @@
 
 
 gtkconfdir = $(sysconfdir)/gtk
-gtkconf_DATA = gtkrc.az gtkrc.he gtkrc.hy gtkrc.ja \
+# removed references to non-existent gtkrc files - tsh
+gtkconf_DATA = \
+	gtkrc.az gtkrc.he gtkrc.hy gtkrc.ja \
 	gtkrc.ko gtkrc.ru gtkrc.th gtkrc.uk \
-	gtkrc.utf-8 gtkrc.iso-8859-2 \
-	gtkrc.iso-8859-3 gtkrc.iso-8859-5 gtkrc.iso-8859-7 \
-	gtkrc.iso-8859-9 gtkrc.iso-8859-13 gtkrc.iso-8859-14 \
-	gtkrc.iso-8859-15 gtkrc.zh_CN gtkrc.zh_TW.big5 \
-	gtkrc.ka_GE.georgianacademy gtkrc.ka_GE.georgianps \
-	gtkrc.vi_VN.tcvn gtkrc.vi_VN.viscii gtkrc.cp1251 gtkrc.cp1255
+	gtkrc.iso-8859-2 gtkrc.iso-8859-5 \
+	gtkrc.iso-8859-13 gtkrc.iso-8859-14 \
+	gtkrc.iso-8859-15 gtkrc.zh_TW.big5 \
+	gtkrc.zh_CN gtkrc.cp1251 gtkrc.cp1255 \
+	gtkrc.ka_GE.georgianacademy \
+	gtkrc.ka_GE.georgianps \
+	gtkrc.vi_VN.tcvn gtkrc.vi_VN.viscii
 
 # We create a dummy theme for the default GTK+ theme
 install-data-local:
@@ -428,7 +433,6 @@
 LDADDS = @STRIP_BEGIN@ \
 	libgtk.la			\
 	$(top_builddir)/gdk/libgdk.la	\
-	@x_ldflags@			\
 	@x_libs@			\
 	@GDK_WLIBS@			\
 	@GLIB_LIBS@			\
@@ -441,12 +445,20 @@
 testdnd_DEPENDENCIES = $(DEPS)
 simple_DEPENDENCIES = $(DEPS)
 #testthreads_DEPENDENCIES = $(DEPS)
+
 testgtk_LDADD = $(LDADDS)
+testgtk_LDFLAGS=@x_ldflags@
 testinput_LDADD = $(LDADDS)
+testinput_LDFLAGS = @x_ldflags@
 testselection_LDADD = $(LDADDS)
+testselection_LDFLAGS = @x_ldflags@
 testrgb_LDADD = $(LDADDS)
+testrgb_LDFLAGS = @x_ldflags@
 testdnd_LDADD = $(LDADDS)
+testdnd_LDFLAGS = @x_ldflags@
 simple_LDADD = $(LDADDS)
+simple_LDFLAGS = @x_ldflags@
+
 #testthreads_LDADD = $(LDADDS)
 
 .PHONY: files test test-debug
