commit fa2aeeccd5366378ca2eb83c6daee64b511fe792
Author: Felix Yan <felixonmars@archlinux.org>
Date:   Tue May 16 01:32:56 2017 +0800

    Add support for Linux 4.11+

diff --git a/ndiswrapper/driver/ndis.c b/ndiswrapper/driver/ndis.c
index c1913a05..2ab4dd21 100644
--- a/driver/ndis.c
+++ b/driver/ndis.c
@@ -2258,7 +2258,9 @@ wstdcall void NdisMIndicateReceivePacket(struct ndis_mp_block *nmb,
 			WARNING("empty packet ignored");
 			continue;
 		}
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
 		wnd->net_dev->last_rx = jiffies;
+#endif
 		/* get total number of bytes in packet */
 		NdisGetFirstBufferFromPacketSafe(packet, &buffer, &virt,
 						 &length, &total_length,
@@ -2346,7 +2348,9 @@ wstdcall void EthRxIndicateHandler(struct ndis_mp_block *nmb, void *rx_ctx,
 		ERROR("nmb is NULL");
 		EXIT3(return);
 	}
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
 	wnd->net_dev->last_rx = jiffies;
+#endif
 
 	if (look_ahead_size < packet_size) {
 		struct ndis_packet *packet;
@@ -2461,7 +2465,9 @@ wstdcall void NdisMTransferDataComplete(struct ndis_mp_block *nmb,
 		WARNING("illegal packet");
 		EXIT3(return);
 	}
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
 	wnd->net_dev->last_rx = jiffies;
+#endif
 	oob_data = NDIS_PACKET_OOB_DATA(packet);
 	skb_size = sizeof(oob_data->header) + oob_data->look_ahead_size +
 		bytes_txed;
diff --git a/ndiswrapper/driver/ntoskernel.h b/ndiswrapper/driver/ntoskernel.h
index 3c4c6ff0..f1c52e51 100644
--- a/driver/ntoskernel.h
+++ b/driver/ntoskernel.h
@@ -296,6 +296,10 @@ static inline void (INIT_WORK)(struct work_struct *work, work_func_t func)
 #define add_taint(flag, lockdep_ok) add_taint(flag)
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
+#include <linux/sched/signal.h>
+#endif
+
 #include "winnt_types.h"
 #include "ndiswrapper.h"
 #include "pe_linker.h"
