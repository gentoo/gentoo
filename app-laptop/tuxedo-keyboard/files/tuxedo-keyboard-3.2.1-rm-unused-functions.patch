https://github.com/tuxedocomputers/tuxedo-keyboard/pull/162
https://github.com/tuxedocomputers/tuxedo-keyboard/issues/164
https://bugs.gentoo.org/902133

diff --git a/src/tuxedo_io/tuxedo_io.c b/src/tuxedo_io/tuxedo_io.c
index 879efd7..5cf4f20 100644
--- a/src/tuxedo_io/tuxedo_io.c
+++ b/src/tuxedo_io/tuxedo_io.c
@@ -49,19 +49,6 @@ static u32 id_check_uniwill;
 
 static struct uniwill_device_features_t *uw_feats;
 
-/**
- * strstr version of dmi_match
- */
-static bool dmi_string_in(enum dmi_field f, const char *str)
-{
-	const char *info = dmi_get_system_info(f);
-
-	if (info == NULL || str == NULL)
-		return info == str;
-
-	return strstr(info, str) != NULL;
-}
-
 static u32 clevo_identify(void)
 {
 	return clevo_get_active_interface_id(NULL) == 0 ? 1 : 0;
@@ -181,7 +168,7 @@ static long clevo_ioctl_interface(struct file *file, unsigned int cmd, unsigned
 
 	const char str_no_if[] = "";
 	char *str_clevo_if;
-	
+
 	switch (cmd) {
 		case R_CL_HW_IF_STR:
 			if (clevo_get_active_interface_id(&str_clevo_if) == 0) {
@@ -814,7 +801,7 @@ static int __init tuxedo_io_init(void)
 	tuxedo_io_device_class = class_create(THIS_MODULE, "tuxedo_io");
 	device_create(tuxedo_io_device_class, NULL, tuxedo_io_device_handle, NULL, "tuxedo_io");
 	pr_debug("Module init successful\n");
-	
+
 	return 0;
 }
 
diff --git a/src/uniwill_keyboard.h b/src/uniwill_keyboard.h
index 332acd6..859dc30 100644
--- a/src/uniwill_keyboard.h
+++ b/src/uniwill_keyboard.h
@@ -51,7 +51,6 @@
 #define UNIWILL_OSD_TOUCHPADWORKAROUND		0xFFF
 
 static void uw_charging_priority_write_state(void);
-static void uw_charging_profile_write_state(void);
 
 struct tuxedo_keyboard_driver uniwill_keyboard_driver;
 
@@ -771,12 +770,6 @@ static int uw_has_charging_profile(bool *status)
 	return 0;
 }
 
-static void uw_charging_profile_write_state(void)
-{
-	if (uw_charging_profile_loaded)
-		uw_set_charging_profile(uw_charging_profile_last_written_value);
-}
-
 static void uw_charging_profile_init(struct platform_device *dev)
 {
 	u8 value;
