Correct type used for all calls to socket-related business,
so the won't throw errors.
https://bugs.gentoo.org/949721
--- a/src/arpd/io.c
+++ b/src/arpd/io.c
@@ -276,7 +276,8 @@
     struct atm_qos qos;
     ENTRY *entry;
     VCC *vcc;
-    int fd,len,size,error;
+    int fd,error;
+    socklen_t len,size;
 
     len = sizeof(addr);
     if ((fd = accept(incoming,(struct sockaddr *) &addr,&len)) < 0) {
@@ -613,7 +614,8 @@
 
 int get_local(int fd,struct sockaddr_atmsvc *addr)
 {
-    int length,result;
+    int result;
+    socklen_t length;
 
     length = sizeof(struct sockaddr_atmsvc);
     result = getsockname(fd,(struct sockaddr *) addr,&length);
--- a/src/arpd/table.c
+++ b/src/arpd/table.c
@@ -101,7 +101,8 @@
     char addr_buf[MAX_ATM_ADDR_LEN+1];
     char qos_buf[MAX_ATM_QOS_LEN+1];
     struct atm_qos qos;
-    int size,sndbuf;
+    int sndbuf;
+    socklen_t size;
 
     size = sizeof(addr);
     if (getpeername(vcc->fd,(struct sockaddr *) &addr,&size) < 0) {
--- a/src/include/atmd.h
+++ b/src/include/atmd.h
@@ -104,7 +104,7 @@
 typedef struct {
     int	s;			/* socket */
     struct sockaddr_un addr;	/* reply address */
-    int size;			/* address size */
+    socklen_t size;			/* address size */
 } UN_CTX;
 
 
--- a/src/lane/connect_bus.c
+++ b/src/lane/connect_bus.c
@@ -170,7 +170,8 @@
 data_handler(const Event_t *event, void *funcdata)
 {
   Conn_t *tmp, *newconn;
-  int fd, nbytes;
+  int fd;
+  socklen_t nbytes;
   static char buffer[BUFSIZE];
   struct sockaddr_atmsvc addr;
 
--- a/src/lane/connect.c
+++ b/src/lane/connect.c
@@ -258,7 +258,8 @@
 data_handler(const Event_t *event, void *funcdata)
 {
   Conn_t *tmp, *newconn;
-  int fd, nbytes;
+  int fd;
+  socklen_t nbytes;
   static char buffer[BUFSIZE];
   LaneControl_t *ctmp;
   struct sockaddr_atmsvc addr;
--- a/src/lane/lane_atm.c
+++ b/src/lane/lane_atm.c
@@ -138,7 +138,7 @@
   struct atm_blli blli;
   struct atm_qos qos;
   int fd, ret;
-  int len = sizeof(address);
+  socklen_t len = sizeof(address);
   
   fd = socket(PF_ATMSVC, SOCK_DGRAM, 0);
   if (fd <0) {
--- a/src/lane/lecs.c
+++ b/src/lane/lecs.c
@@ -119,7 +119,7 @@
   int just_dump=0;
   fd_set fds;
   struct sockaddr_atmsvc client;
-  int len;
+  socklen_t len;
   unsigned char buffer[P_SIZE];
 
   while(i!=-1) {
--- a/src/lib/sdu2cell.c
+++ b/src/lib/sdu2cell.c
@@ -15,7 +15,8 @@
 {
     struct atm_qos qos;
     int trailer,total,cells;
-    int size,i;
+    int i;
+    socklen_t size;
 
     size = sizeof(qos);
     if (getsockopt(s,SOL_AAL,SO_ATMQOS,&qos,&size) < 0) return -1;
--- a/src/lib/unix.c
+++ b/src/lib/unix.c
@@ -64,7 +64,7 @@
 int un_recv_connect(int s,void *buf,int size)
 {
     struct sockaddr_un addr;
-    int addr_size;
+    socklen_t addr_size;
     int len;
 
     addr_size = sizeof(addr);
--- a/src/maint/atmtcp.c
+++ b/src/maint/atmtcp.c
@@ -817,7 +817,8 @@
 	}
 	else if (!strcmp(ARG,"listen") ||
 	  (do_background = !strcmp(ARG,"listen-bg"))) {
-	    int fd,port,addr_len;
+	    int fd,port;
+	    socklen_t addr_len;
 	    int *fd2 = alloc_t(int);
 
 	    if ((fd = socket(PF_INET,SOCK_STREAM,0)) < 0) {
--- a/src/mpoad/io.c
+++ b/src/mpoad/io.c
@@ -521,7 +521,8 @@
 static int accept_conn(int slot)
 {
         struct sockaddr_atmsvc sa;
-        int i, new_fd, sa_len;
+        int i, new_fd;
+        socklen_t sa_len;
 
         sa_len = sizeof(sa);
         new_fd = accept(fds[slot].fd, (struct sockaddr *)&sa, &sa_len);
--- a/src/sigd/io.c
+++ b/src/sigd/io.c
@@ -355,7 +355,7 @@
     error = 0;
     if (bind(s,(struct sockaddr *) &addr,sizeof(addr)) < 0) error = errno;
     else {
-	int size;
+	socklen_t size;
 
 	size = sizeof(addr);
 	if (getsockname(s,(struct sockaddr *) &addr,&size) < 0)
--- a/src/test/ttcp.c
+++ b/src/test/ttcp.c
@@ -92,7 +92,8 @@
 struct sockaddr_atmsvc satm;
 struct atm_qos qos;
 
-int domain, fromlen;
+int domain;
+socklen_t fromlen;
 int fd;				/* fd of network socket */
 
 int buflen = 8 * 1024;		/* length of buffer */
@@ -466,7 +467,7 @@
 	    
 	    {
 		struct sockaddr_atmsvc peer;
-		int peerlen = sizeof(peer);
+		socklen_t peerlen = sizeof(peer);
 		if (getpeername(fd, (struct sockaddr *) &peer, 
 				&peerlen) < 0) {
 		    err("getpeername");
@@ -498,7 +499,7 @@
     /* set socket buffer size */
 #if defined(SO_SNDBUF) || defined(SO_RCVBUF)
     if (sockbufsize) {
-	int len;
+	socklen_t len;
 
 	if (trans) {
 	    /* set send socket buffer if we are transmitting */    
