From f529a1df2b17bcada1179ddcaf1352e3a5ba97b8 Mon Sep 17 00:00:00 2001
From: Maksim Shabunin <maksim.shabunin@itseez.com>
Date: Tue, 15 Dec 2015 17:51:08 +0300
Subject: [PATCH] Fixed HAL headers location

diff --git opencv_contrib-master/modules/xfeatures2d/src/sift.cpp opencv_contrib-master/modules/xfeatures2d/src/sift.cpp
index fc67c4d..9634fbb 100644
--- opencv_contrib-master/modules/xfeatures2d/src/sift.cpp
+++ opencv_contrib-master/modules/xfeatures2d/src/sift.cpp
@@ -105,6 +105,7 @@
 #include "precomp.hpp"
 #include <iostream>
 #include <stdarg.h>
+#include <opencv2/core/hal/hal.hpp>
 
 namespace cv
 {
@@ -337,9 +338,9 @@ static float calcOrientationHist( const Mat& img, Point pt, int radius,
     len = k;
 
     // compute gradient values, orientations and the weights over the pixel neighborhood
-    hal::exp(W, W, len);
-    hal::fastAtan2(Y, X, Ori, len, true);
-    hal::magnitude(X, Y, Mag, len);
+    cv::hal::exp32f(W, W, len);
+    cv::hal::fastAtan2(Y, X, Ori, len, true);
+    cv::hal::magnitude32f(X, Y, Mag, len);
 
     for( k = 0; k < len; k++ )
     {
@@ -620,9 +621,9 @@ static void calcSIFTDescriptor( const Mat& img, Point2f ptf, float ori, float sc
         }
 
     len = k;
-    hal::fastAtan2(Y, X, Ori, len, true);
-    hal::magnitude(X, Y, Mag, len);
-    hal::exp(W, W, len);
+    cv::hal::fastAtan2(Y, X, Ori, len, true);
+    cv::hal::magnitude32f(X, Y, Mag, len);
+    cv::hal::exp32f(W, W, len);
 
     for( k = 0; k < len; k++ )
     {

diff --git opencv_contrib-master/modules/optflow/src/motempl.cpp opencv_contrib-master/modules/optflow/src/motempl.cpp
index ec18013..452ad63 100644
--- opencv_contrib-master/modules/optflow/src/motempl.cpp
+++ opencv_contrib-master/modules/optflow/src/motempl.cpp
@@ -41,6 +41,7 @@
 
 #include "precomp.hpp"
 #include "opencv2/core/utility.hpp"
+#include "opencv2/core/hal/hal.hpp"
 #include "opencl_kernels_optflow.hpp"
 
 namespace  cv {
@@ -212,7 +213,7 @@ void calcMotionGradient( InputArray _mhi, OutputArray _mask,
         float* orient_row = orient.ptr<float>(y);
         uchar* mask_row = mask.ptr<uchar>(y);
 
-        hal::fastAtan2(dY_max_row, dX_min_row, orient_row, size.width, true);
+        cv::hal::fastAtan2(dY_max_row, dX_min_row, orient_row, size.width, true);
 
         // make orientation zero where the gradient is very small
         for( x = 0; x < size.width; x++ )
diff --git opencv_contrib-master/modules/ximgproc/src/fgs_filter.cpp opencv_contrib-master/modules/ximgproc/src/fgs_filter.cpp
index e89eb8f..39307e5 100644
--- opencv_contrib-master/modules/ximgproc/src/fgs_filter.cpp
+++ opencv_contrib-master/modules/ximgproc/src/fgs_filter.cpp
@@ -35,7 +35,7 @@
  */
 
 #include "precomp.hpp"
-#include "opencv2/hal/intrin.hpp"
+#include "opencv2/core/hal/intrin.hpp"
 #include <vector>
 
 namespace cv {
diff --git opencv_contrib-master/modules/xphoto/src/grayworld_white_balance.cpp opencv_contrib-master/modules/xphoto/src/grayworld_white_balance.cpp
index 4780497..15530d3 100644
--- opencv_contrib-master/modules/xphoto/src/grayworld_white_balance.cpp
+++ opencv_contrib-master/modules/xphoto/src/grayworld_white_balance.cpp
@@ -40,7 +40,7 @@
 #include "opencv2/xphoto.hpp"
 
 #include "opencv2/core.hpp"
-#include "opencv2/hal/intrin.hpp"
+#include "opencv2/core/hal/intrin.hpp"
 
 namespace cv { namespace xphoto {
 
