From 4db108840a69e5ee2e948715ac8ae5fefe4c5d51 Mon Sep 17 00:00:00 2001
From: Nano <nanoapezlk@gmail.com>
Date: Mon, 24 Apr 2023 14:04:57 +0800
Subject: [PATCH 1/6] fix(wechat_qrcode): Initialize nBytes after the count
 value is determined

---
 .../src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp    | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
index 05de793ced6..73d0f68d639 100644
--- a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
+++ b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
@@ -190,7 +190,6 @@ void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits_, string& res
                                                CharacterSetECI* currentCharacterSetECI,
                                                ArrayRef<ArrayRef<char> >& byteSegments,
                                                ErrorHandler& err_handler) {
-    int nBytes = count;
     BitSource& bits(*bits_);
     // Don't crash trying to read more bits than we have available.
     int available = bits.available();
@@ -198,8 +197,9 @@ void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits_, string& res
     if (count * 8 > available) {
         count = (available + 7 / 8);
     }
+    size_t nBytes = count;
 
-    ArrayRef<char> bytes_(count);
+    ArrayRef<char> bytes_(nBytes);
     char* readBytes = &(*bytes_)[0];
     for (int i = 0; i < count; i++) {
         //    readBytes[i] = (char) bits.readBits(8);

From 197bd158064c3a9927983e0168158805b96b3b7c Mon Sep 17 00:00:00 2001
From: GZTime <Time.GZ@outlook.com>
Date: Mon, 24 Apr 2023 14:18:03 +0800
Subject: [PATCH 2/6] fix(wechat_qrcode): Incorrect count data repair

---
 .../src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp      | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
index 73d0f68d639..483fcee7077 100644
--- a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
+++ b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
@@ -195,7 +195,7 @@ void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits_, string& res
     int available = bits.available();
     // try to repair count data if count data is invalid
     if (count * 8 > available) {
-        count = (available + 7 / 8);
+        count = (available + 7)/ 8;
     }
     size_t nBytes = count;
 

From 5781267ce3436d65c0f302443def2b2e7cb8ff8c Mon Sep 17 00:00:00 2001
From: GZTime <Time.GZ@outlook.com>
Date: Mon, 24 Apr 2023 14:56:54 +0800
Subject: [PATCH 3/6] chore: format expr

---
 .../src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp      | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
index 483fcee7077..712c60aa641 100644
--- a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
+++ b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
@@ -195,7 +195,7 @@ void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits_, string& res
     int available = bits.available();
     // try to repair count data if count data is invalid
     if (count * 8 > available) {
-        count = (available + 7)/ 8;
+        count = (available + 7) / 8;
     }
     size_t nBytes = count;
 

From 240689f38d3da70166cd1973419f309d197f7e12 Mon Sep 17 00:00:00 2001
From: GZTime <Time.GZ@outlook.com>
Date: Mon, 24 Apr 2023 17:42:40 +0800
Subject: [PATCH 4/6] fix(wechat_qrcode): Avoid null pointer exception

---
 .../src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp   | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
index 712c60aa641..6a6ffe0901c 100644
--- a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
+++ b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
@@ -66,10 +66,11 @@ void DecodedBitStreamParser::append(std::string& result, string const& in,
 void DecodedBitStreamParser::append(std::string& result, const char* bufIn, size_t nIn,
                                     ErrorHandler& err_handler) {
     if (err_handler.ErrCode()) return;
-#ifndef NO_ICONV_INSIDE
-    if (nIn == 0) {
+    // avoid null pointer exception
+    if (nIn == 0 || bufIn == nullptr) {
         return;
     }
+#ifndef NO_ICONV_INSIDE
     iconv_t cd;
     // cout<<src<<endl;
     cd = iconv_open(StringUtils::UTF8, src);

From 2ea1d893c1089d9fc10b266627c4c6314fd6251a Mon Sep 17 00:00:00 2001
From: GZTime <Time.GZ@outlook.com>
Date: Tue, 25 Apr 2023 14:46:45 +0800
Subject: [PATCH 5/6] fix(wechat_qrcode): return when bytes_ is empty

---
 .../zxing/qrcode/decoder/decoded_bit_stream_parser.cpp | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
index 6a6ffe0901c..b3a0a69cfd4 100644
--- a/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
+++ b/modules/wechat_qrcode/src/zxing/qrcode/decoder/decoded_bit_stream_parser.cpp
@@ -65,12 +65,12 @@ void DecodedBitStreamParser::append(std::string& result, string const& in,
 
 void DecodedBitStreamParser::append(std::string& result, const char* bufIn, size_t nIn,
                                     ErrorHandler& err_handler) {
-    if (err_handler.ErrCode()) return;
     // avoid null pointer exception
-    if (nIn == 0 || bufIn == nullptr) {
+    if (err_handler.ErrCode() || bufIn == nullptr) return;
+#ifndef NO_ICONV_INSIDE
+    if (nIn == 0) {
         return;
     }
-#ifndef NO_ICONV_INSIDE
     iconv_t cd;
     // cout<<src<<endl;
     cd = iconv_open(StringUtils::UTF8, src);
@@ -201,6 +201,10 @@ void DecodedBitStreamParser::decodeByteSegment(Ref<BitSource> bits_, string& res
     size_t nBytes = count;
 
     ArrayRef<char> bytes_(nBytes);
+    // issue https://github.com/opencv/opencv_contrib/issues/3478
+    if (bytes_->empty())
+        return;
+
     char* readBytes = &(*bytes_)[0];
     for (int i = 0; i < count; i++) {
         //    readBytes[i] = (char) bits.readBits(8);

From 2c7ecf3ed844e7ad7ca2788ae20c16a660dd3629 Mon Sep 17 00:00:00 2001
From: GZTime <Time.GZ@outlook.com>
Date: Tue, 25 Apr 2023 14:48:13 +0800
Subject: [PATCH 6/6] test(wechat_qrcode): add test case

---
 modules/wechat_qrcode/test/test_qrcode.cpp | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/modules/wechat_qrcode/test/test_qrcode.cpp b/modules/wechat_qrcode/test/test_qrcode.cpp
index d59932b8129..ec2559b0e71 100644
--- a/modules/wechat_qrcode/test/test_qrcode.cpp
+++ b/modules/wechat_qrcode/test/test_qrcode.cpp
@@ -455,5 +455,16 @@ TEST_P(Objdetect_QRCode_Easy_Multi, regression) {
 std::string qrcode_model_path[] = {"", "dnn/wechat_2021-01"};
 INSTANTIATE_TEST_CASE_P(/**/, Objdetect_QRCode_Easy_Multi, testing::ValuesIn(qrcode_model_path));
 
+TEST(Objdetect_QRCode_bug, issue_3478) {
+    auto detector = wechat_qrcode::WeChatQRCode();
+    std::string image_path = findDataFile("qrcode/issue_3478.png");
+    Mat src = imread(image_path, IMREAD_GRAYSCALE);
+    ASSERT_FALSE(src.empty()) << "Can't read image: " << image_path;
+    std::vector<std::string> outs = detector.detectAndDecode(src);
+    ASSERT_EQ(1, (int) outs.size());
+    ASSERT_EQ(16, (int) outs[0].size());
+    ASSERT_EQ("KFCVW50         ", outs[0]);
+}
+
 }  // namespace
 }  // namespace opencv_test
