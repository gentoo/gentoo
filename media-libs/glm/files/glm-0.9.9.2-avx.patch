--- a/glm/simd/platform.h	2019-03-06 18:57:53.309630574 +0100
+++ b/glm/simd/platform.h	2019-03-06 18:58:30.796988006 +0100
@@ -233,7 +233,7 @@
 #define GLM_ARCH_SSSE3_BIT	(0x00000010)
 #define GLM_ARCH_SSE41_BIT	(0x00000020)
 #define GLM_ARCH_SSE42_BIT	(0x00000040)
-#define GLM_ARCH_AVX_BIT	(0x00000080)
+#define GLM_ARCH_AVX_BIT	(0x00000000)
 #define GLM_ARCH_AVX2_BIT	(0x00000100)
 
 #define GLM_ARCH_UNKNOWN	(0)
--- a/CMakeLists.txt	2019-03-06 19:27:14.052353176 +0100
+++ b/CMakeLists.txt	2019-03-06 19:27:05.161503895 +0100
@@ -203,7 +203,6 @@
 		message("GLM: GCC - ${CMAKE_CXX_COMPILER_ID} compiler")
 	endif()
 
-	add_compile_options(-O2)
 	add_compile_options(-Wno-long-long)
 
 elseif(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
--- a/test/perf/perf_matrix_div.cpp	2019-03-08 09:42:30.180305872 +0100
+++ b/test/perf/perf_matrix_div.cpp	2019-03-08 09:42:40.381140911 +0100
@@ -109,7 +109,7 @@
 	{
 		packedMatType const A = SISD[i];
 		packedMatType const B = SIMD[i];
-		Error += glm::all(glm::equal(A, B, static_cast<T>(0.001))) ? 0 : 1;
+		Error += glm::all(glm::equal(A, B, static_cast<T>(0.002))) ? 0 : 1;
 		assert(!Error);
 	}
 	
--- a/test/perf/perf_matrix_mul.cpp	2019-03-08 09:51:09.411923180 +0100
+++ b/test/perf/perf_matrix_mul.cpp	2019-03-08 09:51:53.465219910 +0100
@@ -111,7 +111,7 @@
 	{
 		packedMatType const A = SISD[i];
 		packedMatType const B = SIMD[i];
-		Error += glm::all(glm::equal(A, B, static_cast<T>(0.001))) ? 0 : 1;
+		Error += glm::all(glm::equal(A, B, static_cast<T>(0.01))) ? 0 : 1;
 	}
 	
 	return Error;
--- a/test/perf/perf_matrix_mul_vector.cpp	2019-03-08 09:43:10.450654282 +0100
+++ b/test/perf/perf_matrix_mul_vector.cpp	2019-03-08 09:50:09.685875081 +0100
@@ -111,7 +111,7 @@
 	{
 		packedVecType const A = SISD[i];
 		packedVecType const B = SIMD[i];
-		Error += glm::all(glm::equal(A, B, static_cast<T>(0.001))) ? 0 : 1;
+		Error += glm::all(glm::equal(A, B, static_cast<T>(0.01))) ? 0 : 1;
 	}
 	
 	return Error;
