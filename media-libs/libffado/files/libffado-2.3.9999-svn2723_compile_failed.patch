diff -ur old/SConstruct new/SConstruct
--- old/SConstruct	2017-12-28 17:01:14.902081683 +0100
+++ new/SConstruct	2017-12-28 17:29:28.387910196 +0100
@@ -395,10 +395,9 @@
 
 # PyQT checks
 if env['BUILD_MIXER'] != 'false':
-    have_dbus = (conf.CheckForApp( 'which pyuic4' ) and conf.CheckForPyModule( 'dbus.mainloop.qt' ))
-    have_pyqt4 = (conf.CheckForApp( 'which pyuic4' ) and conf.CheckForPyModule( 'PyQt4' ))
-    have_pyqt5 = (conf.CheckForApp( 'which pyuic5' ) and conf.CheckForPyModule( 'PyQt5' ))
-    if ((have_pyqt4 or have_pyqt5) and have_dbus):
+    have_pyqt4 = (conf.CheckForApp( 'which pyuic4' ) and conf.CheckForPyModule( 'PyQt4' ) and conf.CheckForPyModule( 'dbus.mainloop.qt' ))
+    have_pyqt5 = (conf.CheckForApp( 'which pyuic5' ) and conf.CheckForPyModule( 'PyQt5' ) and conf.CheckForPyModule( 'dbus.mainloop.pyqt5' ))
+    if (have_pyqt4 or have_pyqt5):
         env['BUILD_MIXER'] = 'true'
     elif not env.GetOption('clean'):
         if env['BUILD_MIXER'] == 'auto':
diff -ur old/support/mixer-qt4/ffado/logginghandler.py new/support/mixer-qt4/ffado/logginghandler.py
--- old/support/mixer-qt4/ffado/logginghandler.py	2017-12-28 17:01:15.796070506 +0100
+++ new/support/mixer-qt4/ffado/logginghandler.py	2017-12-28 17:33:44.328710496 +0100
@@ -28,7 +28,7 @@
 log = logging.getLogger('logginghandler')
 
 class QStatusLogger( QObject, logging.Handler ):
-    log = pyqtSignal(QString, int, name='log')
+    log = pyqtSignal("QString", int, name='log')
     def __init__( self, parent, statusbar, level=logging.NOTSET ):
         QObject.__init__( self, parent )
         logging.Handler.__init__( self, level )
diff -ur old/support/mixer-qt4/ffado/mixer/audiofire.py new/support/mixer-qt4/ffado/mixer/audiofire.py
--- old/support/mixer-qt4/ffado/mixer/audiofire.py	2017-12-28 17:01:15.802070431 +0100
+++ new/support/mixer-qt4/ffado/mixer/audiofire.py	2017-12-28 17:33:10.366135087 +0100
@@ -146,9 +146,8 @@
 	# 0/2/3 is available but GUI set 0/1/2
         if a0 > 0:
             state += 1
-        log.debug("set %s to %d" % (
-            self.DigIfaceControls[sender][0], state))
-	self.hw.setDiscrete(self.DigIfaceControls[sender][0], state)
+        log.debug("set %s to %d" % (self.DigIfaceControls[sender][0], state))
+        self.hw.setDiscrete(self.DigIfaceControls[sender][0], state)
 
     def updatePlbkRouteControl(self, src):
         sender = self.sender()
diff -ur old/support/mixer-qt4/ffado/mixer/phase88control.py new/support/mixer-qt4/ffado/mixer/phase88control.py
--- old/support/mixer-qt4/ffado/mixer/phase88control.py	2017-12-28 17:01:15.833070044 +0100
+++ new/support/mixer-qt4/ffado/mixer/phase88control.py	2017-12-28 17:32:43.519470716 +0100
@@ -80,44 +80,44 @@
             self.muteButtonWavePlayL: [self.sldInputWavePlayL, self.muteButtonWavePlayR],
             self.muteButtonWavePlayR: [self.sldInputWavePlayR, self.muteButtonWavePlayL]
         }
-        
-	# gain control
-	for ctl, params in self.VolumeControls.items():
-		path	= params[0]
-		idx	= params[1]
-                dbmeter = params[5]
-		
-		#db = self.hw.getContignuous(path, idx)
-		#vol = self.db2vol(db)
-                vol = self.hw.getContignuous(path, idx)
-                print("%s ch %d volume is %d" % (path, idx, vol))
-                ctl.setValue(vol)
-                dbmeter.setText(self.vol2dbstr(vol))
-                self.VolumeControls[ctl][6] = vol
-		
-		pair	= params[2]
-		pidx	= params[3]
-		link	= params[4]
-		
-#		pdb = self.hw.getContignuous(path, pidx)
-#		pvol = self.db2vol(db)
-		pvol = self.hw.getContignuous(path, pidx)
-
-		if pvol == vol:
-			link.setChecked(True)
-		
-                ctl.valueChanged.connect(self.updateVolume)
-
-	# selector controls
-	for ctl, param in self.SelectorControls.items():
-		state = self.hw.getDiscrete(param)
-		ctl.setCurrentIndex(state)
-		
-                ctl.activated.connect(self.updateSelector)
-
-	# mute controls
-	for ctl, param in self.MuteControls.items():
-                ctl.toggled.connect(self.muteVolume)
+        # gain control
+        for ctl, params in self.VolumeControls.items():
+            path    = params[0]
+            idx     = params[1]
+            dbmeter = params[5]
+            
+            #db = self.hw.getContignuous(path, idx)
+            #vol = self.db2vol(db)
+            vol = self.hw.getContignuous(path, idx)
+            print("%s ch %d volume is %d" % (path, idx, vol))
+            
+            ctl.setValue(vol)
+            dbmeter.setText(self.vol2dbstr(vol))
+            self.VolumeControls[ctl][6] = vol
+            
+            pair	= params[2]
+            pidx	= params[3]
+            link	= params[4]
+            
+            #pdb = self.hw.getContignuous(path, pidx)
+            #pvol = self.db2vol(db)
+            pvol = self.hw.getContignuous(path, pidx)
+
+            if pvol == vol:
+                link.setChecked(True)
+            
+            ctl.valueChanged.connect(self.updateVolume)
+
+        # selector controls
+        for ctl, param in self.SelectorControls.items():
+            state = self.hw.getDiscrete(param)
+            ctl.setCurrentIndex(state)
+            
+            ctl.activated.connect(self.updateSelector)
+
+        # mute controls
+        for ctl, param in self.MuteControls.items():
+            ctl.toggled.connect(self.muteVolume)
 
 
     # helper functions 
@@ -175,7 +175,7 @@
 #            ctrl[1].setValue(-vol)
 
     def vol2dbstr(self, vol):
-	vol = vol + 25600
+        vol = vol + 25600
         if vol == 0 :
             return "- "+u"\u221E"+" dB"
         return str("{0:.2f}".format(log10( float(abs(vol) + 0.001) / 25600 ) * 20))+"dB"
diff -ur old/support/tools/ffado-diag-static new/support/tools/ffado-diag-static
--- old/support/tools/ffado-diag-static	2017-12-28 17:01:15.866069631 +0100
+++ new/support/tools/ffado-diag-static	2017-12-28 17:29:28.387910196 +0100
@@ -26,7 +26,6 @@
 
 # Add the path of the installed dependent files
 import os
-import commands
 import re
 import logging
 
@@ -55,11 +54,11 @@
 ## main program
 if __name__== '__main__':
 
-    print welcome_msg
+    print( welcome_msg )
 
     num_args = len(sys.argv)
     if num_args not in [1,2]:
-        print help
+        print( help )
         sys.exit(0)
 
     if num_args == 2:
@@ -69,24 +68,24 @@
         elif loglevel == 2:
             logging.getLogger('staticdiag').setLevel(logging.DEBUG)
 
-    print "=== CHECK ==="
+    print( "=== CHECK ===")
 
     # check libraries
-    print "   gcc ............... %s" % get_version_first_line('gcc --version')
-    print "   g++ ............... %s" % get_version_first_line('g++ --version')
-    print "   PyQt4 (by pyuic4) . %s" % get_version_first_line('pyuic4 --version')
-    print "   PyQt5 (by pyuic5) . %s" % get_version_first_line('pyuic5 --version')
-    print "   jackd ............. %s" % get_version_first_line('jackd --version')
-    print "     path ............ %s" % get_command_path('jackd')
-    print "     flags ........... %s" % get_package_flags("jack")
-    print "   libraw1394 ........ %s" % get_package_version("libraw1394")
-    print "     flags ........... %s" % get_package_flags("libraw1394")
-    print "   libavc1394 ........ %s" % get_package_version("libavc1394")
-    print "     flags ........... %s" % get_package_flags("libavc1394")
-    print "   libiec61883 ....... %s" % get_package_version("libiec61883")
-    print "     flags ........... %s" % get_package_flags("libiec61883")
-    print "   libxml++-2.6 ...... %s" % get_package_version("libxml++-2.6")
-    print "     flags ........... %s" % get_package_flags("libxml++-2.6")
-    print "   dbus-1 ............ %s" % get_package_version("dbus-1")
-    print "     flags ........... %s" % get_package_flags("dbus-1")
+    print( "   gcc ............... %s" % get_version_first_line('gcc --version'))
+    print( "   g++ ............... %s" % get_version_first_line('g++ --version'))
+    print( "   PyQt4 (by pyuic4) . %s" % get_version_first_line('pyuic4 --version'))
+    print( "   PyQt5 (by pyuic5) . %s" % get_version_first_line('pyuic5 --version'))
+    print( "   jackd ............. %s" % get_version_first_line('jackd --version'))
+    print( "     path ............ %s" % get_command_path('jackd'))
+    print( "     flags ........... %s" % get_package_flags("jack"))
+    print( "   libraw1394 ........ %s" % get_package_version("libraw1394"))
+    print( "     flags ........... %s" % get_package_flags("libraw1394"))
+    print( "   libavc1394 ........ %s" % get_package_version("libavc1394"))
+    print( "     flags ........... %s" % get_package_flags("libavc1394"))
+    print( "   libiec61883 ....... %s" % get_package_version("libiec61883"))
+    print( "     flags ........... %s" % get_package_flags("libiec61883"))
+    print( "   libxml++-2.6 ...... %s" % get_package_version("libxml++-2.6"))
+    print( "     flags ........... %s" % get_package_flags("libxml++-2.6"))
+    print( "   dbus-1 ............ %s" % get_package_version("dbus-1"))
+    print( "     flags ........... %s" % get_package_flags("dbus-1"))
 
diff -ur old/support/tools/ffado-diag.in new/support/tools/ffado-diag.in
--- old/support/tools/ffado-diag.in	2017-12-28 17:01:15.867069619 +0100
+++ new/support/tools/ffado-diag.in	2017-12-28 18:20:55.769312617 +0100
@@ -53,11 +53,11 @@
 ## main program
 if __name__== '__main__':
 
-    print welcome_msg
+    print( welcome_msg)
 
     num_args = len(sys.argv)
     if num_args not in [1,2]:
-        print help
+        print( help )
         sys.exit(0)
 
     if num_args == 2:
@@ -67,17 +67,17 @@
         elif loglevel == 2:
             logging.getLogger('diag').setLevel(logging.DEBUG)
 
-    print "=== CHECK ==="
-    print " Base system..."
+    print( "=== CHECK ===")
+    print( " Base system...")
     
     # check kernel
     kernel_version = get_kernel_version()
-    print "  kernel version............ " + str(kernel_version)
+    print( "  kernel version............ " + str(kernel_version))
     kernel_is_preempt = get_kernel_preempt()
-    print "    Preempt (low latency)... " + str(kernel_is_preempt)
+    print( "    Preempt (low latency)... " + str(kernel_is_preempt))
     # Hint: The main parts of the rt patches are in mainline-kernels nowadays. Performance with stock kernels is sufficient...
     kernel_is_rt_patched = get_kernel_rt_patched()
-    print "    RT patched.............. " + str(kernel_is_rt_patched)
+    print( "    RT patched.............. " + str(kernel_is_rt_patched))
 
     # check modules
     oldstack_present = check_1394oldstack_present()
@@ -89,92 +89,92 @@
     newstack_active = check_1394newstack_active()
     newstack_statically_linked = not check_1394newstack_loaded() and check_1394newstack_linked()
     
-    print "  old 1394 stack present.... " + str(oldstack_present)
-    print "  old 1394 stack loaded..... " + str(oldstack_loaded)
-    print "  old 1394 stack active..... " + str(oldstack_active)
-    print "  new 1394 stack present.... " + str(newstack_present)
-    print "  new 1394 stack loaded..... " + str(newstack_loaded)
-    print "  new 1394 stack active..... " + str(newstack_active)
+    print( "  old 1394 stack present.... " + str(oldstack_present))
+    print( "  old 1394 stack loaded..... " + str(oldstack_loaded))
+    print( "  old 1394 stack active..... " + str(oldstack_active))
+    print( "  new 1394 stack present.... " + str(newstack_present))
+    print( "  new 1394 stack loaded..... " + str(newstack_loaded))
+    print( "  new 1394 stack active..... " + str(newstack_active))
     
     # check /dev/raw1394 node presence
     devnode_present = check_1394oldstack_devnode_present()
-    print "  /dev/raw1394 node present. " + str(devnode_present)
+    print( "  /dev/raw1394 node present. " + str(devnode_present))
     if devnode_present:
         # check /dev/raw1394 access permissions
         devnode_permissions = check_1394oldstack_devnode_permissions()
-        print "  /dev/raw1394 permissions.. " + str(devnode_permissions)
+        print( "  /dev/raw1394 permissions.. " + str(devnode_permissions))
     else:
         devnode_permissions = None
 
     if newstack_active:
         # check permissions
         newstack_permissions = get_juju_permissions()
-        print "  /dev/fw* permissions:"
-        print newstack_permissions
+        print( "  /dev/fw* permissions:")
+        print( newstack_permissions)
 
-    print "  User IDs:"
-    print get_user_ids()
+    print( "  User IDs:")
+    print( get_user_ids())
 
 
     # check libraries
-    print " Prerequisites (dynamic at run-time)..."
-    print "   gcc ............... %s" % get_version_first_line('gcc --version')
-    print "   g++ ............... %s" % get_version_first_line('g++ --version')
-    print "   PyQt4 (by pyuic4) . %s" % get_version_first_line('pyuic4 --version')
-    print "   PyQt5 (by pyuic5) . %s" % get_version_first_line('pyuic5 --version')
-    print "   jackd ............. %s" % get_version_first_line('jackd --version')
-    print "     path ............ %s" % get_command_path('jackd')
-    print "     flags ........... %s" % get_package_flags("jack")
-    print "   libraw1394 ........ %s" % get_package_version("libraw1394")
-    print "     flags ........... %s" % get_package_flags("libraw1394")
-    print "   libavc1394 ........ %s" % get_package_version("libavc1394")
-    print "     flags ........... %s" % get_package_flags("libavc1394")
-    print "   libiec61883 ....... %s" % get_package_version("libiec61883")
-    print "     flags ........... %s" % get_package_flags("libiec61883")
-    print "   libxml++-2.6 ...... %s" % get_package_version("libxml++-2.6")
-    print "     flags ........... %s" % get_package_flags("libxml++-2.6")
-    print "   dbus-1 ............ %s" % get_package_version("dbus-1")
-    print "     flags ........... %s" % get_package_flags("dbus-1")
-    print " Prerequisites (static at compile-time)..."
+    print( " Prerequisites (dynamic at run-time)...")
+    print( "   gcc ............... %s" % get_version_first_line('gcc --version'))
+    print( "   g++ ............... %s" % get_version_first_line('g++ --version'))
+    print( "   PyQt4 (by pyuic4) . %s" % get_version_first_line('pyuic4 --version'))
+    print( "   PyQt5 (by pyuic5) . %s" % get_version_first_line('pyuic5 --version'))
+    print( "   jackd ............. %s" % get_version_first_line('jackd --version'))
+    print( "     path ............ %s" % get_command_path('jackd'))
+    print( "     flags ........... %s" % get_package_flags("jack"))
+    print( "   libraw1394 ........ %s" % get_package_version("libraw1394"))
+    print( "     flags ........... %s" % get_package_flags("libraw1394"))
+    print( "   libavc1394 ........ %s" % get_package_version("libavc1394"))
+    print( "     flags ........... %s" % get_package_flags("libavc1394"))
+    print( "   libiec61883 ....... %s" % get_package_version("libiec61883"))
+    print( "     flags ........... %s" % get_package_flags("libiec61883"))
+    print( "   libxml++-2.6 ...... %s" % get_package_version("libxml++-2.6"))
+    print( "     flags ........... %s" % get_package_flags("libxml++-2.6"))
+    print( "   dbus-1 ............ %s" % get_package_version("dbus-1"))
+    print( "     flags ........... %s" % get_package_flags("dbus-1"))
+    print( " Prerequisites (static at compile-time)...")
     f = open( "$PYTHONDIR/static_info.txt", "r" )
     for line in f:
         line = line[:-1]
         if line is not "\n" and line.startswith("  "):
-            print line
+            print( line)
     f.close()
 
     # libraw
 
-    print " uname -a..." 
-    print "   " + run_command("uname -a")
+    print( " uname -a..." )
+    print( "   " + run_command("uname -a"))
     
-    print " Hardware..."
+    print( " Hardware...")
     # check host controller
-    print "   Host controllers:"
+    print( "   Host controllers:")
     list_host_controllers()
-    print "   CPU info:"
+    print( "   CPU info:")
     if len(run_command("which lscpu")) > 0:
-        print run_command("lscpu")
+        print( run_command("lscpu"))
     else:
-        print run_command("cat /proc/cpuinfo")
+        print( run_command("cat /proc/cpuinfo"))
 
-    print " Configuration..."
+    print( " Configuration...")
     # check RT settings
     
     # check IRQ settings 
-    print "  IRQ information"
+    print( "  IRQ information")
     info = IRQInfo()
 
     info.load()
-    print str(info)
+    print( str(info))
 
-    print ""
-    print "=== REPORT ==="
+    print( "")
+    print( "=== REPORT ===")
     
     help = HelpStrings()
     
     # do the interpretation of the tests
-    print "FireWire kernel drivers:"
+    print( "FireWire kernel drivers:")
     if (oldstack_loaded or oldstack_statically_linked) and \
        (newstack_loaded or newstack_statically_linked):
         help.show('MODULES_BOTH_STACKS_LOADED')
@@ -183,7 +183,7 @@
         help.show('MODULES_NEW_STACK_LOADED')
         sys.exit(-1)
     elif oldstack_statically_linked:
-        print "[PASS] Kernel drivers statically linked into the kernel."
+        print( "[PASS] Kernel drivers statically linked into the kernel.")
     elif not oldstack_present:
         help.show('MODULES_OLD_STACK_NOT_INSTALLED')
         sys.exit(-1)
@@ -191,7 +191,7 @@
         help.show('MODULES_OLD_STACK_NOT_LOADED')
         sys.exit(-1)
     else:
-        print "[PASS] Kernel modules present and correctly loaded."
+        print( "[PASS] Kernel modules present and correctly loaded.")
 
     if not devnode_present:
         help.show('DEVNODE_OLD_STACK_NOT_PRESENT')
@@ -201,7 +201,8 @@
             help.show('DEVNODE_OLD_STACK_NO_PERMISSION')
             sys.exit(-1)
         else:
-            print "[PASS] /dev/raw1394 node present and accessible."
+            print( "[PASS] /dev/raw1394 node present and accessible.")
     
     
     
+
