--- a/com/aelitis/azureus/core/clientmessageservice/secure/impl/SecureMessageServiceClientHelper.java
+++ b/com/aelitis/azureus/core/clientmessageservice/secure/impl/SecureMessageServiceClientHelper.java
@@ -36,7 +36,6 @@ import org.bouncycastle.crypto.CipherParameters;
 import org.bouncycastle.crypto.encodings.PKCS1Encoding;
 import org.bouncycastle.crypto.engines.RSAEngine;
 import org.bouncycastle.crypto.params.ParametersWithRandom;
-import org.bouncycastle.jce.provider.RSAUtil;
 import org.gudy.azureus2.core3.util.Debug;
 import org.gudy.azureus2.core3.util.RandomUtils;
 import org.gudy.azureus2.plugins.utils.StaticUtilities;
@@ -83,30 +82,12 @@ SecureMessageServiceClientHelper
 				
 			byte[] secret_bytes = session_key.getEncoded();
 			
-			try{
 				Cipher	rsa_cipher = Cipher.getInstance( "RSA" );
 		    
 				rsa_cipher.init( Cipher.ENCRYPT_MODE, public_key );
 		    
 				encryped_session_key = rsa_cipher.doFinal( secret_bytes );
 				
-			}catch( Throwable e ){
-				
-					// fallback to the BC implementation for jdk1.4.2 as JCE RSA not available
-				
-				RSAEngine	eng = new RSAEngine();
-				
-				PKCS1Encoding	padded_eng = new PKCS1Encoding( eng );
-				
-	            CipherParameters param = RSAUtil.generatePublicKeyParameter(public_key);
-	            
-	            param = new ParametersWithRandom(param, RandomUtils.SECURE_RANDOM);
-	            
-	            padded_eng.init( true, param );
-				
-				encryped_session_key = padded_eng.processBlock(secret_bytes, 0, secret_bytes.length);
-			}
-
 		}catch( Throwable e ){
 			
 			e.printStackTrace();
