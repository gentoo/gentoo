diff -urN Printrun-printrun-20140730.old/plater Printrun-printrun-20140730/plater
--- Printrun-printrun-20140730.old/plater	1970-01-01 01:00:00.000000000 +0100
+++ Printrun-printrun-20140730/plater	2014-06-06 12:04:34.000000000 +0200
@@ -0,0 +1,27 @@
+#!/usr/bin/env python
+
+# This file is part of the Printrun suite.
+#
+# Printrun is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Printrun is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
+
+import sys
+import wx
+
+from printrun.stlplater import StlPlater
+
+if __name__ == '__main__':
+    app = wx.App(False)
+    main = StlPlater(sys.argv[1:])
+    main.Show()
+    app.MainLoop()
diff -urN Printrun-printrun-20140730.old/plater.py Printrun-printrun-20140730/plater.py
--- Printrun-printrun-20140730.old/plater.py	2014-08-10 15:44:04.877086955 +0200
+++ Printrun-printrun-20140730/plater.py	1970-01-01 01:00:00.000000000 +0100
@@ -1,27 +0,0 @@
-#!/usr/bin/env python
-
-# This file is part of the Printrun suite.
-#
-# Printrun is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# Printrun is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
-
-import sys
-import wx
-
-from printrun.stlplater import StlPlater
-
-if __name__ == '__main__':
-    app = wx.App(False)
-    main = StlPlater(sys.argv[1:])
-    main.Show()
-    app.MainLoop()
diff -urN Printrun-printrun-20140730.old/printcore Printrun-printrun-20140730/printcore
--- Printrun-printrun-20140730.old/printcore	1970-01-01 01:00:00.000000000 +0100
+++ Printrun-printrun-20140730/printcore	2014-06-06 12:04:34.000000000 +0200
@@ -0,0 +1,76 @@
+#!/usr/bin/env python
+
+# This file is part of the Printrun suite.
+#
+# Printrun is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Printrun is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
+
+import time
+import getopt
+import sys
+
+from printrun.printcore import printcore
+from printrun import gcoder
+
+if __name__ == '__main__':
+    baud = 115200
+    loud = False
+    statusreport = False
+    try:
+        opts, args = getopt.getopt(sys.argv[1:], "h,b:,v,s",
+                                   ["help", "baud", "verbose", "statusreport"])
+    except getopt.GetoptError, err:
+        print str(err)
+        sys.exit(2)
+    for o, a in opts:
+        if o in ('-h', '--help'):
+            # FIXME: Fix help
+            print ("Opts are: --help, -b --baud = baudrate, -v --verbose, "
+                   "-s --statusreport")
+            sys.exit(1)
+        if o in ('-b', '--baud'):
+            baud = int(a)
+        if o in ('-v', '--verbose'):
+            loud = True
+        elif o in ('-s', '--statusreport'):
+            statusreport = True
+
+    if len(args) > 1:
+        port = args[-2]
+        filename = args[-1]
+        print "Printing: %s on %s with baudrate %d" % (filename, port, baud)
+    else:
+        print "Usage: python [-h|-b|-v|-s] printcore.py /dev/tty[USB|ACM]x filename.gcode"
+        sys.exit(2)
+    p = printcore(port, baud)
+    p.loud = loud
+    time.sleep(2)
+    gcode = [i.strip() for i in open(filename)]
+    gcode = gcoder.LightGCode(gcode)
+    p.startprint(gcode)
+
+    try:
+        if statusreport:
+            p.loud = False
+            sys.stdout.write("Progress: 00.0%\r")
+            sys.stdout.flush()
+        while p.printing:
+            time.sleep(1)
+            if statusreport:
+                progress = 100 * float(p.queueindex) / len(p.mainqueue)
+                sys.stdout.write("Progress: %02.1f%%\r" % progress)
+                sys.stdout.flush()
+        p.disconnect()
+        sys.exit(0)
+    except:
+        p.disconnect()
diff -urN Printrun-printrun-20140730.old/printcore.py Printrun-printrun-20140730/printcore.py
--- Printrun-printrun-20140730.old/printcore.py	2014-08-10 15:44:04.881086932 +0200
+++ Printrun-printrun-20140730/printcore.py	1970-01-01 01:00:00.000000000 +0100
@@ -1,76 +0,0 @@
-#!/usr/bin/env python
-
-# This file is part of the Printrun suite.
-#
-# Printrun is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# Printrun is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
-
-import time
-import getopt
-import sys
-
-from printrun.printcore import printcore
-from printrun import gcoder
-
-if __name__ == '__main__':
-    baud = 115200
-    loud = False
-    statusreport = False
-    try:
-        opts, args = getopt.getopt(sys.argv[1:], "h,b:,v,s",
-                                   ["help", "baud", "verbose", "statusreport"])
-    except getopt.GetoptError, err:
-        print str(err)
-        sys.exit(2)
-    for o, a in opts:
-        if o in ('-h', '--help'):
-            # FIXME: Fix help
-            print ("Opts are: --help, -b --baud = baudrate, -v --verbose, "
-                   "-s --statusreport")
-            sys.exit(1)
-        if o in ('-b', '--baud'):
-            baud = int(a)
-        if o in ('-v', '--verbose'):
-            loud = True
-        elif o in ('-s', '--statusreport'):
-            statusreport = True
-
-    if len(args) > 1:
-        port = args[-2]
-        filename = args[-1]
-        print "Printing: %s on %s with baudrate %d" % (filename, port, baud)
-    else:
-        print "Usage: python [-h|-b|-v|-s] printcore.py /dev/tty[USB|ACM]x filename.gcode"
-        sys.exit(2)
-    p = printcore(port, baud)
-    p.loud = loud
-    time.sleep(2)
-    gcode = [i.strip() for i in open(filename)]
-    gcode = gcoder.LightGCode(gcode)
-    p.startprint(gcode)
-
-    try:
-        if statusreport:
-            p.loud = False
-            sys.stdout.write("Progress: 00.0%\r")
-            sys.stdout.flush()
-        while p.printing:
-            time.sleep(1)
-            if statusreport:
-                progress = 100 * float(p.queueindex) / len(p.mainqueue)
-                sys.stdout.write("Progress: %02.1f%%\r" % progress)
-                sys.stdout.flush()
-        p.disconnect()
-        sys.exit(0)
-    except:
-        p.disconnect()
diff -urN Printrun-printrun-20140730.old/pronsole Printrun-printrun-20140730/pronsole
--- Printrun-printrun-20140730.old/pronsole	1970-01-01 01:00:00.000000000 +0100
+++ Printrun-printrun-20140730/pronsole	2014-06-06 12:04:34.000000000 +0200
@@ -0,0 +1,33 @@
+#!/usr/bin/env python
+
+# This file is part of the Printrun suite.
+#
+# Printrun is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Printrun is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
+
+import sys
+import traceback
+from printrun.pronsole import pronsole
+
+if __name__ == "__main__":
+
+    interp = pronsole()
+    interp.parse_cmdline(sys.argv[1:])
+    try:
+        interp.cmdloop()
+    except SystemExit:
+        interp.p.disconnect()
+    except:
+        print _("Caught an exception, exiting:")
+        traceback.print_exc()
+        interp.p.disconnect()
diff -urN Printrun-printrun-20140730.old/pronsole.py Printrun-printrun-20140730/pronsole.py
--- Printrun-printrun-20140730.old/pronsole.py	2014-08-10 15:44:04.863087038 +0200
+++ Printrun-printrun-20140730/pronsole.py	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-#!/usr/bin/env python
-
-# This file is part of the Printrun suite.
-#
-# Printrun is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# Printrun is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
-
-import sys
-import traceback
-from printrun.pronsole import pronsole
-
-if __name__ == "__main__":
-
-    interp = pronsole()
-    interp.parse_cmdline(sys.argv[1:])
-    try:
-        interp.cmdloop()
-    except SystemExit:
-        interp.p.disconnect()
-    except:
-        print _("Caught an exception, exiting:")
-        traceback.print_exc()
-        interp.p.disconnect()
diff -urN Printrun-printrun-20140730.old/pronterface Printrun-printrun-20140730/pronterface
--- Printrun-printrun-20140730.old/pronterface	1970-01-01 01:00:00.000000000 +0100
+++ Printrun-printrun-20140730/pronterface	2014-06-06 12:04:34.000000000 +0200
@@ -0,0 +1,40 @@
+#!/usr/bin/env python
+
+# This file is part of the Printrun suite.
+#
+# Printrun is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Printrun is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
+
+import sys
+
+try:
+    import wx  # NOQA
+except:
+    print("wxPython is not installed. This program requires wxPython to run.")
+    if sys.version_info.major >= 3:
+        print("""\
+As you are currently running python3, this is most likely because wxPython is
+not yet available for python3. You should try running with python2 instead.""")
+        sys.exit(-1)
+    else:
+        raise
+
+from printrun.pronterface import PronterApp
+
+if __name__ == '__main__':
+    app = PronterApp(False)
+    try:
+        app.MainLoop()
+    except KeyboardInterrupt:
+        pass
+    del app
diff -urN Printrun-printrun-20140730.old/pronterface.py Printrun-printrun-20140730/pronterface.py
--- Printrun-printrun-20140730.old/pronterface.py	2014-08-10 15:44:04.862087044 +0200
+++ Printrun-printrun-20140730/pronterface.py	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-#!/usr/bin/env python
-
-# This file is part of the Printrun suite.
-#
-# Printrun is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# Printrun is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with Printrun.  If not, see <http://www.gnu.org/licenses/>.
-
-import sys
-
-try:
-    import wx  # NOQA
-except:
-    print("wxPython is not installed. This program requires wxPython to run.")
-    if sys.version_info.major >= 3:
-        print("""\
-As you are currently running python3, this is most likely because wxPython is
-not yet available for python3. You should try running with python2 instead.""")
-        sys.exit(-1)
-    else:
-        raise
-
-from printrun.pronterface import PronterApp
-
-if __name__ == '__main__':
-    app = PronterApp(False)
-    try:
-        app.MainLoop()
-    except KeyboardInterrupt:
-        pass
-    del app
diff -urN Printrun-printrun-20140730.old/setup.py Printrun-printrun-20140730/setup.py
--- Printrun-printrun-20140730.old/setup.py	2014-08-10 15:44:04.869087003 +0200
+++ Printrun-printrun-20140730/setup.py	2014-08-10 15:44:59.470765212 +0200
@@ -162,7 +162,7 @@
       license = "GPLv3",
       data_files = data_files,
       packages = ["printrun", "printrun.gl", "printrun.gl.libtatlin", "printrun.gui", "printrun.power"],
-      scripts = ["pronsole.py", "pronterface.py", "plater.py", "printcore.py"],
+      scripts = ["pronsole", "pronterface", "plater", "printcore"],
       cmdclass = cmdclass,
       ext_modules = extensions,
       )
