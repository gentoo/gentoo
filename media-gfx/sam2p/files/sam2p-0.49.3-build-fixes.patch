diff -purN a/ccdep.pl b/ccdep.pl
--- a/ccdep.pl	2016-10-10 16:05:51.000000000 +0100
+++ b/ccdep.pl	2016-10-28 15:45:55.920466989 +0100
@@ -150,7 +150,7 @@ if ($R=~/\berror: .*-fno-diagnostics-sho
 if ($R!~/: warning: #warning\b/) {
   # config2.h:314:4: warning: #warning REQUIRES: c_lgcc3.o
   # Dat: g++-3.3 ignores #warning with -M -MG -E
-  $R.="\n".backtick("$GCCP -DOBJDEP$DIAG -E 2>&1 >/dev/null @DSQ");
+  $R.="\n".backtick("$GCCP -DOBJDEP$DIAG -Wno-literal-suffix -E 2>&1 >/dev/null @DSQ");
 }
 
 ## die $R;
diff -purN a/configure.in b/configure.in
--- a/configure.in	2016-10-10 16:05:51.000000000 +0100
+++ b/configure.in	2016-10-28 15:18:14.603661944 +0100
@@ -81,8 +81,6 @@ fi
 dnl Checks for programs.
 dnl AC_PROG_CC
 AC_LANG_CPLUSPLUS
-CXXFLAGS=" "
-dnl ^^^ set it to non-empty, so AC_PROG_CXX won't include `-g'
 CCC="$CCC g++"
 dnl ^^^ check g++ before c++ (see acspecific.m4, grep AC_PROG_CXX)
 AC_PROG_CXX
@@ -216,7 +214,7 @@ AC_OUTPUT(Makehelp)
 
 dnl AC_PTS_RUN_OK([perl -x -S ./ccdep.pl $CXX], [], [AC_MSG_ERROR(cannot compute depends)])
 rm -f Makedep
-AC_PTS_RUN_OK([make Makedep], [], [AC_MSG_ERROR(cannot compute depends)])
+AC_PTS_RUN_OK([gmake Makedep], [], [AC_MSG_ERROR(cannot compute depends)])
 AC_PTS_OK
 echo "configure done. Now you should run: make; make install"
 
diff -purN a/gensio.cpp b/gensio.cpp
--- a/gensio.cpp	2016-10-10 16:05:51.000000000 +0100
+++ b/gensio.cpp	2016-10-28 15:14:20.095561090 +0100
@@ -730,12 +730,7 @@ slen_t Filter::FlatD::vi_read(char *to_b
 
 /* --- */
 
-
-#if HAVE_lstat_in_sys_stat
-#  define PTS_lstat lstat
-#else
 #  define PTS_lstat stat
-#endif
 
 /** @param fname must start with '/' (dir separator)
  * @return true if file successfully created
diff -purN a/Makefile b/Makefile
--- a/Makefile	2016-10-10 16:05:51.000000000 +0100
+++ b/Makefile	2016-10-28 15:19:49.187704507 +0100
@@ -17,7 +17,7 @@ PERL_BADLANG=x
 export PERL_BADLANG
 
 CXXX=$(CXD_assert)
-LDALL=$(LDXX) -s $(LDFLAGS) $(LIBS)
+LDALL=$(LDXX) $(LDFLAGS) $(LIBS)
 ifeq ($(ENABLE_DEBUG), no)
 CXXX=$(CXD_no)
 endif
@@ -51,8 +51,8 @@ IDE_MODES := release debug
 IDE_TARGETS_debug := $(patsubst %,%.yes, $(TARGETS))
 IDE_TARGETS_release := $(TARGETS)
 
-CXD_assert =$(CXX) -s -O2
-CXD_no     =$(CXX) -s -DNDEBUG -O3
+CXD_assert =$(CXX)
+CXD_no     =$(CXX) -DNDEBUG
 # CXD_yes    =$(CXX) $(GFLAG) -lefence
 CXD_yes    =$(CXX) $(GFLAG)
 CXD_checker=checkerg++ $(GFLAG)
