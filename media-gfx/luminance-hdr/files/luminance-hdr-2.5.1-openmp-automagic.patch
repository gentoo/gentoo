diff --git a/build_files/Modules/CompilerSettings.cmake b/build_files/Modules/CompilerSettings.cmake
index f55c130..81e1916 100644
--- a/build_files/Modules/CompilerSettings.cmake
+++ b/build_files/Modules/CompilerSettings.cmake
@@ -45,16 +45,19 @@ else()
     message(WARNING "Your C++ compiler does not support C++11.")
 endif()
 #OpenMP Support under Linux, Windows with MSVC & MacOS X with GCC >= 4.3
-IF(MSVC)
-    FIND_PACKAGE(OpenMP REQUIRED)
-    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
-    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
-ELSEIF(CMAKE_COMPILER_IS_GNUCC AND UNIX)
-    EXECUTE_PROCESS(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
-    IF(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
-        MESSAGE(STATUS "GCC >= 4.3")
+OPTION(USE_OPENMP "Use openmp threading support." ON)
+IF(USE_OPENMP)
+    IF(MSVC)
         FIND_PACKAGE(OpenMP REQUIRED)
         SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
         SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
+    ELSEIF(CMAKE_COMPILER_IS_GNUCC AND UNIX)
+        EXECUTE_PROCESS(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
+        IF(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
+            MESSAGE(STATUS "GCC >= 4.3")
+            FIND_PACKAGE(OpenMP REQUIRED)
+            SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
+            SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
+        ENDIF()
     ENDIF()
 ENDIF()
