--- luminance-hdr-2.2.1/CMakeLists.txt
+++ luminance-hdr-2.2.1/CMakeLists.txt
@@ -1,6 +1,8 @@
 PROJECT(luminance-hdr)
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)
 
+OPTION(USE_OPENMP "Use openmp threading support." ON)
+
 # set include path for FindXXX.cmake files
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
 
@@ -149,18 +151,20 @@
 SET(LIBS ${LIBS} ${EXIV2_LIBRARIES})
 
 #OpenMP Support under Linux, Windows with MSVC & MacOS X with GCC >= 4.3
-IF(MSVC)
-    FIND_PACKAGE(OpenMP REQUIRED)
-    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
-    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
-ELSEIF(CMAKE_COMPILER_IS_GNUCC AND UNIX)
-    EXECUTE_PROCESS(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
-    #MESSAGE(STATUS ${GCC_VERSION})
-    IF(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
-        MESSAGE(STATUS "GCC >= 4.3")
+IF(USE_OPENMP)
+    IF(MSVC)
         FIND_PACKAGE(OpenMP REQUIRED)
         SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
         SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
+    ELSEIF(CMAKE_COMPILER_IS_GNUCC AND UNIX)
+        EXECUTE_PROCESS(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
+        #MESSAGE(STATUS ${GCC_VERSION})
+        IF(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
+            MESSAGE(STATUS "GCC >= 4.3")
+            FIND_PACKAGE(OpenMP REQUIRED)
+            SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
+            SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
+        ENDIF()
     ENDIF()
 ENDIF()
 # END OpenMP Support
