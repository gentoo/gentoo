diff --git a/configure.ac b/configure.ac
index 0ae7531..f2cdfee 100644
--- a/configure.ac
+++ b/configure.ac
@@ -4,8 +4,7 @@ AC_SUBST(OPENEXR_VIEWERS_VERSION, 2.3.0)
 AC_CANONICAL_HOST
 AC_CONFIG_SRCDIR(playexr/main.cpp)
 AM_CONFIG_HEADER(config/OpenEXR_ViewersConfig.h)
-AM_INIT_AUTOMAKE(1.6.3)  dnl Require automake 1.6.3 or better
-AM_MAINTAINER_MODE
+AM_INIT_AUTOMAKE
 
 
 LIBTOOL_CURRENT=24
@@ -19,7 +18,7 @@ AC_PROG_CXX
 AC_PROG_INSTALL
 AC_PROG_CC
 AC_PROG_LN_S
-AC_PROG_LIBTOOL
+LT_INIT
 AC_PROG_MAKE_SET
 
 dnl
@@ -124,19 +109,8 @@ AC_ARG_ENABLE(threading,
               [multithread="${enableval}"], [multithread=yes])
 
 if test x$PKG_CONFIG == xno && test "x${multithread}" != xno ; then
-    ACX_PTHREAD(
-    [
-	AC_DEFINE(HAVE_PTHREAD)
-	OPENEXR_LIBS="$PTHREAD_LIBS $OPENEXR_LIBS"
-	OPENEXR_CXXFLAGS="$OPENEXR_CXXFLAGS $PTHREAD_CFLAGS"
-	OPENEXR_CTL_LIBS="$PTHREAD_LIBS $OPENEXR_CTL_LIBS"
-	OPENEXR_CTL_CXXFLAGS="$OPENEXR_CTL_CXXFLAGS $PTHREAD_CFLAGS"
-	CC="$PTHREAD_CC"
-	
-	AM_POSIX_SEM()
-    ],
-    [AC_MSG_ERROR([POSIX thread support required])])
-    AC_MSG_NOTICE([multithread true, LIBS = $LIBS, CC = $CC, CXXFLAGS = $CXXFLAGS])
+    AX_PTHREAD
+	AC_DEFINE([HAVE_PTHREAD], [1], [define if POSIX thread support is available])
 fi
 
 
@@ -233,10 +155,13 @@ AM_PATH_FLTK(have_fltk=yes, have_fltk=no)
 dnl
 dnl check for Cg
 dnl
-if test "${have_fltk}" = yes; then
+AC_ARG_ENABLE(cg, AS_HELP_STRING([--enable-cg],
+	[enable nvidia cg support [[default: test]]]), [want_cg="${enableval}"], [want_cg=yes])
+
+if test "${have_fltk}" = yes -a "${want_cg}" != no; then
   AM_PATH_CG(have_cg=yes, have_cg=no)
   if test "${have_cg}" = yes; then
-    AC_DEFINE(HAVE_FRAGMENT_SHADERS)
+    AC_DEFINE([HAVE_FRAGMENT_SHADERS], [1], [define if Cg support is available])
   fi
 else have_cg=no
 fi
@@ -251,20 +176,10 @@ AC_C_CONST
 AC_C_INLINE
 AC_TYPE_SIZE_T
 
-dnl gcc optimization
-AC_MSG_CHECKING(for gcc optimization flags)
-old_cflags=$CFLAGS
-CFLAGS="$CFLAGS -pipe"
-AC_TRY_COMPILE([#include <stdio.h>],
-[ printf ("hello, world"); ],
-[ EXTRA_OPT_CFLAGS="-pipe"],[ EXTRA_OPT_CFLAGS=""])
-CFLAGS=$old_cflags
-AC_MSG_RESULT([$EXTRA_OPT_CFLAGS])
-
 dnl Platform-specific stuff
 case "$host" in
 *darwin*) 
-  AC_DEFINE(HAVE_DARWIN) 
+  AC_DEFINE([HAVE_DARWIN], [1], [define if compiling on darwin platform (OSX)]) 
 
   dnl OS X universal binary support, requires --disable-dependency-tracking
   AC_ARG_ENABLE(osx-universal-binaries,
