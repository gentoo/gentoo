we'll handle configure ourselves in src_configure

--- a/Makefile
+++ b/Makefile
@@ -14,9 +14,6 @@ OPT ?= -O2 -DNDEBUG
 # OPT ?= -O2 -g2 -DNDEBUG
 #-----------------------------------------------
 
-# detect what platform we're building on
-$(shell CC="$(CC)" CXX="$(CXX)" TARGET_OS="$(TARGET_OS)" \
-    ./build_detect_platform build_config.mk ./)
 # this file is generated by the previous line to set build flags and sources
 include build_config.mk
 

control snappy/tcmalloc explicitly

--- a/build_detect_platform
+++ a/build_detect_platform
@@ -190,6 +190,7 @@
         COMMON_FLAGS="$COMMON_FLAGS -DLEVELDB_PLATFORM_POSIX"
     fi
 
+if [ "${USE_SNAPPY:-auto}" = "auto" ]; then
     # Test whether Snappy library is installed
     # http://code.google.com/p/snappy/
     $CXX $CXXFLAGS -x c++ - -o $CXXOUTPUT 2>/dev/null  <<EOF
@@ -197,15 +198,24 @@
       int main() {}
 EOF
     if [ "$?" = 0 ]; then
+        USE_SNAPPY="yes"
+    fi
+fi
+    if [ "$USE_SNAPPY" = "yes" ]; then
         COMMON_FLAGS="$COMMON_FLAGS -DSNAPPY"
         PLATFORM_LIBS="$PLATFORM_LIBS -lsnappy"
     fi
 
+if [ "${USE_TCMALLOC:-auto}" = "auto" ]; then
     # Test whether tcmalloc is available
     $CXX $CXXFLAGS -x c++ - -o $CXXOUTPUT -ltcmalloc 2>/dev/null  <<EOF
       int main() {}
 EOF
     if [ "$?" = 0 ]; then
+        USE_TCMALLOC="yes"
+    fi
+fi
+    if [ "$USE_TCMALLOC" = "yes" ]; then
         PLATFORM_LIBS="$PLATFORM_LIBS -ltcmalloc"
     fi
 
