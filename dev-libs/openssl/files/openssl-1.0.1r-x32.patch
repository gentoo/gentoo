--- openssl-1.0.1r/Configure
+++ openssl-1.0.1r/Configure
@@ -368,6 +368,7 @@
 "linux-ia64-icc","icc:-DL_ENDIAN -O2 -Wall -no_cpprt::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHUNK DES_RISC1 DES_INT:${ia64_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "linux-x86_64",	"gcc:-m64 -DL_ENDIAN -O3 -Wall::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHUNK DES_INT DES_UNROLL:${x86_64_asm}:elf:dlfcn:linux-shared:-fPIC:-m64:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR):::64",
 "linux-x86_64-clang","clang: -m64 -DL_ENDIAN -O3 -Wall -Qunused-arguments::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHUNK DES_INT DES_UNROLL:${x86_64_asm}:elf:dlfcn:linux-shared:-fPIC:-m64:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR):::64",
+"linux-x32",   "gcc:-DL_ENDIAN -DTERMIO -O2 -pipe -g -feliminate-unused-debug-types -Wall::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT RC4_CHUNK DES_INT DES_UNROLL:${x86_64_asm}:elf:dlfcn:linux-shared:-fPIC:-mx32:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "linux64-s390x",	"gcc:-m64 -DB_ENDIAN -O3 -Wall::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHAR RC4_CHUNK DES_INT DES_UNROLL:${s390x_asm}:64:dlfcn:linux-shared:-fPIC:-m64:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR):::64",
 #### So called "highgprs" target for z/Architecture CPUs
 # "Highgprs" is kernel feature first implemented in Linux 2.6.32, see
--- openssl-1.0.1r/crypto/bn/asm/x86_64-gcc.c
+++ openssl-1.0.1r/crypto/bn/asm/x86_64-gcc.c
@@ -55,7 +55,7 @@
  *    machine.
  */
 
-# ifdef _WIN64
+# ifdef _WIN64 || !defined __LP64__
 #  define BN_ULONG unsigned long long
 # else
 #  define BN_ULONG unsigned long
@@ -211,9 +211,9 @@
 
     asm volatile ("       subq    %2,%2           \n"
                   ".p2align 4                     \n"
-                  "1:     movq    (%4,%2,8),%0    \n"
-                  "       adcq    (%5,%2,8),%0    \n"
-                  "       movq    %0,(%3,%2,8)    \n"
+                  "1:     movq    (%q4,%2,8),%0    \n"
+                  "       adcq    (%q5,%2,8),%0    \n"
+                  "       movq    %0,(%q3,%2,8)    \n"
                   "       leaq    1(%2),%2        \n"
                   "       loop    1b              \n"
                   "       sbbq    %0,%0           \n":"=&a" (ret), "+c"(n),
@@ -235,9 +235,9 @@
 
     asm volatile ("       subq    %2,%2           \n"
                   ".p2align 4                     \n"
-                  "1:     movq    (%4,%2,8),%0    \n"
-                  "       sbbq    (%5,%2,8),%0    \n"
-                  "       movq    %0,(%3,%2,8)    \n"
+                  "1:     movq    (%q4,%2,8),%0    \n"
+                  "       sbbq    (%q5,%2,8),%0    \n"
+                  "       movq    %0,(%q3,%2,8)    \n"
                   "       leaq    1(%2),%2        \n"
                   "       loop    1b              \n"
                   "       sbbq    %0,%0           \n":"=&a" (ret), "+c"(n),
--- openssl-1.0.1r/crypto/bn/bn.h
+++ openssl-1.0.1r/crypto/bn/bn.h
@@ -174,6 +174,16 @@
 # endif
 
 /*
+ * Address type.
+ */
+#ifdef _WIN64
+#define BN_ADDR unsigned long long
+#else
+#define BN_ADDR unsigned long
+#endif
+
+
+/*
  * assuming long is 64bit - this is the DEC Alpha unsigned long long is only
  * 64 bits :-(, don't define BN_LLONG for the DEC Alpha
  */
