diff -Nru openobex-1.5.orig/acinclude.m4 openobex-1.5/acinclude.m4
--- openobex-1.5.orig/acinclude.m4	2009-09-20 12:13:44.000000000 +0200
+++ openobex-1.5/acinclude.m4	2009-09-20 12:18:38.000000000 +0200
@@ -42,6 +42,52 @@
 	fi
 
 	AC_DEFINE_UNQUOTED(CONFIGDIR, "${configdir}", [Directory for the configuration files])
+
+	fortify_enable=yes
+	irda_enable=yes
+	bluetooth_enable=yes
+	usb_enable=yes
+	glib_enable=no
+	apps_enable=no
+	debug_enable=no
+	syslog_enable=no
+	dump_enable=no
+
+	AC_ARG_ENABLE(fortify, AC_HELP_STRING([--disable-fortify], [disable compile time buffer checks]), [
+		fortify_enable=${enableval}
+	])
+
+	AC_ARG_ENABLE(irda, AC_HELP_STRING([--disable-irda], [disable IrDA support]), [
+		irda_enable=${enableval}
+	])
+
+	AC_ARG_ENABLE(bluetooth, AC_HELP_STRING([--disable-bluetooth], [disable Bluetooth support]), [
+		bluetooth_enable=${enableval}
+	])
+
+	AC_ARG_ENABLE(usb, AC_HELP_STRING([--disable-usb], [disable USB support]), [
+		usb_enable=${enableval}
+	])
+
+	dnl AC_ARG_ENABLE(glib, AC_HELP_STRING([--enable-glib], [enable GLib bindings]), [
+	dnl 	glib_enable=${enableval}
+	dnl ])
+
+	AC_ARG_ENABLE(apps, AC_HELP_STRING([--enable-apps], [enable test applications]), [
+		apps_enable=${enableval}
+	])
+
+	AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug], [enable compiling with debugging information]), [
+		debug_enable=${enableval}
+	])
+
+	AC_ARG_ENABLE(syslog, AC_HELP_STRING([--enable-syslog], [enable debugging to the system logger]), [
+		syslog_enable=${enableval}
+	])
+
+	AC_ARG_ENABLE(dump, AC_HELP_STRING([--enable-dump], [enable protocol dumping for debugging]), [
+		dump_enable=${enableval}
+	])
 ])
 
 AC_DEFUN([AC_PATH_WIN32], [
@@ -78,19 +124,21 @@
 ])
 
 AC_DEFUN([AC_PATH_IRDA], [
-	case $host in
-	*-*-linux*)
-		AC_PATH_IRDA_LINUX
-		;;
-	*-*-mingw32*)
-		AC_PATH_IRDA_WIN32
-		;;
-	*)
-		irda_found=no;
-		AC_MSG_CHECKING([for IrDA support])
-		AC_MSG_RESULT([$irda_found])
-		;;
-	esac
+	if (test "$irda_enable" = 'yes'); then
+		case $host in
+		*-*-linux*)
+			AC_PATH_IRDA_LINUX
+			;;
+		*-*-mingw32*)
+			AC_PATH_IRDA_WIN32
+			;;
+		*)
+			irda_found=no;
+			AC_MSG_CHECKING([for IrDA support])
+			AC_MSG_RESULT([$irda_found])
+			;;
+		esac
+	fi
 ])
 
 AC_DEFUN([AC_PATH_WINBT], [
@@ -130,45 +178,48 @@
 ])
 
 AC_DEFUN([AC_PATH_BLUETOOTH], [
-	case $host in
-	*-*-linux*)
-		AC_PATH_BLUEZ
-		;;
-	*-*-freebsd*)
-		AC_PATH_FREEBSDBT
-		;;
-	*-*-netbsd*)
-		AC_PATH_NETBSDBT
-		;;
-	*-*-mingw32*)
-		AC_PATH_WINBT
-		;;
-	esac
+	if (test "$bluetooth_enable" = 'yes'); then
+		case $host in
+		*-*-linux*)
+			AC_PATH_BLUEZ
+			;;
+		*-*-freebsd*)
+			AC_PATH_FREEBSDBT
+			;;
+		*-*-netbsd*)
+			AC_PATH_NETBSDBT
+			;;
+		*-*-mingw32*)
+			AC_PATH_WINBT
+			;;
+		esac
+	fi
 	AC_SUBST(BLUETOOTH_CFLAGS)
 	AC_SUBST(BLUETOOTH_LIBS)
 ])
 
 AC_DEFUN([AC_PATH_USB], [
 	usb_lib_found=no
-	case $host in
-	*-*-mingw32*)
-		USB_CFLAGS=""
-		USB_LIBS="-lusb"
-		usb_lib_found=yes
-		;;
-	*)
-		PKG_CHECK_MODULES(USB, libusb, usb_lib_found=yes, AC_MSG_RESULT(no))
-		AC_CHECK_FILE(${prefix}/lib/pkgconfig/libusb.pc, REQUIRES="libusb")
-		;;
-	esac
-	AC_SUBST(USB_CFLAGS)
-	AC_SUBST(USB_LIBS)
-
 	usb_get_busses=no
-	AC_CHECK_LIB(usb, usb_get_busses, usb_get_busses=yes, AC_DEFINE(NEED_USB_GET_BUSSES, 1, [Define to 1 if you need the usb_get_busses() function.]))
-
 	usb_interrupt_read=no
-	AC_CHECK_LIB(usb, usb_interrupt_read, usb_interrupt_read=yes, AC_DEFINE(NEED_USB_INTERRUPT_READ, 1, [Define to 1 if you need the usb_interrupt_read() function.]))
+	if (test "$usb_enable" = 'yes'); then
+		case $host in
+		*-*-mingw32*)
+			USB_CFLAGS=""
+			USB_LIBS="-lusb"
+			usb_lib_found=yes
+			;;
+		*)
+			PKG_CHECK_MODULES(USB, libusb, usb_lib_found=yes, AC_MSG_RESULT(no))
+			AC_CHECK_FILE(${prefix}/lib/pkgconfig/libusb.pc, REQUIRES="libusb")
+			;;
+		esac
+
+		AC_CHECK_LIB(usb, usb_get_busses, usb_get_busses=yes, AC_DEFINE(NEED_USB_GET_BUSSES, 1, [Define to 1 if you need the usb_get_busses() function.]))
+		AC_CHECK_LIB(usb, usb_interrupt_read, usb_interrupt_read=yes, AC_DEFINE(NEED_USB_INTERRUPT_READ, 1, [Define to 1 if you need the usb_interrupt_read() function.]))
+	fi
+	AC_SUBST(USB_CFLAGS)
+	AC_SUBST(USB_LIBS)
 
 	if (test "$usb_lib_found" = "yes" && test "$usb_get_busses" = "yes" && test "$usb_interrupt_read" = "yes"); then
 		usb_found=yes
@@ -201,52 +252,6 @@
 ])
 
 AC_DEFUN([AC_ARG_OPENOBEX], [
-	fortify_enable=yes
-	irda_enable=yes
-	bluetooth_enable=yes
-	usb_enable=yes
-	glib_enable=no
-	apps_enable=no
-	debug_enable=no
-	syslog_enable=no
-	dump_enable=no
-
-	AC_ARG_ENABLE(fortify, AC_HELP_STRING([--disable-fortify], [disable compile time buffer checks]), [
-		fortify_enable=${enableval}
-	])
-
-	AC_ARG_ENABLE(irda, AC_HELP_STRING([--disable-irda], [disable IrDA support]), [
-		irda_enable=${enableval}
-	])
-
-	AC_ARG_ENABLE(bluetooth, AC_HELP_STRING([--disable-bluetooth], [disable Bluetooth support]), [
-		bluetooth_enable=${enableval}
-	])
-
-	AC_ARG_ENABLE(usb, AC_HELP_STRING([--disable-usb], [disable USB support]), [
-		usb_enable=${enableval}
-	])
-
-	dnl AC_ARG_ENABLE(glib, AC_HELP_STRING([--enable-glib], [enable GLib bindings]), [
-	dnl 	glib_enable=${enableval}
-	dnl ])
-
-	AC_ARG_ENABLE(apps, AC_HELP_STRING([--enable-apps], [enable test applications]), [
-		apps_enable=${enableval}
-	])
-
-	AC_ARG_ENABLE(debug, AC_HELP_STRING([--enable-debug], [enable compiling with debugging information]), [
-		debug_enable=${enableval}
-	])
-
-	AC_ARG_ENABLE(syslog, AC_HELP_STRING([--enable-syslog], [enable debugging to the system logger]), [
-		syslog_enable=${enableval}
-	])
-
-	AC_ARG_ENABLE(dump, AC_HELP_STRING([--enable-dump], [enable protocol dumping for debugging]), [
-		dump_enable=${enableval}
-	])
-
 	if (test "${fortify_enable}" = "yes"); then
 		CFLAGS="$CFLAGS -D_FORTIFY_SOURCE=2"
 	fi
