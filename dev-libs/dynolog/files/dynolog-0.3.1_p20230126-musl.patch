diff --git a/dynolog/src/gpumon/Utils.h b/dynolog/src/gpumon/Utils.h
index 0728cdc..844076d 100644
--- a/dynolog/src/gpumon/Utils.h
+++ b/dynolog/src/gpumon/Utils.h
@@ -1,19 +1,20 @@
 // (c) Meta Platforms, Inc. and affiliates. Confidential and proprietary.
 
 #pragma once
 
+#include <unistd.h>
 #include <string>
 #include <unordered_map>
 #include <vector>
 
 namespace dynolog {
 
 // Assume at most one pid running on each gpu device_id
 // Result[i] is the pid running on device_id i,
 // or -1 if no process is running
 std::vector<pid_t> getPidsOnGpu();
 // Input map is type <environment variable name, metadata name>
 // output map is type <metadata name, metadata value>
 std::unordered_map<std::string, std::string> getMetadataForPid(
     pid_t pid,
     const std::unordered_map<std::string, std::string>& keysMap);
--- a/hbt/src/perf_event/BPerfEventsGroup.cpp
+++ b/hbt/src/perf_event/BPerfEventsGroup.cpp
@@ -76,10 +76,10 @@
   cpu_cnt_ = ::libbpf_num_possible_cpus();
 }
 
-inline auto mapFdWrapperPtrIntoInode(
+inline ino_t mapFdWrapperPtrIntoInode(
     const std::shared_ptr<FdWrapper>& fd_wrapper) {
   if (fd_wrapper == nullptr) {
-    return 0ull;
+    return (ino_t)0;
   }
   return fd_wrapper->getInode();
 }
