--- a/configure.in
+++ b/configure.in
@@ -42,7 +42,7 @@
 AC_PREREQ(2.12)
 AC_INIT(ldap/include/ldap.h)
 
-AC_CONFIG_AUX_DIR(${srcdir}/config/autoconf)
+AC_CONFIG_AUX_DIR(./config/autoconf)
 AC_CANONICAL_SYSTEM
 
 dnl ========================================================
@@ -85,24 +85,6 @@
 HOST_CFLAGS="${HOST_CFLAGS=}"
 HOST_LDFLAGS="${HOST_LDFLAGS=}"
 
-case "$target" in
-*-cygwin*|*-mingw*|*-msvc*|*-mks*)
-    # Check to see if we are really running in a msvc environemnt
-    _WIN32_MSVC=
-    AC_CHECK_PROGS(CC, cl)
-    if test "$CC" = "cl"; then
-        echo 'main() { return 0; }' > dummy.c
-        ${CC} -o dummy dummy.c >/dev/null 2>&1
-        if test $? = 0; then
-            _WIN32_MSVC=1
-            CXX=$CC
-        else
-            AC_MSG_WARN([$(CC) test failed.  Using normal feature tests])
-        fi
-        rm -f dummy dummy.o dummy.obj dummy.exe dummy.c
-    fi
-    ;;
-esac
 
 if test -n "$_WIN32_MSVC"; then
     SKIP_PATH_CHECKS=1
@@ -151,18 +133,6 @@
 	        AC_DEFINE(MOZILLA_CLIENT)
 	    fi])
 
-AC_ARG_ENABLE(optimize,
-    [  --enable-optimize(=val) Enable code optimizations (val, ie. -O2) ],
-    [ if test "$enableval" != "no"; then
-        MOZ_OPTIMIZE=1
-        if test -n "$enableval" && test "$enableval" != "yes"; then
-    	    _OPTIMIZE_FLAGS=`echo $enableval | sed -e 's|\\\ | |g'`
-            _SAVE_OPTIMIZE_FLAGS=$_OPTIMIZE_FLAGS
-        fi
-      else
-        MOZ_OPTIMIZE=
-    fi ])
-
 AC_ARG_ENABLE(debug,
     [  --disable-debug         Do not compile in debugging symbols
   --enable-debug(=val)    Enable debugging (debug flags val)],
@@ -176,26 +146,6 @@
             fi
 	    fi])
 
-AC_ARG_ENABLE(win32-target,
-    [  --enable-win32-target=\$t
-                          Specify win32 flavor. (WIN95 or WINNT)],
-    OS_TARGET=`echo $enableval | tr a-z A-Z`,
-    OS_TARGET=)
-
-AC_ARG_ENABLE(debug-rtl,
-    [  --enable-debug-rtl      Use the MSVC debug runtime library],
-    [ if test "$enableval" = "yes"; then
-	    USE_DEBUG_RTL=1
-      fi ])
-
-AC_ARG_ENABLE(n32,
-    [  --enable-n32            Enable n32 ABI support (IRIX only)],
-    [ if test "$enableval" = "yes"; then
-	USE_N32=1
-      else if test "$enableval" = "no"; then
-	USE_N32=
-      fi
-    fi ])
 
 AC_ARG_ENABLE(64bit,
     [  --enable-64bit          Enable 64-bit support (on certain platforms)],
@@ -261,10 +211,6 @@
        if test -z "$SVRCORE_CFLAGS" -o -z "$SVRCORE_LIBS" ; then
            if test -n "$_SYSTEM_SVRCORE"; then
                AM_PATH_SVRCORE(4.0.1, [MOZ_NATIVE_SVRCORE=1], [MOZ_NATIVE_SVRCORE=])
-           else
-       	       dnl see if we are being built in the same build tree as svrcore
-               AM_PATH_INTREE_SVRCORE(../../dist)
-               dnl failing that, see if we can find svrcore-config or pkg-config svrcore
                if test -z "$SVRCORE_CFLAGS" -o -z "$SVRCORE_LIBS"; then
                    AM_PATH_SVRCORE(4.0.1, [MOZ_NATIVE_SVRCORE=1], [MOZ_NATIVE_SVRCORE=])
                fi
@@ -294,9 +240,6 @@
             _SYSTEM_NSS=no
 	    fi], _SYSTEM_NSS= )
 
-if test "$_WIN32_MSVC"; then
-    _SYSTEM_NSS=
-fi
 
 dnl first, see if user has specified explicit NSPR include and lib paths,
 dnl of if the user has explicitly disabled the use of nss
@@ -308,10 +251,6 @@
 if test -n "$USE_NSS" -a -z "$NSS_CFLAGS" -a -z "$NSS_LIBS" ; then
 dnl nss requires nspr
    no_nspr=no
-   if test -z "$_SYSTEM_NSS" -o "$_SYSTEM_NSS" = "no" ; then
-dnl see if we are being built in the same build tree as nss
-      AM_PATH_INTREE_NSS(../../dist)
-   fi
 dnl failing that, see if we can find nss-config or pkg-config nss
    if test -z "$NSS_CFLAGS" -a "$_SYSTEM_NSS" != "no" ; then
       AM_PATH_NSS(3.9.0, [MOZ_NATIVE_NSS=1], [MOZ_NATIVE_NSS=])
@@ -348,10 +287,6 @@
 
 dnl next, look for in-tree nspr if user did not specify explicit system nspr
 if test "$no_nspr" = "no" -a -z "$NSPR_CFLAGS" -a -z "$NSPR_LIBS" ; then
-   if test -z "$_SYSTEM_NSPR" -o "$_SYSTEM_NSPR" = "no" ; then
-dnl see if we are being built in the same build tree as nspr
-      AM_PATH_INTREE_NSPR(../../dist)
-   fi
 dnl failing that, see if we can find nspr-config or pkg-config nspr
    if test -z "$NSPR_CFLAGS" -a "$_SYSTEM_NSPR" != "no" ; then
       AM_PATH_NSPR(4.0.0, [MOZ_NATIVE_NSPR=1], [MOZ_NATIVE_NSPR=])
@@ -390,48 +325,6 @@
 dnl than in cygwin-wrapper
 dnl ========================================================
 
-dnl add other runtime environments that use unix style paths
-dnl *-cygwin*|*-mingw*|*-msvc*|*-mks*)
-case "$target" in
-*-cygwin*) USE_WINDOWS_PATHS=1 ;;
-esac
-
-if test -n "$_WIN32_MSVC" -a -n "$USE_WINDOWS_PATHS" ; then
-    if test -n "$NSPR_CFLAGS" -a -z "$SKIP_CYGWIN_FIXUP" ; then
-        path=`echo $NSPR_CFLAGS | sed -e 's/^-I//'`
-        path=`cygpath -m $path`
-        NSPR_CFLAGS="/I$path"
-    fi
-    if test -n "$NSPR_LIBS" -a -z "$SKIP_CYGWIN_FIXUP" ; then
-        path=`echo $NSPR_LIBS | sed -e 's/^-L//'`
-        path=`cygpath -m $path`
-        NSPR_LIBS="/LIBPATH:$path"
-    fi
-
-    if test -n "$NSS_CFLAGS" ; then
-        path=`echo $NSS_CFLAGS | sed -e 's/^-I//'`
-        path=`cygpath -m $path`
-        NSS_CFLAGS="/I$path"
-    fi
-
-    if test -n "$NSS_LIBS" ; then
-        path=`echo $NSS_LIBS | sed -e 's/^-L//'`
-        path=`cygpath -m $path`
-        NSS_LIBS="/LIBPATH:$path"
-    fi
-
-    if test -n "$SVRCORE_CFLAGS" ; then
-        path=`echo $SVRCORE_CFLAGS | sed -e 's/^-I//'`
-        path=`cygpath -m $path`
-        SVRCORE_CFLAGS="/I$path"
-    fi
-
-    if test -n "$SVRCORE_LIBS" ; then
-        path=`echo $SVRCORE_LIBS | sed -e 's/^-L//'`
-        path=`cygpath -m $path`
-        SVRCORE_LIBS="/LIBPATH:$path"
-    fi
-fi
 
 dnl ========================================================
 dnl =
@@ -1489,9 +1382,7 @@
     ;;
 
 *-linux*)
-    if test -z "$USE_NSPR_THREADS"; then
-        USE_PTHREADS=1
-    fi
+    USE_PTHREADS=1
     AC_DEFINE(XP_UNIX)
     AC_DEFINE(_POSIX_SOURCE)
     AC_DEFINE(_BSD_SOURCE)
