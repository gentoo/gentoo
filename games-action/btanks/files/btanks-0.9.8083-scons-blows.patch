--- mrt/export_base.h.old	2010-01-09 17:38:47.000000000 +0100
+++ mrt/export_base.h	2010-01-09 17:39:23.000000000 +0100
@@ -1,7 +1,7 @@
 #ifndef MRT_EXPORT_MACRO_H__
 #define MRT_EXPORT_MACRO_H__
 
-// Shared library support
+/* Shared library support */
 #ifdef _WINDOWS
 
 #	pragma warning(disable:4251)  /* needs to have dll-interface used by client */
--- SConstruct.old	2010-01-09 17:43:36.000000000 +0100
+++ SConstruct	2010-01-09 17:45:25.000000000 +0100
@@ -50,7 +50,7 @@
 if os.environ.has_key('CC'):
 	env['CC'] = os.environ['CC']
 if os.environ.has_key('CFLAGS'):
-	env['CCFLAGS'] += SCons.Util.CLVar(os.environ['CFLAGS'])
+	env['CFLAGS'] += SCons.Util.CLVar(os.environ['CFLAGS'])
 if os.environ.has_key('CXX'):
 	env['CXX'] = os.environ['CXX']
 if os.environ.has_key('CXXFLAGS'):
@@ -91,19 +91,9 @@
 		#env.Append(CPPDEFINES = ['NDEBUG']) 
 
 else:
-	if env['gcc_visibility']: 
-		env.Append(CCFLAGS=['-fvisibility=hidden']);
-		env.Append(CXXFLAGS=['-fvisibility-inlines-hidden', '-fvisibility=hidden']);
-
-	if debug:
-		env.Append(CCFLAGS=['-ggdb', '-D_FORTIFY_SOURCE=2'])
-		env.Append(CPPFLAGS=['-ggdb', '-D_FORTIFY_SOURCE=2'])
-	else: 
-		env.Append(CCFLAGS=['-O3'])
-		env.Append(CPPFLAGS=['-O3'])
 		
-	env.Append(CPPFLAGS=['-Wall', '-Wno-deprecated', '-pedantic', '-Wno-long-long', '-pipe', '-pthread'])
-	env.Append(CCFLAGS=['-Wall', '-Wno-deprecated', '-pedantic', '-Wno-long-long', '-pipe', '-pthread'])
+	env.Append(CPPFLAGS=['-Wall', '-Wno-deprecated', '-pedantic', '-Wno-long-long', '-pthread'])
+	env.Append(CCFLAGS=['-Wall', '-Wno-deprecated', '-pedantic', '-Wno-long-long', '-pthread'])
 
 
 conf_env = env.Clone()
--- sdlx/SConscript.old	2010-01-09 17:46:05.000000000 +0100
+++ sdlx/SConscript	2010-01-09 17:46:55.000000000 +0100
@@ -12,7 +12,7 @@
 
 env.MergeFlags(sdl_cflags, sdl_libs)
 
-libs = ['mrt', 'SDL', 'SDL_image']
+libs = ['mrt', 'SDL', 'SDL_image', 'SDL_gfx']
 
 if sys.platform != "win32":
 	c_map_env= env.Clone()
@@ -35,7 +35,6 @@
 sdlx_sources = 	['cursor.cpp', 'sdl_ex.cpp', 'surface.cpp', 'system.cpp', 'joystick.cpp',
 	'thread.cpp', 'mutex.cpp', 'semaphore.cpp', 'color.cpp',
 	c_map, 'font.cpp', 'timer.cpp', 'module.cpp', 'file_rw.cpp', 
-	'gfx/SDL_rotozoom.c', 
 	] #  'ttf.cpp', 
 
 if sys.platform == 'win32': 
--- sdlx/surface.cpp.old	2010-01-09 17:47:33.000000000 +0100
+++ sdlx/surface.cpp	2010-01-09 17:48:19.000000000 +0100
@@ -425,7 +425,7 @@
 		throw_sdl(("SDL_SetColorKey"));
 }
 
-#include "gfx/SDL_rotozoom.h"
+#include <SDL_rotozoom.h>
 
 void Surface::rotozoom(const sdlx::Surface &src, double angle, double zoom, bool smooth) {
 	if (src.isNull())
--- sdlx/wrappers/glSDL.c.old	2010-01-09 17:48:50.000000000 +0100
+++ sdlx/wrappers/glSDL.c	2010-01-09 17:49:23.000000000 +0100
@@ -11,8 +11,6 @@
 
 #ifdef HAVE_OPENGL
 
-//#define LEAK_TRACKING
-
 #define	DBG(x)		/*error messages, warnings*/
 #define	DBG2(x)		/*texture allocation*/
 #define	DBG3(x)		/*chopping/tiling*/
@@ -951,7 +949,6 @@
 	}
 	gl_doublebuf = flags & SDL_DOUBLEBUF;
 	SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, gl_doublebuf);
-	//SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, gl_doublebuf ? 1: 0);
 
 	scale = 1;
 
