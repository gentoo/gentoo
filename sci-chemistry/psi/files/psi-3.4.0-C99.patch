https://bugs.gentoo.org/886127
register is reserved keyword in modern CPP, don't use it and try to trust
compiler to make best allocation of temporary variables it could.
Plus trim minor K&R ism until source compiles.
diff -ru a/src/lib/libipv1/parse.y b/src/lib/libipv1/parse.y
--- a/src/lib/libipv1/parse.y	2024-05-14 11:51:38.847119935 -0000
+++ b/src/lib/libipv1/parse.y	2024-05-14 11:51:50.795068110 -0000
@@ -3,6 +3,8 @@
 #include <tmpl.h>
 #include "ip_types.h"
 #include "ip_read.gbl"
+#include "ip_error.h"
+#include "ip_error.gbl"
 %}
 
 %union {
diff -ru a/src/lib/libipv1/scan.l b/src/lib/libipv1/scan.l
--- a/src/lib/libipv1/scan.l	2024-05-14 11:51:38.847119935 -0000
+++ b/src/lib/libipv1/scan.l	2024-05-14 11:51:45.283092018 -0000
@@ -3,6 +3,8 @@
 #include <tmpl.h>
 #include "ip_types.h"
 #include "ip_global.h"
+#include "ip_error.h"
+#include "ip_error.gbl"
 #include "scan.gbl"
 #include "scan.lcl"
 #include "y.tab.h"
--- a/src/lib/libciomr/add_arr.cc	2024-05-14 11:52:32.908885438 -0000
+++ b/src/lib/libciomr/add_arr.cc	2024-05-14 11:52:54.523791682 -0000
@@ -22,7 +22,7 @@
 */
 void add_arr(double *a, double *b, double *c, int n)
 {
-  register int i;
+  int i;
 
   for (i=0; i < n; i++) {
     c[i] = a[i]+b[i];
--- a/src/lib/libciomr/add_mat.cc	2024-05-14 11:52:32.908885438 -0000
+++ b/src/lib/libciomr/add_mat.cc	2024-05-14 11:53:33.035624634 -0000
@@ -19,7 +19,7 @@
 */
 void add_mat(double **a, double **b, double **c, int n, int m)
 {
-  register int i,j;
+  int i,j;
 
   if (n != m) {
     for (i=0; i < n ; i++) {
--- a/src/lib/libciomr/dot.cc	2024-05-14 11:52:32.908885438 -0000
+++ b/src/lib/libciomr/dot.cc	2024-05-14 11:54:01.044503144 -0000
@@ -20,7 +20,7 @@
 */
 double dot_mat(double **a, double **b, int n)
 {
-  register int i,j;
+  int i,j;
   double *ta, *tb, tval;
 
   tval = 0.0;
@@ -50,7 +50,7 @@
 */
 void dot_arr(double *a, double *b, int n, double *value)
 {
-  register int i;
+  int i;
   double tval;
 
   tval = 0.0;
--- a/src/lib/libciomr/tqli.cc	2024-05-14 11:52:32.908885438 -0000
+++ b/src/lib/libciomr/tqli.cc	2024-05-14 11:54:33.572348380 -0000
@@ -20,7 +20,7 @@
 */
 void tqli(int n, double *d, double **z, double *e, int matz, double toler)
    {
-      register int k;
+      int k;
       int i,j,l,m,iter;
       double dd,g,r,s,c,p,f,b,h;
       double azi;
--- a/src/lib/libciomr/zero.cc	2024-05-14 11:52:32.909885434 -0000
+++ b/src/lib/libciomr/zero.cc	2024-05-14 11:54:57.477223338 -0000
@@ -35,7 +35,7 @@
 */
 void zero_mat(double **a, int n, int m)
 {
-  register int i;
+  int i;
 
   for (i=0; i < n; i++) {
     memset(a[i],'\0',sizeof(double)*m);
--- a/src/lib/libqt/invert.cc	2024-05-14 11:52:32.925885364 -0000
+++ b/src/lib/libqt/invert.cc	2024-05-14 11:57:16.004498725 -0000
@@ -38,7 +38,7 @@
 double invert_matrix(double **a, double **y, int N, FILE *outfile)
 {
    double  d, *col, *colptr;
-   register int i, j;
+   int i, j;
    int *indx ;
 
    col = init_array(N) ;
--- a/src/lib/libqt/schmidt.cc	2024-05-14 11:52:32.926885360 -0000
+++ b/src/lib/libqt/schmidt.cc	2024-05-14 11:57:59.550270945 -0000
@@ -33,7 +33,7 @@
    double *tmp;
    double normval, dotval;
    int i, j;
-   register int I;
+   int I;
 
    /* initialize working array */
    tmp = init_array(cols);
--- a/src/lib/libqt/dirprd_block.cc	2024-05-14 11:52:32.925885364 -0000
+++ b/src/lib/libqt/dirprd_block.cc	2024-05-14 11:58:32.510098538 -0000
@@ -24,7 +24,7 @@
 */
 void dirprd_block(double **A, double **B, int rows, int cols)
 {
-  register long int i;
+  long int i;
   double *a, *b;
   long size;
 
--- a/src/lib/libqt/dot_block.cc	2024-05-14 11:52:32.925885364 -0000
+++ b/src/lib/libqt/dot_block.cc	2024-05-14 11:59:19.350853522 -0000
@@ -20,7 +20,7 @@
 */
 double dot_block(double **A, double **B, int rows, int cols, double alpha)
 {
-  register long int i;
+  long int i;
   double *a, *b;
   double value;
   long int size;
--- a/src/lib/libqt/normalize.cc	2024-05-14 11:52:32.926885360 -0000
+++ b/src/lib/libqt/normalize.cc	2024-05-14 11:59:43.206728736 -0000
@@ -30,7 +30,7 @@
 void normalize(double **A, int rows, int cols)
 {
   double normval;
-  register int i, j;
+  int i, j;
 
   /* divide each row by the square root of its norm */
   for (i=0; i<rows; i++) {
--- a/src/lib/libqt/pople.cc	2024-05-14 11:52:32.926885360 -0000
+++ b/src/lib/libqt/pople.cc	2024-05-14 12:00:07.854599807 -0000
@@ -42,7 +42,7 @@
    double *b;     /* b vector in Ax = b, or transformed b vector */  
    double *sign;  /* sign array  to insure diagonal element of A are positive */
    double **Mtmp; /* tmp M matrix passed to flin */
-   register int i, j, L=0, I;
+   int i, j, L=0, I;
    double norm, rnorm=1.0, norm_Ab=1.0, *dotprod, *alpha;
    double *dvec;
    int llast=0, last=0, maxdimen;
diff -ru a/src/bin/cints/Default_Deriv1/oe_deriv1.cc b/src/bin/cints/Default_Deriv1/oe_deriv1.cc
--- a/src/bin/cints/Default_Deriv1/oe_deriv1.cc	2024-05-14 12:16:53.132217701 -0000
+++ b/src/bin/cints/Default_Deriv1/oe_deriv1.cc	2024-05-14 12:31:39.333240734 -0000
@@ -661,7 +661,7 @@
 
 double int_pow(double a, int p)
 {
-  register int i;
+  int i;
   double b = 1.0;
   
   for(i=0; i<p; i++) b = b*a;
diff -ru a/src/bin/cints/Default_Deriv1/oe_deriv1_ints.cc b/src/bin/cints/Default_Deriv1/oe_deriv1_ints.cc
--- a/src/bin/cints/Default_Deriv1/oe_deriv1_ints.cc	2024-05-14 12:16:53.132217701 -0000
+++ b/src/bin/cints/Default_Deriv1/oe_deriv1_ints.cc	2024-05-14 12:31:35.493262300 -0000
@@ -662,7 +662,7 @@
 
 double int_pow(double a, int p)
 {
-  register int i;
+  int i;
   double b = 1.0;
   
   for(i=0; i<p; i++) b = b*a;
diff -ru a/src/bin/cints/Default_Deriv1/te_deriv1_corr.cc b/src/bin/cints/Default_Deriv1/te_deriv1_corr.cc
--- a/src/bin/cints/Default_Deriv1/te_deriv1_corr.cc	2024-05-14 12:16:53.134217690 -0000
+++ b/src/bin/cints/Default_Deriv1/te_deriv1_corr.cc	2024-05-14 12:31:29.372296675 -0000
@@ -45,12 +45,12 @@
   int n, num;
   int total_am, am;
   int orig_am[4];
-  register int i, j, k, l, m, ii, jj, kk, ll;
-  register int si, sj, sk, sl ;
-  register int sii, sjj, skk, sll, slll;
-  register int pi, pj, pk, pl ;
+  int i, j, k, l, m, ii, jj, kk, ll;
+  int si, sj, sk, sl ;
+  int sii, sjj, skk, sll, slll;
+  int pi, pj, pk, pl ;
   int max_pj, max_pl;
-  register int pii, pjj, pkk, pll ;
+  int pii, pjj, pkk, pll ;
   int switch_ij, switch_kl, switch_ijkl;
   int center_i, center_j, center_k, center_l;
 
diff -ru a/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread.cc b/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread.cc
--- a/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread.cc	2024-05-14 12:16:53.135217684 -0000
+++ b/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread.cc	2024-05-14 12:31:17.789361726 -0000
@@ -48,12 +48,12 @@
   int n, num;
   int total_am, am;
   int orig_am[4];
-  register int i, j, k, l, m, ii, jj, kk, ll;
-  register int si, sj, sk, sl ;
-  register int sii, sjj, skk, sll, slll;
-  register int pi, pj, pk, pl ;
+  int i, j, k, l, m, ii, jj, kk, ll;
+  int si, sj, sk, sl ;
+  int sii, sjj, skk, sll, slll;
+  int pi, pj, pk, pl ;
   int max_pj, max_pl;
-  register int pii, pjj, pkk, pll ;
+  int pii, pjj, pkk, pll ;
   int switch_ij, switch_kl, switch_ijkl;
   int center_i, center_j, center_k, center_l;
 
diff -ru a/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread_symm.cc b/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread_symm.cc
--- a/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread_symm.cc	2024-05-14 12:16:53.135217684 -0000
+++ b/src/bin/cints/Default_Deriv1/te_deriv1_scf_thread_symm.cc	2024-05-14 12:30:56.252482679 -0000
@@ -55,7 +55,7 @@
   int usii, usjj, uskk, usll, uslll;
   int pi, pj, pk, pl ;
   int max_pj, max_pl;
-  register int pii, pjj, pkk, pll ;
+  int pii, pjj, pkk, pll ;
   int switch_ij, switch_kl, switch_ijkl;
   int center_i, center_j, center_k, center_l;
 
diff -ru a/src/bin/cints/Default_Deriv2/oe_deriv2.cc b/src/bin/cints/Default_Deriv2/oe_deriv2.cc
--- a/src/bin/cints/Default_Deriv2/oe_deriv2.cc	2024-05-14 12:16:53.143217639 -0000
+++ b/src/bin/cints/Default_Deriv2/oe_deriv2.cc	2024-05-14 12:32:25.604980869 -0000
@@ -1617,7 +1617,7 @@
 
 double int_pow(double a, int p)
 {
-  register int i;
+  int i;
   double b = 1.0;
   
   for(i=0; i<p; i++) b = b*a;
diff -ru a/src/bin/cints/Default_Deriv2/te_deriv2_scf.cc b/src/bin/cints/Default_Deriv2/te_deriv2_scf.cc
--- a/src/bin/cints/Default_Deriv2/te_deriv2_scf.cc	2024-05-14 12:16:53.144217633 -0000
+++ b/src/bin/cints/Default_Deriv2/te_deriv2_scf.cc	2024-05-14 12:32:18.925018384 -0000
@@ -52,12 +52,12 @@
   int n, num;
   int total_am, am;
   int orig_am[4];
-  register int i, j, k, l, m, ii, jj, kk, ll;
-  register int si, sj, sk, sl ;
-  register int sii, sjj, skk, sll, slll;
-  register int pi, pj, pk, pl ;
+  int i, j, k, l, m, ii, jj, kk, ll;
+  int si, sj, sk, sl ;
+  int sii, sjj, skk, sll, slll;
+  int pi, pj, pk, pl ;
   int max_pj, max_pl;
-  register int pii, pjj, pkk, pll ;
+  int pii, pjj, pkk, pll ;
   int switch_ij, switch_kl, switch_ijkl;
   int center_i, center_j, center_k, center_l, center[4];
 
diff -ru a/src/bin/cints/Default_Ints/oe_ints.cc b/src/bin/cints/Default_Ints/oe_ints.cc
--- a/src/bin/cints/Default_Ints/oe_ints.cc	2024-05-14 12:16:53.121217763 -0000
+++ b/src/bin/cints/Default_Ints/oe_ints.cc	2024-05-14 12:32:11.302061195 -0000
@@ -45,7 +45,7 @@
    struct coordinates PA, PB, AB, PC;
    struct shell_pair *sp;
    struct unique_shell_pair *usp;
-   register int i, j, k, l, ii, jj, kk, ll;
+   int i, j, k, l, ii, jj, kk, ll;
    int count;
    int si, sj, sjj, usi, usj;
    int np_i, np_j;
diff -ru a/src/bin/cints/Default_Ints/te_ints.cc b/src/bin/cints/Default_Ints/te_ints.cc
--- a/src/bin/cints/Default_Ints/te_ints.cc	2024-05-14 12:16:53.121217763 -0000
+++ b/src/bin/cints/Default_Ints/te_ints.cc	2024-05-14 12:32:00.293123022 -0000
@@ -55,10 +55,10 @@
   int total_am, am;
   int orig_am[4];
   int pkblock_end_index = -1;
-  register int i, j, k, l, m, ii, jj, kk, ll;
-  register int si, sj, sk, sl ;
-  register int sii, sjj, skk, sll , slll;
-  register int pi, pj, pk, pl;
+  int i, j, k, l, m, ii, jj, kk, ll;
+  int si, sj, sk, sl ;
+  int sii, sjj, skk, sll , slll;
+  int pi, pj, pk, pl;
   int max_pj, max_pl;
   int upk, num_unique_pk;
   int usi_arr[3], usj_arr[3], usk_arr[3], usl_arr[3];
diff -ru a/src/bin/cints/OEProp_Ints/angmom_ints.cc b/src/bin/cints/OEProp_Ints/angmom_ints.cc
--- a/src/bin/cints/OEProp_Ints/angmom_ints.cc	2024-05-14 12:16:53.123217751 -0000
+++ b/src/bin/cints/OEProp_Ints/angmom_ints.cc	2024-05-14 12:30:51.787507754 -0000
@@ -31,7 +31,7 @@
 {
   struct coordinates PA, PB, AB, A, B;
   struct shell_pair *sp;
-  register int i, j, k, l, ii, jj, kk, ll;
+  int i, j, k, l, ii, jj, kk, ll;
   int si, sj;
   int ni, nj;
   int l1, m1, n1, l2, m2, n2;
@@ -382,7 +382,7 @@
 
 double int_pow(double a, int p)
 {
-  register int i;
+  int i;
   double b = 1.0;
   
   for(i=0; i<p; i++) b = b*a;
diff -ru a/src/bin/cints/OEProp_Ints/moment_deriv1.cc b/src/bin/cints/OEProp_Ints/moment_deriv1.cc
--- a/src/bin/cints/OEProp_Ints/moment_deriv1.cc	2024-05-14 12:16:53.123217751 -0000
+++ b/src/bin/cints/OEProp_Ints/moment_deriv1.cc	2024-05-14 12:30:44.307549762 -0000
@@ -31,7 +31,7 @@
 {
   struct coordinates PA, PB, AB, A, B;
   struct shell_pair *sp;
-  register int i, j, k, l, ii, jj, kk, ll;
+  int i, j, k, l, ii, jj, kk, ll;
   int si, sj;
   int ni, nj;
   int l1, m1, n1, l2, m2, n2;
@@ -544,7 +544,7 @@
 
 double int_pow(double a, int p)
 {
-  register int i;
+  int i;
   double b = 1.0;
   
   for(i=0; i<p; i++) b = b*a;
diff -ru a/src/bin/cints/OEProp_Ints/moment_ints.cc b/src/bin/cints/OEProp_Ints/moment_ints.cc
--- a/src/bin/cints/OEProp_Ints/moment_ints.cc	2024-05-14 12:16:53.123217751 -0000
+++ b/src/bin/cints/OEProp_Ints/moment_ints.cc	2024-05-14 12:30:36.012596347 -0000
@@ -30,7 +30,7 @@
    struct coordinates PA, PB, AB, A, B;
    struct shell_pair *sp;
    struct unique_shell_pair *usp;
-   register int i, j, k, l, ii, jj, kk, ll;
+   int i, j, k, l, ii, jj, kk, ll;
    int count;
    int si, sj;
    int np_i, np_j;
diff -ru a/src/bin/cints/R12_Ints/r12_te_ints.cc b/src/bin/cints/R12_Ints/r12_te_ints.cc
--- a/src/bin/cints/R12_Ints/r12_te_ints.cc	2024-05-14 12:16:53.130217712 -0000
+++ b/src/bin/cints/R12_Ints/r12_te_ints.cc	2024-05-14 12:30:23.995663835 -0000
@@ -52,11 +52,11 @@
   int total_am, am;
   int orig_am[4];
   int pkblock_end_index = -1;
-  register int i, j, k, l, ii, jj, kk, ll;
-  register int si, sj, sk, sl ;
-  register int sii, sjj, skk, sll , slll;
-  register int pi, pj, pk, pl ;
-  register int pii, pjj, pkk, pll ;
+  int i, j, k, l, ii, jj, kk, ll;
+  int si, sj, sk, sl ;
+  int sii, sjj, skk, sll , slll;
+  int pi, pj, pk, pl ;
+  int pii, pjj, pkk, pll ;
   int upk, num_unique_pk;
   int usi_arr[3], usj_arr[3], usk_arr[3], usl_arr[3];
   int *sj_arr, *sk_arr, *sl_arr;
diff -ru a/src/bin/cints/Tools/small_fns.cc b/src/bin/cints/Tools/small_fns.cc
--- a/src/bin/cints/Tools/small_fns.cc	2024-05-14 12:16:53.142217645 -0000
+++ b/src/bin/cints/Tools/small_fns.cc	2024-05-14 12:29:40.755906672 -0000
@@ -20,7 +20,7 @@
 
 void setup()
 {
-   register int i, j;
+   int i, j;
 
    ioff[0] = 0;
    for (i=1; i<IOFFMAX; i++){
diff -ru a/src/bin/cints/Tools/transform.cc b/src/bin/cints/Tools/transform.cc
--- a/src/bin/cints/Tools/transform.cc	2024-05-14 12:16:53.142217645 -0000
+++ b/src/bin/cints/Tools/transform.cc	2024-05-14 12:29:17.939034814 -0000
@@ -21,7 +21,7 @@
 #if !USE_MM
 void transform_i(double *data, double *puream_data, double **c2p, int am_i, int nj, int nk, int nl)
 {
-  register int i,j,k,l;
+  int i,j,k,l;
   int step = nj*nk*nl;
   int offset;
   double *ii;
@@ -49,7 +49,7 @@
 
 void transform_j(double *data, double *puream_data, double **c2p, int am_j, int ni, int nk, int nl)
 {
-  register int i,j,k,l;
+  int i,j,k,l;
   int step = nk*nl;
   int offset,offset_sph;
   double *jj;
@@ -79,7 +79,7 @@
 
 void transform_k(double *data, double *puream_data, double **c2p, int am_k, int ni, int nj, int nl)
 {
-  register int i,j,k,l;
+  int i,j,k,l;
   int step = nl;
   int offset,offset_sph;
   double *kk;
@@ -109,7 +109,7 @@
 
 void transform_l(double *data, double *puream_data, double **c2p, int am_l, int ni, int nj, int nk)
 {
-  register int i,j,k,l;
+  int i,j,k,l;
   int step = 1;
   int offset,offset_sph;
   double *ll;
diff -ru a/src/bin/cscf/findit.cc b/src/bin/cscf/findit.cc
--- a/src/bin/cscf/findit.cc	2024-05-14 12:16:53.236217117 -0000
+++ b/src/bin/cscf/findit.cc	2024-05-14 12:29:59.315802439 -0000
@@ -43,7 +43,7 @@
 
 void findit(int ii, int jj, int kk, int ll, int ism, int ksm, double value, int iab)
 {
-   register int i,j;
+   int i,j;
    unsigned int *ijtmp, *kltmp;
    int *nxtmp;
    int p1,p2,p3;
diff -ru a/src/bin/cscf/findit_uhf.cc b/src/bin/cscf/findit_uhf.cc
--- a/src/bin/cscf/findit_uhf.cc	2024-05-14 12:16:53.236217117 -0000
+++ b/src/bin/cscf/findit_uhf.cc	2024-05-14 12:29:52.523840583 -0000
@@ -63,8 +63,8 @@
 
 void findit_uhf(int ii, int jj, int kk, int ll, int ism, int ksm, double value, int iab)
 {
-   register int i,j;
-   unsigned int *ijtmp, *kltmp;
+   int i,j;
+   int *ijtmp, *kltmp;
    int *nxtmp;
    int p1,p2,p3;
    int noi,nok;
diff -ru a/src/bin/cscf/formg2.cc b/src/bin/cscf/formg2.cc
--- a/src/bin/cscf/formg2.cc	2024-05-14 12:16:53.237217111 -0000
+++ b/src/bin/cscf/formg2.cc	2024-05-14 12:29:46.443874728 -0000
@@ -51,8 +51,8 @@
 
 void formg_two(int iju, int* optest)
 {
-   register int i,j,k,joff,nn;
-   register int ij,kl;
+   int i,j,k,joff,nn;
+   int ij,kl;
    int ilast,num;
    int tmpsiz;
    double dotest,tmpval,qtemp;
diff -ru a/src/bin/cscf/formgc.cc b/src/bin/cscf/formgc.cc
--- a/src/bin/cscf/formgc.cc	2024-05-14 12:16:53.237217111 -0000
+++ b/src/bin/cscf/formgc.cc	2024-05-14 12:29:32.778951472 -0000
@@ -45,8 +45,8 @@
 void formg_closed()
 
 {
-   register int i,j,k,joff,nn;
-   register int ij,kl;
+   int i,j,k,joff,nn;
+   int ij,kl;
    int ilast,num;
    int tmpsiz;
    double tmpval;
diff -ru a/src/bin/cscf/formgo.cc b/src/bin/cscf/formgo.cc
--- a/src/bin/cscf/formgo.cc	2024-05-14 12:16:53.237217111 -0000
+++ b/src/bin/cscf/formgo.cc	2024-05-14 12:29:26.802985033 -0000
@@ -74,8 +74,8 @@
 
 void formg_open()
 {
-   register int i,j,k,joff,nn;
-   register int ij,kl;
+   int i,j,k,joff,nn;
+   int ij,kl;
    int ilast,num;
    int tmpsiz;
    double dotest,tmpval;
diff -ru a/src/bin/cscf/sdot.cc b/src/bin/cscf/sdot.cc
--- a/src/bin/cscf/sdot.cc	2024-05-14 12:16:53.241217089 -0000
+++ b/src/bin/cscf/sdot.cc	2024-05-14 12:28:50.539188693 -0000
@@ -28,7 +28,7 @@
 
 void sdot(double** a, double** b, int n, double* value)
    {
-      register int i,j;
+      int i,j;
       double *ta, *tb, tval;
 
       tval = 0.0;
diff -ru a/src/bin/detci/calc_d.cc b/src/bin/detci/calc_d.cc
--- a/src/bin/detci/calc_d.cc	2024-05-14 12:16:53.152217589 -0000
+++ b/src/bin/detci/calc_d.cc	2024-05-14 12:31:06.372425844 -0000
@@ -31,7 +31,7 @@
 void calc_d(double *target, double alpha, double *sigma, double lambda,
       double *c, int size)
 {
-   register int i;
+   int i;
    double tval;
 
    for (i=0; i<size; i++) {
@@ -58,7 +58,7 @@
 */
 double calc_d2(double *target, double lambda, double *Hd, int size, int precon)
 {
-   register int i;
+   int i;
    double norm = 0.0, tval, tval2;
 
    for (i=0; i<size; i++) {
@@ -93,7 +93,7 @@
 double calc_mpn_vec(double *target, double energy, double *Hd, int size, double
         sign1, double sign2, int precon)
 {
-   register int i;
+   int i;
    double norm = 0.0, tval, tval2;
 
    for (i=0; i<size; i++) {
diff -ru a/src/bin/detci/oldcode/genci.cc b/src/bin/detci/oldcode/genci.cc
--- a/src/bin/detci/oldcode/genci.cc	2024-05-14 12:16:53.161217538 -0000
+++ b/src/bin/detci/oldcode/genci.cc	2024-05-14 12:32:52.413830308 -0000
@@ -171,8 +171,8 @@
    double tmp = 0.0;              /* tmp component of a dot product */ 
    double tmp_val = 0.0;          /* used when forming G */
    double memory;                 /* amount of memory to be used in MB */ 
-   register int i = 0, j;         /* various loop variables */ 
-   register int k, I, m, l;
+   int i = 0, j;         /* various loop variables */ 
+   int k, I, m, l;
    int imdet;                     /* number of important determinants */
    int L;                         /* number of total b vectors */
    int converged = 0, iter = 1;   /* convergence flag and iter counter */
@@ -761,7 +761,7 @@
                         PSI_FPTR byte, int print_lvl)
 {
  int rownum;
- register int i, j, k, I, m;
+ int i, j, k, I, m;
  PSI_FPTR b_index = 0;
  double tmp = 0;
  int A_col_index;
@@ -894,7 +894,7 @@
               struct stringwr **betlist)
 {
  int i;
- register int j, k, I;
+ int j, k, I;
  double *detval, *eigval, *h0, *tmpval;
  int *detref, *tmpref;
  double  **eigvec;
diff -ru a/src/bin/detci/oldcode/gencic.cc b/src/bin/detci/oldcode/gencic.cc
--- a/src/bin/detci/oldcode/gencic.cc	2024-05-14 12:16:53.162217532 -0000
+++ b/src/bin/detci/oldcode/gencic.cc	2024-05-14 12:32:43.588879870 -0000
@@ -165,7 +165,7 @@
                int extra_buf, int num_buf, int d_file)
 {
    double normval = 0.0, tval;
-   register int i, I;
+   int i, I;
    PSI_FPTR jnk = 0, index2; 
 
    index2 = index; 
@@ -358,7 +358,7 @@
                 PSI_FPTR b_writ, int M, int N)
 {
  int i;
- register int j;
+ int j;
   
 
    /* Form initial guess b vector */
@@ -414,7 +414,7 @@
 */
 void max_element(double *buffer, int num_elements, double *max, int *max_num)
 {
- register int i;
+ int i;
 
  (*max) = buffer[0];
  (*max_num) = 0; 
@@ -438,7 +438,7 @@
 */
 void min_element(double *buffer, int num_elements, double *min, int *min_num)
 {
- register int i;
+ int i;
 
  (*min) = buffer[0];
  (*min_num) = 0;
@@ -460,7 +460,7 @@
             int extra_buf, int b_file, PSI_FPTR b_writ, int c_file, 
             PSI_FPTR c_index)
 {
- register int i;
+ int i;
 
  if (!switch_buf3) {
    wreadw(c_file, (char *) buffer, sizeof(double)*buf_size,
diff -ru a/src/bin/detci/slater.cc b/src/bin/detci/slater.cc
--- a/src/bin/detci/slater.cc	2024-05-14 12:16:53.158217555 -0000
+++ b/src/bin/detci/slater.cc	2024-05-14 12:29:01.019129837 -0000
@@ -22,9 +22,9 @@
       int *I_alpha_diff, int *J_alpha_diff, int *sign, int *same, 
       int extended)
 {
-   register int i = 0; 
-   register int j = 0; 
-   register int k = 0; 
+   int i = 0; 
+   int j = 0; 
+   int k = 0; 
    int icnt = 0;  /* number of counts in I array */
    int jcnt = 0;  /* number of counts in J array */ 
    int flipI = 0; /* number of flips in I string to have max coincidence */ 
diff -ru a/src/bin/geom/geom.cc b/src/bin/geom/geom.cc
--- a/src/bin/geom/geom.cc	2024-05-14 12:16:53.215217235 -0000
+++ b/src/bin/geom/geom.cc	2024-05-14 12:28:42.171235688 -0000
@@ -692,7 +692,7 @@
 */
 double dot_vect(double *a, double *b, int n)
 {
-  register int i;
+  int i;
   double tval = 0.0;
   
   for (i=0; i<n; i++) 
diff -ru a/src/bin/input/functions.cc b/src/bin/input/functions.cc
--- a/src/bin/input/functions.cc	2024-05-14 12:16:53.264216960 -0000
+++ b/src/bin/input/functions.cc	2024-05-14 12:21:13.175757278 -0000
@@ -421,7 +421,7 @@
 
 double int_pow(double a, int p)
 {
-  register int i;
+  int i;
   double b = 1.0;
   
   for (i=0; i<p; i++)
diff -ru a/src/bin/cscf/findit_uhf.cc b/src/bin/cscf/findit_uhf.cc
--- a/src/bin/cscf/findit_uhf.cc	2024-05-14 12:37:28.357280590 -0000
+++ b/src/bin/cscf/findit_uhf.cc	2024-05-14 12:38:23.351971736 -0000
@@ -64,7 +64,7 @@
 void findit_uhf(int ii, int jj, int kk, int ll, int ism, int ksm, double value, int iab)
 {
    int i,j;
-   int *ijtmp, *kltmp;
+   unsigned int *ijtmp, *kltmp;
    int *nxtmp;
    int p1,p2,p3;
    int noi,nok;
--- a/src/bin/transqt2/transqt.cc	2024-05-14 12:37:28.405280321 -0000
+++ b/src/bin/transqt2/transqt.cc	2024-05-14 12:39:33.279579018 -0000
@@ -65,7 +65,7 @@
 
 using namespace psi::transqt2;
 
-main(int argc, char *argv[])
+int main(int argc, char *argv[])
 {
   int nso, nmo, ntri_so, ntri_mo, nirreps;
   int **cachelist, *cachefiles;
--- a/src/bin/clag/clag.cc	2024-05-14 12:37:28.389280411 -0000
+++ b/src/bin/clag/clag.cc	2024-05-14 12:41:53.887789352 -0000
@@ -46,7 +46,7 @@
 /***************************************************************************/
 using namespace psi::clag;
 
-main(int argc, char **argv) 
+int main(int argc, char **argv) 
 {
 
   double **opdm;                       /* the one particle density matrix */
--- a/src/bin/geom/geom.cc	2024-05-14 12:37:28.402280338 -0000
+++ b/src/bin/geom/geom.cc	2024-05-14 12:43:03.881396263 -0000
@@ -115,7 +115,7 @@
 void fill_sym_matrix(double **A, int size);
 }} // namespace psi::geom
 
-main(int argc, char* argv[])
+int main(int argc, char* argv[])
 {
   using namespace psi::geom;
   int natom;                     /* number of atoms */
