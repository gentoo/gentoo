diff --git a/README b/README
index 77e1213..3f6a122 100644
--- a/README
+++ b/README
@@ -15,7 +15,7 @@ To build, MATE Power Manager requires
 
 	- Glib (2.13.0 or later)
 	- Gtk2+ (2.11.0 or later)
-	- MATE Keyring (1.1.0 or later)
+	- GNOME Keyring (3.0.0 or later)
 	- DBus (0.70 or later)
 	- libnotify (0.7.0 or later)
 	- Cairo (1.0.0 or later)
diff --git a/configure.ac b/configure.ac
index 89309ff..912c362 100644
--- a/configure.ac
+++ b/configure.ac
@@ -102,7 +102,7 @@ GLIB_REQUIRED=2.13.0
 GIO_REQUIRED=2.25.0
 GTK_REQUIRED=2.17.7
 GDK_REQUIRED=2.11.0
-MATE_KEYRING_REQUIRED=1.1.0
+GNOME_KEYRING_REQUIRED=3.0.0
 DBUS_REQUIRED=1.0
 DBUS_GLIB_REQUIRED=0.70
 LIBNOTIFY_REQUIRED=0.7.0
@@ -249,18 +249,18 @@ fi
 AM_CONDITIONAL([HAVE_TESTS], [test $have_tests = yes])
 
 dnl ---------------------------------------------------------------------------
-dnl - Build mate-keyring support
+dnl - Build gnome-keyring support
 dnl ---------------------------------------------------------------------------
 AC_ARG_WITH(keyring,
         [AS_HELP_STRING([--without-keyring],
-                        [Disable the use of mate-keyring])],
+                        [Disable the use of gnome-keyring])],
         [],
         [with_keyring=yes])
 
 AM_CONDITIONAL([WITH_KEYRING],[test "$with_keyring" = "yes"])
 
 if test "$with_keyring" = "yes"; then
-        PKG_CHECK_MODULES(KEYRING, mate-keyring-1 >= $MATE_KEYRING_REQUIRED)
+        PKG_CHECK_MODULES(KEYRING, gnome-keyring-1 >= $GNOME_KEYRING_REQUIRED)
         AC_DEFINE([WITH_KEYRING],[1],[Define if KEYRING support is enabled])
 fi
 
@@ -393,7 +393,7 @@ echo "
         datadir:                   ${datadir}
         compiler:                  ${CC}
         cflags:                    ${CFLAGS}
-        mate-keyring support:      ${with_keyring}
+        gnome-keyring support:     ${with_keyring}
         Building extra applets:    ${enable_applets}
         Self test support:         ${have_tests}
         Use libunique:             ${enable_libunique}
diff --git a/data/org.mate.power-manager.gschema.xml.in b/data/org.mate.power-manager.gschema.xml.in
index dcd2cd4..adecce0 100644
--- a/data/org.mate.power-manager.gschema.xml.in
+++ b/data/org.mate.power-manager.gschema.xml.in
@@ -183,13 +183,13 @@
     </key>
     <key name="lock-keyring-suspend" type="b">
       <default>false</default>
-      <_summary>Lock MATE keyring on sleep</_summary>
-      <_description>Whether the MATE keyring is locked before the computer enters suspend. This means the keyring will have to be unlocked on resume.</_description>
+      <_summary>Lock GNOME keyring on sleep</_summary>
+      <_description>Whether the GNOME keyring is locked before the computer enters suspend. This means the keyring will have to be unlocked on resume.</_description>
     </key>
     <key name="lock-keyring-hibernate" type="b">
       <default>true</default>
-      <_summary>Lock MATE keyring on sleep</_summary>
-      <_description>Whether the MATE keyring is locked before the computer enters hibernate. This means the keyring will have to be unlocked on resume.</_description>
+      <_summary>Lock GNOME keyring on sleep</_summary>
+      <_description>Whether the GNOME keyring is locked before the computer enters hibernate. This means the keyring will have to be unlocked on resume.</_description>
     </key>
     <key name="spindown-enable-ac" type="b">
       <default>false</default>
diff --git a/src/gpm-control.c b/src/gpm-control.c
index cb84814..8253336 100644
--- a/src/gpm-control.c
+++ b/src/gpm-control.c
@@ -42,7 +42,7 @@
 #include <libupower-glib/upower.h>
 
 #ifdef WITH_KEYRING
-#include <mate-keyring.h>
+#include <gnome-keyring.h>
 #endif /* WITH_KEYRING */
 
 #include "egg-debug.h"
@@ -212,8 +212,8 @@ enum {
 	GpmScreensaver *screensaver;
 	guint32 throttle_cookie = 0;
 #ifdef WITH_KEYRING
-	gboolean lock_mate_keyring;
-	MateKeyringResult keyres;
+	gboolean lock_gnome_keyring;
+	GnomeKeyringResult keyres;
 #endif /* WITH_KEYRING */
 
 	GError *dbus_error = NULL;
@@ -234,10 +234,10 @@ enum {
 
 #ifdef WITH_KEYRING
 	/* we should perhaps lock keyrings when sleeping #375681 */
-	lock_mate_keyring = g_settings_get_boolean (control->priv->settings, GPM_SETTINGS_LOCK_KEYRING_SUSPEND);
-	if (lock_mate_keyring) {
-		keyres = mate_keyring_lock_all_sync ();
-		if (keyres != MATE_KEYRING_RESULT_OK)
+	lock_gnome_keyring = g_settings_get_boolean (control->priv->settings, GPM_SETTINGS_LOCK_KEYRING_SUSPEND);
+	if (lock_gnome_keyring) {
+		keyres = gnome_keyring_lock_all_sync ();
+		if (keyres != GNOME_KEYRING_RESULT_OK)
 			egg_warning ("could not lock keyring");
 	}
 #endif /* WITH_KEYRING */
@@ -323,8 +323,8 @@ enum {
 	GpmScreensaver *screensaver;
 	guint32 throttle_cookie = 0;
 #ifdef WITH_KEYRING
-	gboolean lock_mate_keyring;
-	MateKeyringResult keyres;
+	gboolean lock_gnome_keyring;
+	GnomeKeyringResult keyres;
 #endif /* WITH_KEYRING */
 
 	GError *dbus_error = NULL;
@@ -345,10 +345,10 @@ enum {
 
 #ifdef WITH_KEYRING
 	/* we should perhaps lock keyrings when sleeping #375681 */
-	lock_mate_keyring = g_settings_get_boolean (control->priv->settings, GPM_SETTINGS_LOCK_KEYRING_HIBERNATE);
-	if (lock_mate_keyring) {
-		keyres = mate_keyring_lock_all_sync ();
-		if (keyres != MATE_KEYRING_RESULT_OK) {
+	lock_gnome_keyring = g_settings_get_boolean (control->priv->settings, GPM_SETTINGS_LOCK_KEYRING_HIBERNATE);
+	if (lock_gnome_keyring) {
+		keyres = gnome_keyring_lock_all_sync ();
+		if (keyres != GNOME_KEYRING_RESULT_OK) {
 			egg_warning ("could not lock keyring");
 		}
 	}
