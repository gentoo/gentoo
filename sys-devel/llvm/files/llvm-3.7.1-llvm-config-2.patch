From 4abc261d14c886c21d24f639293a60ce45c1dca3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20G=C3=B3rny?= <mgorny@gentoo.org>
Date: Wed, 2 Dec 2015 16:04:56 +0100
Subject: [PATCH 3/4] llvm-config: Clean up exported values, update for shared
 linking

Gentoo-specific fixup for llvm-config, including:
- wiping build-specific CFLAGS, CXXFLAGS,
- updating library suffixes for shared libs,
- wiping --system-libs for shared linking,
- banning --obj-root and --src-root due to no sources installed,
- making --build-mode return "Release" rather than "Gentoo".

Thanks to Steven Newbury for the initial patch.

Bug: https://bugs.gentoo.org/565358
Bug: https://bugs.gentoo.org/501684
---
 tools/llvm-config/CMakeLists.txt   | 11 ++++++++---
 tools/llvm-config/llvm-config.cpp  | 20 +++++++++++++++-----
 utils/llvm-build/llvmbuild/main.py |  4 +++-
 3 files changed, 26 insertions(+), 9 deletions(-)

diff --git a/tools/llvm-config/CMakeLists.txt b/tools/llvm-config/CMakeLists.txt
index 173f6dc..013ea8c 100644
--- a/tools/llvm-config/CMakeLists.txt
+++ b/tools/llvm-config/CMakeLists.txt
@@ -22,14 +22,19 @@ get_property(COMPILE_FLAGS TARGET llvm-config PROPERTY COMPILE_FLAGS)
 set(LLVM_SRC_ROOT ${LLVM_MAIN_SRC_DIR})
 set(LLVM_OBJ_ROOT ${LLVM_BINARY_DIR})
 set(LLVM_CPPFLAGS "${CMAKE_CPP_FLAGS} ${CMAKE_CPP_FLAGS_${uppercase_CMAKE_BUILD_TYPE}} ${LLVM_DEFINITIONS}")
-set(LLVM_CFLAGS "${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${uppercase_CMAKE_BUILD_TYPE}} ${LLVM_DEFINITIONS}")
-set(LLVM_CXXFLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${uppercase_CMAKE_BUILD_TYPE}} ${COMPILE_FLAGS} ${LLVM_DEFINITIONS}")
+# Just use CMAKE_CPP_FLAGS for CFLAGS and CXXFLAGS, otherwise compiler
+# specific flags will be set when we don't know what compiler will be used
+# with external project utilising llvm-config.  C++ Standard is required.
+# TODO: figure out if we can remove -std=c++11 and move it to revdeps.
+set(LLVM_CFLAGS "${CMAKE_CPP_FLAGS} ${CMAKE_C_FLAGS_${uppercase_CMAKE_BUILD_TYPE}} ${LLVM_DEFINITIONS}")
+set(LLVM_CXXFLAGS "${CMAKE_CPP_FLAGS} -std=c++11 ${CMAKE_CXX_FLAGS_${uppercase_CMAKE_BUILD_TYPE}} ${LLVM_DEFINITIONS}")
 set(LLVM_BUILD_SYSTEM cmake)
 
 # Use the C++ link flags, since they should be a superset of C link flags.
 set(LLVM_LDFLAGS "${CMAKE_CXX_LINK_FLAGS}")
 set(LLVM_BUILDMODE ${CMAKE_BUILD_TYPE})
-set(LLVM_SYSTEM_LIBS ${SYSTEM_LIBS})
+# We don't do static libs, so we don't need to supply any system-libs
+set(LLVM_SYSTEM_LIBS "")
 if(BUILD_SHARED_LIBS)
   set(LLVM_ENABLE_SHARED ON)
 else()
diff --git a/tools/llvm-config/llvm-config.cpp b/tools/llvm-config/llvm-config.cpp
index 51efbd8..315e5e1 100644
--- a/tools/llvm-config/llvm-config.cpp
+++ b/tools/llvm-config/llvm-config.cpp
@@ -487,7 +487,8 @@ int main(int argc, char **argv) {
       } else if (Arg == "--host-target") {
         OS << Triple::normalize(LLVM_DEFAULT_TARGET_TRIPLE) << '\n';
       } else if (Arg == "--build-mode") {
-        OS << build_mode << '\n';
+        // force Release since we force non-standard Gentoo build mode
+        OS << "Release" << '\n';
       } else if (Arg == "--assertion-mode") {
 #if defined(NDEBUG)
         OS << "OFF\n";
@@ -498,10 +499,19 @@ int main(int argc, char **argv) {
         PrintSharedMode = true;
       } else if (Arg == "--build-system") {
         OS << LLVM_BUILD_SYSTEM << '\n';
-      } else if (Arg == "--obj-root") {
-        OS << ActivePrefix << '\n';
-      } else if (Arg == "--src-root") {
-        OS << LLVM_SRC_ROOT << '\n';
+      } else if (Arg == "--obj-root" || Arg == "--src-root") {
+        if (IsInDevelopmentTree) {
+          if (Arg == "--obj-root") {
+            OS << ActivePrefix << '\n';
+          } else {
+            OS << LLVM_SRC_ROOT << '\n';
+          }
+        } else {
+          // sources are not installed
+          llvm::errs() << "llvm-config: sources not installed, "
+                       << Arg << " not available\n";
+          exit(1);
+        }
       } else {
         usage();
       }
diff --git a/utils/llvm-build/llvmbuild/main.py b/utils/llvm-build/llvmbuild/main.py
index 353741f..4ba5e91 100644
--- a/utils/llvm-build/llvmbuild/main.py
+++ b/utils/llvm-build/llvmbuild/main.py
@@ -393,6 +393,8 @@ subdirectories = %s
 //
 //===----------------------------------------------------------------------===//
 
+#include "llvm/Config/config.h"
+
 """)
         f.write('struct AvailableComponent {\n')
         f.write('  /// The name of the component.\n')
@@ -413,7 +415,7 @@ subdirectories = %s
             if library_name is None:
                 library_name_as_cstr = '0'
             else:
-                library_name_as_cstr = '"lib%s.a"' % library_name
+                library_name_as_cstr = '"lib%s" LTDL_SHLIB_EXT' % library_name
             f.write('  { "%s", %s, %d, { %s } },\n' % (
                 name, library_name_as_cstr, is_installed,
                 ', '.join('"%s"' % dep
-- 
2.7.4

