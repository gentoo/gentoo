From b196e11eabb14d11e5a6b4c3cd65bf115a71f0d9 Mon Sep 17 00:00:00 2001
From: Conrad Kostecki <conrad@kostecki.com>
Date: Wed, 16 Sep 2020 20:55:21 +0200
Subject: [PATCH] configure: fix compilation with clang

If -L/usr/lib is being included, this will break compiling on 64-bit with clang.

Signed-off-by: Conrad Kostecki <conrad@kostecki.com>
---
 configure | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/configure b/configure
index 5142055..aed9234 100755
--- a/configure
+++ b/configure
@@ -2283,11 +2283,10 @@ ac_config_headers="$ac_config_headers config.h"
 #
 #   If both header file and library are found, shell commands
 #   'action-if-found' is run. If 'action-if-found' is not specified, the
-#   default action appends '-I${ZLIB_HOME}/include' to CPFLAGS, appends
-#   '-L$ZLIB_HOME}/lib' to LDFLAGS, prepends '-lz' to LIBS, and calls
-#   AC_DEFINE(HAVE_LIBZ). You should use autoheader to include a definition
-#   for this symbol in a config.h file. Sample usage in a C/C++ source is as
-#   follows:
+#   default action appends '-I${ZLIB_HOME}/include' to CPFLAGS,prepends '-lz'
+#   to LIBS, and calls AC_DEFINE(HAVE_LIBZ). You should use autoheader to
+#   include a definition for this symbol in a config.h file.
+#   Sample usage in a C/C++ source is as follows:
 #
 #     #ifdef HAVE_LIBZ
 #     #include <zlib.h>
@@ -4079,7 +4078,6 @@ then
   ZLIB_OLD_LDFLAGS=$LDFLAGS
   ZLIB_OLD_CPPFLAGS=$CPPFLAGS
   if test -n "${ZLIB_HOME}"; then
-        LDFLAGS="$LDFLAGS -L${ZLIB_HOME}/lib"
         CPPFLAGS="$CPPFLAGS -I${ZLIB_HOME}/include"
   fi
 
@@ -4152,7 +4150,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
     #
 
                 CPPFLAGS="$CPPFLAGS -I${ZLIB_HOME}/include"
-                LDFLAGS="$LDFLAGS -L${ZLIB_HOME}/lib"
                 LIBS="-lz $LIBS"
 
 $as_echo "#define HAVE_LIBZ 1" >>confdefs.h
-- 
2.28.0

From b7d92ac6c01f006dde8d317a4311497c6eda0bd7 Mon Sep 17 00:00:00 2001
From: Conrad Kostecki <conrad@kostecki.com>
Date: Wed, 16 Sep 2020 21:02:07 +0200
Subject: [PATCH] configure: fix compilation with clang

If -L/usr/lib is being included, this will break compiling on 64-bit with clang.

Signed-off-by: Conrad Kostecki <conrad@kostecki.com>
---
 configure | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/tgl/configure b/tgl/configure
index 701a5d6..7ff1dac 100755
--- a/tgl/configure
+++ b/tgl/configure
@@ -2245,11 +2245,10 @@
 #
 #   If both header file and library are found, shell commands
 #   'action-if-found' is run. If 'action-if-found' is not specified, the
-#   default action appends '-I${ZLIB_HOME}/include' to CPFLAGS, appends
-#   '-L$ZLIB_HOME}/lib' to LDFLAGS, prepends '-lz' to LIBS, and calls
-#   AC_DEFINE(HAVE_LIBZ). You should use autoheader to include a definition
-#   for this symbol in a config.h file. Sample usage in a C/C++ source is as
-#   follows:
+#   default action appends '-I${ZLIB_HOME}/include' to CPFLAGS, prepends '-lz'
+#   to LIBS, and calls AC_DEFINE(HAVE_LIBZ). You should use autoheader to
+#   include a definition for this symbol in a config.h file. Sample usage
+#   in a C/C++ source is as follows:
 #
 #     #ifdef HAVE_LIBZ
 #     #include <zlib.h>
@@ -4072,7 +4071,6 @@
   ZLIB_OLD_LDFLAGS=$LDFLAGS
   ZLIB_OLD_CPPFLAGS=$CPPFLAGS
   if test -n "${ZLIB_HOME}"; then
-        LDFLAGS="$LDFLAGS -L${ZLIB_HOME}/lib"
         CPPFLAGS="$CPPFLAGS -I${ZLIB_HOME}/include"
   fi
 
@@ -4145,7 +4143,6 @@
     #
 
                 CPPFLAGS="$CPPFLAGS -I${ZLIB_HOME}/include"
-                LDFLAGS="$LDFLAGS -L${ZLIB_HOME}/lib"
                 LIBS="-lz $LIBS"
 
 $as_echo "#define HAVE_LIBZ 1" >>confdefs.h
--
2.28.0
