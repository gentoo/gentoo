--- a/tmp/alts_transport_security.cc.ORIG	2018-04-13 20:08:11.000000000 +0200
+++ b/src/core/tsi/alts_transport_security.cc	2018-05-20 16:54:49.995787548 +0200
@@ -45,7 +45,7 @@
 }
 
 void grpc_tsi_alts_init() {
-  memset(&g_alts_resource, 0, sizeof(alts_shared_resource));
+  memset((void*)&g_alts_resource, 0, sizeof(alts_shared_resource));
   gpr_mu_init(&g_alts_resource.mu);
   gpr_cv_init(&g_alts_resource.cv);
 }
--- a/tmp/client_channel.cc.ORIG	2018-04-13 20:08:11.000000000 +0200
+++ b/src/core/ext/filters/client_channel/client_channel.cc	2018-05-20 17:07:20.604746186 +0200
@@ -416,7 +416,7 @@
             grpc_uri* uri = grpc_uri_parse(server_uri, true);
             GPR_ASSERT(uri->path[0] != '\0');
             service_config_parsing_state parsing_state;
-            memset(&parsing_state, 0, sizeof(parsing_state));
+            memset((void*)&parsing_state, 0, sizeof(parsing_state));
             parsing_state.server_name =
                 uri->path[0] == '/' ? uri->path + 1 : uri->path;
             service_config->ParseGlobalParams(parse_retry_throttle_params,
--- a/tmp/channel.cc.ORIG	2018-04-13 20:08:11.000000000 +0200
+++ b/src/core/lib/surface/channel.cc	2018-05-20 16:58:01.632776988 +0200
@@ -103,7 +103,7 @@
     return channel;
   }
 
-  memset(channel, 0, sizeof(*channel));
+  memset((void*)channel, 0, sizeof(*channel));
   channel->target = target;
   channel->is_client = grpc_channel_stack_type_is_client(channel_stack_type);
   size_t channel_tracer_max_nodes = 0;  // default to off
@@ -280,7 +280,7 @@
   }
 
   grpc_call_create_args args;
-  memset(&args, 0, sizeof(args));
+  memset((void*)&args, 0, sizeof(args));
   args.channel = channel;
   args.parent = parent_call;
   args.propagation_mask = propagation_mask;
--- a/tmp/flow_control.cc.ORIG	2018-04-13 20:08:11.000000000 +0200
+++ b/src/core/ext/transport/chttp2/transport/flow_control.cc	2018-05-20 17:09:47.055738116 +0200
@@ -187,7 +187,7 @@
 uint32_t TransportFlowControl::MaybeSendUpdate(bool writing_anyway) {
   FlowControlTrace trace("t updt sent", this, nullptr);
   const uint32_t target_announced_window =
-      static_cast<const uint32_t>(target_window());
+      static_cast<uint32_t>(target_window());
   if ((writing_anyway || announced_window_ <= target_announced_window / 2) &&
       announced_window_ != target_announced_window) {
     const uint32_t announce = static_cast<uint32_t> GPR_CLAMP(
