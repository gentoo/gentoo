From 6e081841981af8fc0d88d4f549456fd93b7ae2ac Mon Sep 17 00:00:00 2001
From: Rudi Heitbaum <rudi@heitbaum.com>
Date: Wed, 6 Jul 2022 22:48:35 +1000
Subject: [PATCH 1/2] GLUtils: cast as char as formatting of non-void pointers
 is disallowed

---
 xbmc/utils/GLUtils.cpp | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/xbmc/utils/GLUtils.cpp b/xbmc/utils/GLUtils.cpp
index 1ef804709ff56..c36dcf6a20fec 100644
--- a/xbmc/utils/GLUtils.cpp
+++ b/xbmc/utils/GLUtils.cpp
@@ -148,27 +148,27 @@ void _VerifyGLState(const char* szfile, const char* szfunction, int lineno)
 void LogGraphicsInfo()
 {
 #if defined(HAS_GL) || defined(HAS_GLES)
-  const GLubyte *s;
+  const char* s;
 
-  s = glGetString(GL_VENDOR);
+  s = reinterpret_cast<const char*>(glGetString(GL_VENDOR));
   if (s)
     CLog::Log(LOGINFO, "GL_VENDOR = %s", s);
   else
     CLog::Log(LOGINFO, "GL_VENDOR = NULL");
 
-  s = glGetString(GL_RENDERER);
+  s = reinterpret_cast<const char*>(glGetString(GL_RENDERER));
   if (s)
     CLog::Log(LOGINFO, "GL_RENDERER = %s", s);
   else
     CLog::Log(LOGINFO, "GL_RENDERER = NULL");
 
-  s = glGetString(GL_VERSION);
+  s = reinterpret_cast<const char*>(glGetString(GL_VERSION));
   if (s)
     CLog::Log(LOGINFO, "GL_VERSION = %s", s);
   else
     CLog::Log(LOGINFO, "GL_VERSION = NULL");
 
-  s = glGetString(GL_SHADING_LANGUAGE_VERSION);
+  s = reinterpret_cast<const char*>(glGetString(GL_SHADING_LANGUAGE_VERSION));
   if (s)
     CLog::Log(LOGINFO, "GL_SHADING_LANGUAGE_VERSION = %s", s);
   else

From 6a504c306b743b73225bd81e490ef7dc9fae2c25 Mon Sep 17 00:00:00 2001
From: Rudi Heitbaum <rudi@heitbaum.com>
Date: Mon, 11 Jul 2022 09:39:02 +0000
Subject: [PATCH 2/2] WinSystemX11: cast as char as formatting of non-void
 pointers is disallowed

---
 xbmc/windowing/X11/WinSystemX11.cpp | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/xbmc/windowing/X11/WinSystemX11.cpp b/xbmc/windowing/X11/WinSystemX11.cpp
index 8a18288fd8af0..033c0f77bf454 100644
--- a/xbmc/windowing/X11/WinSystemX11.cpp
+++ b/xbmc/windowing/X11/WinSystemX11.cpp
@@ -1038,7 +1038,10 @@ bool CWinSystemX11::HasWindowManager()
 
   if(status == Success && items_read)
   {
-    CLog::Log(LOGDEBUG,"Window Manager Name: %s", data);
+    const char* s;
+
+    s = reinterpret_cast<const char*>(data);
+    CLog::Log(LOGDEBUG, "Window Manager Name: {}", s);
   }
   else
     CLog::Log(LOGDEBUG,"Window Manager Name: ");
