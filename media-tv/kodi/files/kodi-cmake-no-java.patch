diff --git a/xbmc/interfaces/swig/CMakeLists.txt b/xbmc/interfaces/swig/CMakeLists.txt
index 6e676159eb..d45a2ecbab 100644
--- a/xbmc/interfaces/swig/CMakeLists.txt
+++ b/xbmc/interfaces/swig/CMakeLists.txt
@@ -1,43 +1,21 @@
 function(generate_file file)
-  set(classpath ${GROOVY_DIR}/groovy-all-${GROOVY_VER}.jar
-                ${GROOVY_DIR}/commons-lang-${COMMONS_VER}.jar
-                ${CORE_SOURCE_DIR}/tools/codegenerator
-                ${CMAKE_CURRENT_SOURCE_DIR}/../python)
-  if(NOT CORE_SYSTEM_NAME STREQUAL windows)
-    set(devnull "/dev/null")
-    string(REPLACE ";" ":" classpath "${classpath}")
-  else()
-    set(devnull "nul")
-  endif()
-
-  set(CPP_FILE ${file}.cpp)
-  add_custom_command(OUTPUT ${CPP_FILE}
-                     COMMAND ${SWIG_EXECUTABLE}
-                     ARGS -w401 -c++ -o ${file}.xml -xml -I${CORE_SOURCE_DIR}/xbmc -xmllang python ${CMAKE_CURRENT_SOURCE_DIR}/../swig/${file}
-                     COMMAND ${Java_JAVA_EXECUTABLE}
-                     ARGS -cp "${classpath}" groovy.ui.GroovyMain ${CORE_SOURCE_DIR}/tools/codegenerator/Generator.groovy ${file}.xml ${CMAKE_CURRENT_SOURCE_DIR}/../python/PythonSwig.cpp.template ${file}.cpp > ${devnull}
-                     DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../swig/${file})
+  set(CPP_FILE ${CORE_SOURCE_DIR}/xbmc/interfaces/python/generated/${file}.cpp)
   set(SOURCES ${SOURCES} "${CPP_FILE}" PARENT_SCOPE)
 endfunction()
 
-find_package(Java COMPONENTS Runtime REQUIRED)
 find_package(SWIG REQUIRED)
 
 # The generated bindings
-set(INPUTS AddonModuleXbmcaddon.i
-           AddonModuleXbmcgui.i
-           AddonModuleXbmc.i
-           AddonModuleXbmcplugin.i
-           AddonModuleXbmcvfs.i
-           AddonModuleXbmcwsgi.i)
-
-set(GROOVY_DIR ${CORE_SOURCE_DIR}/tools/codegenerator/groovy)
-set(GROOVY_VER 2.4.4)
-set(COMMONS_VER 2.6)
+set(INPUTS AddonModuleXbmcaddon
+           AddonModuleXbmcgui
+           AddonModuleXbmc
+           AddonModuleXbmcplugin
+           AddonModuleXbmcvfs
+           AddonModuleXbmcwsgi)
 
 foreach(INPUT IN LISTS INPUTS)
   generate_file(${INPUT})
-  list(APPEND GEN_SRCS ${CMAKE_CURRENT_BINARY_DIR}/${INPUT}.cpp)
+  list(APPEND GEN_SRCS ${CMAKE_CURRENT_BINARY_DIR}/${INPUT}.i.cpp)
 endforeach()
 
 add_library(python_binding STATIC ${SOURCES})
