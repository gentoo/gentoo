--- a/SConstruct
+++ b/SConstruct
@@ -87,7 +87,7 @@ Commandline Options:
 build_target = 'all'
 
 # Optimization level
-opt_flags    = ' -g -O3 -DNDEBUG'
+opt_flags    = ' -DNDEBUG'
 
 # Architecture (defaults to build host type)
 compile_arch = ''
@@ -133,26 +133,6 @@ if dbug:
 if gcov:
     opt_flags = opt_flags + ' --coverage -g'
 
-if sysname == 'sunos':
-    compile_arch = ' -mtune=native'
-elif x86:
-    if bits == 32:
-        if machine == 'x86_64':
-            compile_arch = ' -mx32'
-        else:
-            compile_arch = ' -m32 -march=i686'
-            if sysname == 'linux':
-                link_arch = ' -Wl,-melf_i386'
-    else:
-        compile_arch = ' -m64'
-        if sysname == 'linux':
-            link_arch = ' -Wl,-melf_x86_64'
-    link_arch = compile_arch + link_arch
-elif machine == 's390x':
-    compile_arch = ' -mzarch'
-    if bits == 32:
-        compile_arch += ' -m32'
-
 boost      = int(ARGUMENTS.get('boost', 1))
 boost_pool = int(ARGUMENTS.get('boost_pool', 0))
 system_asio= int(ARGUMENTS.get('system_asio', 1))
--- a/galerautils/src/SConscript
+++ b/galerautils/src/SConscript
@@ -1,4 +1,4 @@
-Import('env', 'x86', 'sysname')
+Import('env', 'sysname')
 
 libgalerautils_env = env.Clone()
 
@@ -39,21 +39,6 @@ crc32c_env.Append(CPPFLAGS = ' -DWITH_GALERA')
 crc32c_sources = [ '#/www.evanjones.ca/crc32c.c' ]
 crc32c_objs = crc32c_env.SharedObject(crc32c_sources)
 
-if x86:
-    crc32c_env.Append(CFLAGS = ' -msse4.2')
-    if sysname == 'sunos':
-        # Ideally we want to simply strip SSE4.2 flag from the resulting
-        # crc32.pic.o
-        # (see http://ffmpeg.org/pipermail/ffmpeg-user/2013-March/013977.html)
-        # but that requires some serious scons-fu, so we just don't
-        # compile hardware support in if host CPU does not have it.
-        from subprocess import check_call
-        try:
-            check_call("isainfo -v | grep sse4.2 >/dev/null 2>&1", shell=True);
-        except:
-            libgalerautils_env.Append(CPPFLAGS = ' -DCRC32C_NO_HARDWARE')
-            crc32c_env.Append(CPPFLAGS = ' -DCRC32C_NO_HARDWARE')
-
 libgalerautils_env.StaticLibrary('galerautils',
                                  libgalerautils_objs + crc32c_objs)
 
