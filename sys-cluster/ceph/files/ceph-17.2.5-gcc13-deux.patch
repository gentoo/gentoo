https://bugs.gentoo.org/892501
https://src.fedoraproject.org/rpms/ceph/c/945dc70d291321704f3218faa7c3efe70687ce27?branch=rawhide
--- a/src/common/subsys_types.h
+++ b/src/common/subsys_types.h
@@ -53,7 +53,7 @@
 #undef DEFAULT_SUBSYS
 }
 
-constexpr static std::uint8_t
+constexpr static uint8_t
 ceph_subsys_get_max_default_level(const std::size_t subidx) {
   const auto item = ceph_subsys_get_as_array()[subidx];
   return std::max(item.log_level, item.gather_level);
--- a/src/msg/async/compression_onwire.h
+++ b/src/msg/async/compression_onwire.h
@@ -44,7 +44,7 @@
 
   class TxHandler final : private Handler {
   public:
-    TxHandler(CephContext* const cct, CompressorRef compressor, int mode, std::uint64_t min_size)
+    TxHandler(CephContext* const cct, CompressorRef compressor, int mode, uint64_t min_size)
       : Handler(cct, compressor),
 	m_min_size(min_size),
 	m_mode(static_cast<Compressor::CompressionMode>(mode))
@@ -97,7 +97,7 @@
     static rxtx_t create_handler_pair(
       CephContext* ctx,
       const CompConnectionMeta& comp_meta,
-      std::uint64_t compress_min_size);
+      uint64_t compress_min_size);
   };
 }
 
--- a/src/msg/async/crypto_onwire.h
+++ b/src/msg/async/crypto_onwire.h
@@ -95,7 +95,7 @@
   // Transmitter can append extra bytes of ciphertext at the -final step.
   // This method return how much was added, and thus let client translate
   // plaintext size into ciphertext size to grab from wire.
-  virtual std::uint32_t get_extra_size_at_final() = 0;
+  virtual uint32_t get_extra_size_at_final() = 0;
 
   // Instance of RxHandler must be reset before doing any decrypt-update
   // step. This applies also to situation when decrypt-final was already
--- a/src/common/Cycles.h
+++ b/src/common/Cycles.h
@@ -29,8 +29,9 @@
  */
 
 
-#ifndef CEPH_CYCLES_H
-#define CEPH_CYCLES_H
+#pragma once
+
+#include <cstdint>
 
 /**
  * This class provides static methods that read the fine-grain CPU
@@ -112,4 +113,3 @@
   }
 };
 
-#endif  // CEPH_CYCLES_H
--- a/src/test/librados/op_speed.cc
+++ b/src/test/librados/op_speed.cc
@@ -9,7 +9,7 @@
   for (int i = 0; i < to_create; ++i) {
     librados::ObjectReadOperation op;
     bufferlist bl;
-    std::uint64_t sz;
+    uint64_t sz;
     struct timespec tm;
     std::map<std::string, ceph::buffer::list> xattrs;
     std::map<std::string, ceph::buffer::list> omap;
--- a/src/test/mon/test_log_rss_usage.cc
+++ b/src/test/mon/test_log_rss_usage.cc
@@ -5,6 +5,7 @@
 #include <string>
 #include <iostream>
 #include <fstream>
+#include <cstdint>
 #include <stdlib.h>
 #include <stdio.h>
 #include <unistd.h>
--- a/src/librbd/api/PoolMetadata.h
+++ b/src/librbd/api/PoolMetadata.h
@@ -9,6 +9,7 @@
 
 #include <map>
 #include <string>
+#include <cstdint>
 
 namespace librbd {
 
