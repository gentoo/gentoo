.Dd $Mdocdate: December 6 2020 $
.Dt MODULE 1
.Os
.Sh NAME
.Nm module
.Nd lmod environment modules manager
.Sh SYNOPSIS
.Nm module
.Op Ar options
.Cm sub-command
.Op Ar args ...
.Sh DESCRIPTION
.Nm
from
.Sy Lmod
is a
.Xr lua 1
based module system to manage the users' environment under
Unix systems, specifically designed to easily handle
the
.Ev MODULEPATH
Hierarchical problem.
Environment Modules provide a convenient way to
dynamically change the users' environment through modulefiles.
This includes easily adding or removing directories from the
.Ev PATH , LD_LIBRARY_PATH , CPATH
and other environment variables.
All popular shells are supported, including bash, csh, fish,
ksh, sh, tcsh, zsh, as well as some scripting languages such
as tcl, perl and python.
.Sh OPTIONS
The following
.Ar options
are available:
.Pp
.Bl -tag -width Ds -compact
.It Fl h , \&? , H , -help
Show the help message.
.Pp
.It Fl -check_syntax , -checkSyntax
Only check the
.Nm
command syntax, do not load any modules.
.Pp
.It Fl -config
Report
.Sy Lmod
configuration.
.Pp
.It Fl -config_json
Report
.Sy Lmod
configuration in json format.
.Pp
.It Fl D
Write program tracing data to stderr.
.Pp
.It Fl d , -default
List default modules only when used with
.Cm avail .
.Pp
.It Fl -debug Ar dbglvl
.Sy VALUES :
1, 2, 3.
.Pp
Only write trace output with proper debug levels.
.Pp
.It Fl -dumpversion
Dump version in a machine readable way and quit.
.Pp
.It Fl -expert
Work in expert mode.
.Pp
.It Fl -force
Force removal of a sticky module or save an empty collection.
.Pp
.It Fl -gitversion
Dump git version in a machine readable way and quit.
.Pp
.It Fl -ignore_cache
Treat the cache file(s) as out-of-date.
.Pp
.It Fl -initial_load
Loading Lmod for first time in a user shell.
.Pp
.It Fl -latest
Load latest (ignore default).
.Pp
.It Fl -mt
Report Module Table State.
.Pp
.It Fl -no_redirect
Force output of
.Cm list ,
.Cm avail
and
.Cm spider
to stderr.
.Pp
.It Fl -novice
Turn off
.Fl -expert
and
.Fl -quiet
flags.
.Pp
.It Fl -nx , -no_extensions
.Pp
.It Fl -pin_versions Ar pinVersions
When doing a restore use the specified version, do not follow defaults.
.Pp
.It Fl q , -quiet
Do not print out warnings.
.Pp
.It Fl r , -regexp
Use regular expression match.
.Pp
.It Fl -raw
Print modulefile in raw output when used with show.
.Pp
.It Fl -redirect
Send the output of
.Cm list ,
.Cm avail
and
.Cm spider
to stdout (not stderr).
.Pp
.It Fl -regression_testing
Lmod regression testing.
.Pp
.It Fl -show_hidden
.Cm avail
and
.Cm spider
will report hidden modules.
.Pp
.It Fl -spider_timeout Ar timeout
A timeout for
.Cm spider .
.Pp
.It Fl s , -style Ar availStyle
.Sy DEFAULT :
system
Site controlled avail style.
.Pp
.It Fl T , -trace
.Pp
.It Fl t , -terse
Write out in machine readable format for
.Cm list ,
.Cm avail ,
.Cm spider
and
.Cm savelist .
.Pp
.It Fl -timer
Report run times.
.Pp
.It Fl v , -version
Print version info and quit.
.Pp
.It Fl -w , -width Ar twidth
Use
.Ar twidth
as max term width.
.El
.Sh SUB-COMMANDS
.Ss HELP
.TS
tab(@);
r l l.
T{
.Cm help
T}@@T{
Print the help message.
T}
T{
.Cm help
T}@T{
.Ar module Op Ar moduleX moduleY ...
T}@T{
Print help messages from the given modules.
T}
.TE
.Ss LOAD
.TS
tab(@);
r l l.
T{
.Cm load , add
T}@T{
.Ar module Op Ar moduleX moduleY ...
T}@T{
Load the given modules.
T}
T{
.Cm try-load , try-add
T}@T{
.Ar module Op Ar moduleX moduleY ...
T}@T{
Load the given modules, do not complain if not found.
T}
T{
.Cm del , unload
T}@T{
.Ar module Op Ar moduleX moduleY ...
T}@T{
Unload the module(s), does not complain if not found.
T}
T{
.Cm swap , sw , switch
T}@T{
.Ar moduleX moduleY
T}@T{
.Cm unload Ar moduleX
and
.Cm load Ar moduleY
T}
T{
.Cm purge
T}@@T{
.Cm unload
all modules
T}
T{
.Cm refresh
T}@@T{
Reload aliases from the current list of modules.
T}
T{
.Cm update
T}@@T{
Reload all currently loaded modules.
T}
.TE
.Ss SEARCH
.TS
tab(@);
r l l.
T{
.Cm list
T}@@T{
List all currently loaded modules.
T}
T{
.Cm list
T}@T{
.Ar patX Op Ar patY ...
T}@T{
List all loaded modules that match any of the given patterns.
T}
T{
.Cm avail , av
T}@T{
.Op Ar string
T}@T{
List all available modules.
Restricts to modules containing
.Ar string
if it is provided.
T}
T{
.Cm spider
T}@@T{
List all possible modules.
T}
T{
.Cm spider
T}@T{
.Ar module
T}@T{
List all possible versions of that
.Ar module
file.
T}
T{
.It Cm spider
T}@T{
.Ar string
T}@T{
List all modules that contain
.Ar string .
T}
T{
.Cm spider
T}@T{
.Ar name/version
T}@T{
Detailed information about that version of the module.
T}
T{
.It Cm whatis
T}@T{
.Ar module
T}@T{
Print whatis information about the module.
T}
T{
.Cm keyword , key 
T}@T{
.Ar string
T}@T{
Search all name and
.Cm whatis
that contain
.Ar string .
T}
.TE
.Pp
All searching commands (
.Cm spider ,
.Cm list ,
.Cm avail ,
.Cm keyword
) support regular expressions with the
.Fl r
flag.
.Pp
For example, to find all modules that start with
.Sq p
or
.Sq P :
.D1 module -r spider '^p'
.Pp
Find all modules that have
.Dq mpi
in their name:
.D1 module -r spider mpi
.Pp
Find all modules that end with
.Dq mpi
in their name:
.D1 module -r spider 'mpi$'
.Ss COLLECTIONS
.TS
tab(@);
r l l.
T{
.Cm save , s
T}@@T{
Save the current list of modules to a user defined
.Dq default
collection.
T}
T{
.Cm save , s
T}@T{
.Ar name
T}@T{
Save the current list of modules to the
.Ar name
collection.
T}
T{
.Cm reset
T}@@T{
The same as
.Cm restore
.Ar system .
T}
T{
.Cm restore , r
T}@@T{
Restore modules from the user's
.Dq default
(if defined) or the system default.
T}
T{
.Cm restore , r
T}@T{
.Ar name
T}@T{
Restore modules from
.Ar name
collection.
T}
T{
.Cm restore
T}@T{
.Ar system
T}@T{
Restore module state to system defaults.
T}
T{
.Cm savelist
T}@@T{
List of saved collections.
T}
T{
.Cm describe , mcc
T}@T{
.Ar name
T}@T{
Describe the contents of the
.Ar name
module collection.
T}
T{
.Cm disable
T}@T{
.Ar name
T}@T{
Disable (i.e. remove) the
.Ar name
collection.
T}
.TE
.Ss MISC
.TS
tab(@);
r l l.
T{
.Cm is-loaded 
T}@T{
.Ar modulefile
T}@T{
Return a true status if
.Ar module
is loaded.
T}
T{
.Cm is-avail
T}@T{
.Ar modulefile
T}@T{
Return a true status if
.Ar module
can be loaded.
T}
T{
.Cm show
T}@T{
.Ar modulefile
T}@T{
Show the commands in the
.Ar module
file.
T}
T{
.Cm use [-a]
T}@T{
.Ar path
T}@T{
Prepend or append
.Ar path
to
.Ev MODULEPATH .
T}
T{
.Cm unuse
T}@T{
.Ar path
T}@T{
Remove
.Ar path
from
.Ev MODULEPATH .
T}
T{
.Cm tablelist
T}@@T{
Output list of active modules as a lua table.
T}
.TE
.Ss DEPRECATED
.TS
tab(@);
r l l.
T{
.Cm getdefault
T}@T{
.Op Ar name
T}@T{
Load the
.Ar name
collection of modules or the users
.Dq default
if no
.Ar name
given. Use
.Cm restore
Instead.
T}
T{
.Cm setdefault
T}@T{
.Op Ar name
T}@T{
Save current list of modules to
.Ar name
if given, otherwise save as the
.Dq default
list for the user. Use
.Cm save
instead.
T}
.TE
.Sh ENVIRONMENT
To print properties and warnings in color, set the
.Ev LMOD_COLORIZE
environment variable to
.Sy YES .
.Sh SEE ALSO
.Bd -filled -offset indent
.TS
tab(@);
rb l.
T{
Documentation
T}@T{
.Lk http://lmod.readthedocs.org
T}
T{
Github
T}@T{
.Lk https://github.com/TACC/Lmod
T}
T{
Sourceforge
T}@T{
.Lk https://lmod.sf.net
T}
T{
TACC Homepage
T}@T{
.Lk https://www.tacc.utexas.edu/research-development/tacc-projects/lmod
T}
.TE
.Ed
.Pp
To report a bug please read
.Lk http://lmod.readthedocs.io/en/latest/075_bug_reporting.html
.Sh AUTHORS
Modules based on Lua, written by
.An Robert McLay Aq Mt mclay@tacc.utexas.edu .
.Pp
The man page for Gentoo linux is maintained by the
.An Gentoo Science Project Aq Mt sci@gentoo.org .
