diff -urN tuprolog-3.1.0.orig/src/alice/tuprolog/LibraryManager.java tuprolog-3.1.0/src/alice/tuprolog/LibraryManager.java
--- tuprolog-3.1.0.orig/src/alice/tuprolog/LibraryManager.java	2017-10-08 17:06:55.710627376 +0200
+++ tuprolog-3.1.0/src/alice/tuprolog/LibraryManager.java	2017-10-08 17:18:20.817598723 +0200
@@ -9,11 +9,11 @@
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.*;
-import cli.System.Reflection.Assembly;
+//import cli.System.Reflection.Assembly;
 
 import alice.tuprolog.event.LibraryEvent;
 import alice.tuprolog.event.WarningEvent;
-import alice.util.AssemblyCustomClassLoader;
+//import alice.util.AssemblyCustomClassLoader;
 
 /**
  * @author Alex Benini
@@ -179,31 +179,7 @@
 				} else
 				// .NET
 				{
-					Assembly asm = null;
-					boolean classFound = false;
-					className = "cli."
-							+ className.substring(0, className.indexOf(","))
-									.trim();
-					for (int i = 0; i < paths.length; i++)
-					{
-						try
-						{
-							asm = Assembly.LoadFrom(paths[i]);
-							loader = new AssemblyCustomClassLoader(asm, urls);
-							lib = (Library) Class.forName(className, true, loader).newInstance();
-							if (lib != null)
-							{
-								classFound = true;
-								break;
-							}
-						} catch (Exception e)
-						{
-							e.printStackTrace();
-							continue;
-						}
-					}
-					if (!classFound)
-						throw new InvalidLibraryException(className, -1, -1);
+					throw new InvalidLibraryException(className, -1, -1);
 				}
 			}
 
@@ -462,4 +438,4 @@
 		return optimizedDirectory;
 	}
 
-}
\ Manca newline alla fine del file
+}
diff -urN tuprolog-3.1.0.orig/src/alice/tuprologx/ide/LibraryManager.java tuprolog-3.1.0/src/alice/tuprologx/ide/LibraryManager.java
--- tuprolog-3.1.0.orig/src/alice/tuprologx/ide/LibraryManager.java	2017-10-08 17:06:55.796627373 +0200
+++ tuprolog-3.1.0/src/alice/tuprologx/ide/LibraryManager.java	2017-10-08 17:20:18.378593806 +0200
@@ -19,7 +19,7 @@
 
 import alice.tuprolog.*;
 import alice.tuprolog.InvalidLibraryException;
-import alice.util.AssemblyCustomClassLoader;
+//import alice.util.AssemblyCustomClassLoader;
 
 import java.io.File;
 import java.net.URL;
@@ -27,7 +27,7 @@
 import java.util.ArrayList;
 import java.util.Hashtable;
 import java.util.StringTokenizer;
-import cli.System.Reflection.Assembly;
+//import cli.System.Reflection.Assembly;
 
 /**
  * A dynamic manager for tuProlog libraries.
@@ -156,10 +156,7 @@
 	        	// .NET
 	        	if(System.getProperty("java.vm.name").equals("IKVM.NET"))
 	        	{
-	        		Assembly asm = Assembly.LoadFrom(file.getPath());
-	        		loader = new AssemblyCustomClassLoader(asm, new URL[]{url});
-	        		libraryClassname = "cli." + libraryClassname.substring(0, 
-	        				libraryClassname.indexOf(",")).trim();
+	        		throw new InvalidLibraryException(libraryClassname,-1,-1);
 	        	}
 	        	// JVM
 	        	else
diff -urN tuprolog-3.1.0.orig/src/alice/util/AssemblyCustomClassLoader.java tuprolog-3.1.0/src/alice/util/AssemblyCustomClassLoader.java
--- tuprolog-3.1.0.orig/src/alice/util/AssemblyCustomClassLoader.java	2017-10-08 17:06:55.863627370 +0200
+++ tuprolog-3.1.0/src/alice/util/AssemblyCustomClassLoader.java	1970-01-01 01:00:00.000000000 +0100
@@ -1,21 +0,0 @@
-package alice.util;
-
-import java.net.URL;
-
-public class AssemblyCustomClassLoader extends java.net.URLClassLoader
-{
-  public AssemblyCustomClassLoader(cli.System.Reflection.Assembly asm, URL[] urls)
-  {
-    super(new java.net.URL[0], new ikvm.runtime.AssemblyClassLoader(asm));
-    // explicitly calling addURL() is safer than passing it to the super constructor,
-    // because this class loader instance may be used during the URL construction.
-    for (URL url : urls) {
-    	addURL(url);
-	}    
-  }
-  
-  public void addUrl(URL url)
-  {
-	  addURL(url);
-  }
-}
\ Manca newline alla fine del file
diff -urN tuprolog-3.1.0.orig/src/alice/util/proxyGenerator/Generator.java tuprolog-3.1.0/src/alice/util/proxyGenerator/Generator.java
--- tuprolog-3.1.0.orig/src/alice/util/proxyGenerator/Generator.java	2017-10-08 17:06:55.877627369 +0200
+++ tuprolog-3.1.0/src/alice/util/proxyGenerator/Generator.java	2017-10-08 17:18:20.819598723 +0200
@@ -1,7 +1,7 @@
 package alice.util.proxyGenerator;
 import javax.tools.*;
 
-import cli.System.Reflection.Assembly;
+//import cli.System.Reflection.Assembly;
 
 import java.lang.reflect.*;
 import java.util.*;
@@ -29,7 +29,7 @@
     }
     
     if(System.getProperty("java.vm.name").equals("IKVM.NET"))
-    	ikvm.runtime.Startup.addBootClassPathAssemby(Assembly.Load("IKVM.OpenJDK.Tools"));
+    	throw new UnsupportedOperationException("IKVM.NET not supported!");
     
     jc = ToolProvider.getSystemJavaCompiler();
     if (jc == null) {
