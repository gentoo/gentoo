diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/ChoicePointStore.java 2p-2.4.0-RC5/src/alice/tuprolog/ChoicePointStore.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/ChoicePointStore.java	2011-07-18 18:49:42.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/ChoicePointStore.java	2012-01-15 10:02:51.000000000 +1300
@@ -36,7 +36,6 @@
     
     /**
 	 * Return the actual choice-point store
-	 * @return
 	 */
     public ChoicePointContext getPointer() {
         return pointer;
@@ -45,7 +44,6 @@
     /**
      * Check if a choice point exists in the store.
      * As a side effect, removes choice points which have been already used and are now empty. 
-     * @return
      */
     protected boolean existChoicePoint() {
         if (pointer == null) return false;
@@ -93,4 +91,4 @@
         return l;
     }
     
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/ClauseStore.java 2p-2.4.0-RC5/src/alice/tuprolog/ClauseStore.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/ClauseStore.java	2011-07-21 15:19:52.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/ClauseStore.java	2012-01-15 10:03:27.000000000 +1300
@@ -62,8 +62,6 @@
     
     /**
      * Verify if there is a term in compatibleGoals compatible with goal. 
-     * @param goal
-     * @param compGoals
      * @return true if compatible or false otherwise.
      */
     protected boolean existCompatibleClause() {
@@ -160,4 +158,4 @@
     }
     
     
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/EngineManager.java 2p-2.4.0-RC5/src/alice/tuprolog/EngineManager.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/EngineManager.java	2011-07-21 15:21:30.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/EngineManager.java	2012-01-15 10:03:54.000000000 +1300
@@ -96,7 +96,7 @@
     /**
      *  Solves a query
      *
-     * @param g the term representing the goal to be demonstrated
+     * @param query the term representing the goal to be demonstrated
      * @return the result of the demonstration
      * @see SolveInfo
      **/
@@ -243,4 +243,4 @@
     }
     
     
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/PrimitiveManager.java 2p-2.4.0-RC5/src/alice/tuprolog/PrimitiveManager.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/PrimitiveManager.java	2011-07-21 15:35:50.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/PrimitiveManager.java	2012-01-15 10:04:20.000000000 +1300
@@ -89,7 +89,7 @@
      * This involves identifying structs representing builtin
      * predicates and functors, and setting up related structures and links
      *
-     * @parm term the term to be identified
+     * @param term the term to be identified
      * @return term with the identified built-in directive
      */
     public Term identifyDirective(Term term) {
@@ -192,4 +192,4 @@
 		return (functorHashMap.containsKey(name + "/" + nArgs) || predicateHashMap.containsKey(name + "/" + nArgs));
 	}
     /**/
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/event/SpyEvent.java 2p-2.4.0-RC5/src/alice/tuprolog/event/SpyEvent.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/event/SpyEvent.java	2011-07-21 15:47:18.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/event/SpyEvent.java	2012-01-15 10:21:13.000000000 +1300
@@ -33,10 +33,6 @@
 	 * event description
 	 */
     private String msg;
-    /**
-	 * @uml.property  name="env"
-	 * @uml.associationEnd  
-	 */
     private Engine env;
 
     public SpyEvent(Object source, String msg_) {
@@ -63,4 +59,4 @@
         return msg + ((env == null) ? "" : env.toString());
     }
 
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/lib/BasicLibrary.java 2p-2.4.0-RC5/src/alice/tuprolog/lib/BasicLibrary.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/lib/BasicLibrary.java	2011-09-16 18:00:58.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/lib/BasicLibrary.java	2012-01-15 10:04:49.000000000 +1300
@@ -114,7 +114,7 @@
     /**
      * Loads a library constructed from a theory.
      * 
-     * @param theory
+     * @param th
      *            theory text
      * @param libName
      *            name of the library
@@ -1264,4 +1264,4 @@
                 { "\\", "expression_bitwise_not", "functor" } };
     }
 
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/lib/IOLibrary.java 2p-2.4.0-RC5/src/alice/tuprolog/lib/IOLibrary.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/lib/IOLibrary.java	2011-07-21 15:50:40.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/lib/IOLibrary.java	2012-01-15 10:06:27.000000000 +1300
@@ -375,7 +375,7 @@
     /**
      * Sets an arbitrary seed for the Random object.
      * 
-     * @param seed Seed to use
+     * @param t Seed to use
      * @return true if seed Term has a valid long value, false otherwise
      */
     public boolean set_seed_1(Term t) throws PrologError {
@@ -470,4 +470,4 @@
         }
         return true;
     }
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprolog/lib/JavaLibrary.java 2p-2.4.0-RC5/src/alice/tuprolog/lib/JavaLibrary.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprolog/lib/JavaLibrary.java	2011-07-21 15:50:42.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprolog/lib/JavaLibrary.java	2012-01-15 10:10:02.000000000 +1300
@@ -1393,8 +1393,6 @@
 
     /**
      * Generates a fresh numeric identifier
-     * 
-     * @return
      */
     protected Struct generateFreshId() {
         return new Struct("$obj_" + id++);
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprologx/ide/Console.java 2p-2.4.0-RC5/src/alice/tuprologx/ide/Console.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprologx/ide/Console.java	2011-06-29 17:00:06.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprologx/ide/Console.java	2012-01-15 10:10:45.000000000 +1300
@@ -10,8 +10,5 @@
     public void getNextSolution();
     public void acceptSolution();
     public void stopEngine();
-    /**
-	 * @uml.property  name="goal"
-	 */
     public String getGoal();
-}
\ No newline at end of file
+}
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprologx/ide/LibraryDialogFrame.java 2p-2.4.0-RC5/src/alice/tuprologx/ide/LibraryDialogFrame.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprologx/ide/LibraryDialogFrame.java	2011-07-21 16:02:44.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprologx/ide/LibraryDialogFrame.java	2012-01-15 10:11:41.000000000 +1300
@@ -325,7 +325,6 @@
         displayLibraryManagerStatus();
     }
 
-    /** @see alice.tuprologx.ide.SwingFrame#onClose()*/
     public void closeLibraryDialog()
     {
         onClose();
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprologx/ide/ToolBar.java 2p-2.4.0-RC5/src/alice/tuprologx/ide/ToolBar.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprologx/ide/ToolBar.java	2011-07-21 16:10:16.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprologx/ide/ToolBar.java	2012-01-15 10:12:21.000000000 +1300
@@ -242,8 +242,6 @@
 
     /**
      * Set the tuProlog config frame
-     *
-     * @param libraryManager a libraryManager to associate to the libraryDialog 
      */
     public void setPrologConfig(PrologConfigFrame configFrame)
     {
diff -ur 2p-2.4.0-RC5.orig/src/alice/tuprologx/pj/lib/PJLibrary.java 2p-2.4.0-RC5/src/alice/tuprologx/pj/lib/PJLibrary.java
--- 2p-2.4.0-RC5.orig/src/alice/tuprologx/pj/lib/PJLibrary.java	2011-07-21 16:18:14.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/tuprologx/pj/lib/PJLibrary.java	2012-01-15 10:13:01.000000000 +1300
@@ -1252,7 +1252,6 @@
 	
 	/**
 	 * Generates a fresh numeric identifier
-	 * @return
 	 */
 	protected Struct generateFreshId() {
 		return new Struct("$obj_" + id++);        
diff -ur 2p-2.4.0-RC5.orig/src/alice/util/ReadOnlyLinkedList.java 2p-2.4.0-RC5/src/alice/util/ReadOnlyLinkedList.java
--- 2p-2.4.0-RC5.orig/src/alice/util/ReadOnlyLinkedList.java	2011-07-21 16:27:00.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/util/ReadOnlyLinkedList.java	2012-01-15 10:01:28.000000000 +1300
@@ -12,10 +12,10 @@
 import java.util.ListIterator;
 
 /**
- * ReadOnlyLinkedList<E> encapsulate a {@link LinkedList<E>}
+ * ReadOnlyLinkedList<E> encapsulate a {@link LinkedList}
  * and ensures that the given list is navigated only.
  *
- * Even if ReadOnlyLinkedList<E> implements {@link List<E>} it doesn't
+ * Even if ReadOnlyLinkedList<E> implements {@link List} it doesn't
  * support modifiers methods, and throws {@link UnsupportedOperationException}
  * if invoked.
  *
diff -ur 2p-2.4.0-RC5.orig/src/alice/util/jedit/InputHandler.java 2p-2.4.0-RC5/src/alice/util/jedit/InputHandler.java
--- 2p-2.4.0-RC5.orig/src/alice/util/jedit/InputHandler.java	2011-07-21 16:33:22.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/util/jedit/InputHandler.java	2012-01-15 10:19:53.000000000 +1300
@@ -24,7 +24,7 @@
  *
  * @author Slava Pestov
  * @version $Id: InputHandler.java,v 1.14 1999/12/13 03:40:30 sp Exp $
- * @see org.gjt.sp.jedit.textarea.DefaultInputHandler
+ * @see alice.util.jedit.DefaultInputHandler
  */
 public abstract class InputHandler extends KeyAdapter
 {
@@ -187,7 +187,7 @@
     /**
      * Grabs the next key typed event and invokes the specified
      * action with the key as a the action command.
-     * @param action The action
+     * @param listener The action
      */
     public void grabNextKeyStroke(ActionListener listener)
     {
diff -ur 2p-2.4.0-RC5.orig/src/alice/util/jedit/JEditTextArea.java 2p-2.4.0-RC5/src/alice/util/jedit/JEditTextArea.java
--- 2p-2.4.0-RC5.orig/src/alice/util/jedit/JEditTextArea.java	2011-09-28 12:26:10.000000000 +1300
+++ 2p-2.4.0-RC5/src/alice/util/jedit/JEditTextArea.java	2012-01-15 10:16:47.000000000 +1300
@@ -1392,7 +1392,7 @@
 
     /**
      * Sets if the selection should be rectangular.
-     * @param overwrite True if the selection should be rectangular,
+     * @param rectSelect True if the selection should be rectangular,
      * false otherwise.
      */
     public final void setSelectionRectangular(boolean rectSelect)
diff -ur 2p-2.4.0-RC5.orig/src/alice/util/jedit/KeywordMap.java 2p-2.4.0-RC5/src/alice/util/jedit/KeywordMap.java
--- 2p-2.4.0-RC5.orig/src/alice/util/jedit/KeywordMap.java	2011-07-21 16:34:58.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/util/jedit/KeywordMap.java	2012-01-15 10:17:35.000000000 +1300
@@ -75,7 +75,7 @@
     /**
      * Adds a key-value mapping.
      * @param keyword The key
-     * @Param id The value
+     * @param id The value
      */
     public void add(String keyword, byte id)
     {
@@ -102,9 +102,6 @@
     }
 
     // protected members
-    /**
-	 * @uml.property  name="mapLength"
-	 */
     protected int mapLength;
 
     protected int getStringMapKey(String s)
diff -ur 2p-2.4.0-RC5.orig/src/alice/util/jedit/TextAreaPainter.java 2p-2.4.0-RC5/src/alice/util/jedit/TextAreaPainter.java
--- 2p-2.4.0-RC5.orig/src/alice/util/jedit/TextAreaPainter.java	2011-07-21 16:39:24.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/util/jedit/TextAreaPainter.java	2012-01-15 10:20:32.000000000 +1300
@@ -75,7 +75,7 @@
 
     /**
 	 * Returns the syntax styles used to paint colorized text. Entry <i>n</i> will be used to paint tokens with id = <i>n</i>.
-	 * @see  org.gjt.sp.jedit.syntax.Token
+	 * @see  alice.util.jedit.Token
 	 */
     public final SyntaxStyle[] getStyles()
     {
@@ -85,7 +85,7 @@
     /**
 	 * Sets the syntax styles used to paint colorized text. Entry <i>n</i> will be used to paint tokens with id = <i>n</i>.
 	 * @param styles  The syntax styles
-	 * @see  org.gjt.sp.jedit.syntax.Token
+	 * @see  alice.util.jedit.Token
 	 */
     public final void setStyles(SyntaxStyle[] styles)
     {
@@ -356,7 +356,7 @@
 
     /**
      * Repaints the text.
-     * @param g The graphics context
+     * @param gfx The graphics context
      */
     public void paint(Graphics gfx)
     {
diff -ur 2p-2.4.0-RC5.orig/src/alice/util/jedit/TokenMarker.java 2p-2.4.0-RC5/src/alice/util/jedit/TokenMarker.java
--- 2p-2.4.0-RC5.orig/src/alice/util/jedit/TokenMarker.java	2011-07-21 16:39:24.000000000 +1200
+++ 2p-2.4.0-RC5/src/alice/util/jedit/TokenMarker.java	2012-01-15 10:20:47.000000000 +1300
@@ -23,7 +23,7 @@
  * @author Slava Pestov
  * @version $Id: TokenMarker.java,v 1.32 1999/12/13 03:40:30 sp Exp $
  *
- * @see org.gjt.sp.jedit.syntax.Token
+ * @see alice.util.jedit.Token
  */
 public abstract class TokenMarker
 {
