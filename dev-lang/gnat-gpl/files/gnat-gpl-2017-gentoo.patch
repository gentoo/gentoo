--- patch/13_all_default-ssp-fix.patch.old	2017-06-14 11:29:28.997183865 +0200
+++ patch/13_all_default-ssp-fix.patch	2017-06-14 12:24:15.042271863 +0200
@@ -39,9 +39,9 @@
   %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %b.s}}}\
   %{fsyntax-only:-o %j} %{-param*}\
 + %{nostdlib:-nostdlib}\
-  %{coverage:-fprofile-arcs -ftest-coverage}";
+  %{coverage:-fprofile-arcs -ftest-coverage}\
+  %{fdump-scos:-fpreserve-decisions-generic}";
  
- static const char *asm_options =
 --- a/gcc/params.def	2016-03-30 09:47:40.000000000 +0200
 +++ b/gcc/params.def	2016-09-19 12:56:58.443179039 +0200
 @@ -673,7 +673,7 @@ DEFPARAM (PARAM_INTEGER_SHARE_LIMIT,
--- gcc-6-gpl-2017-src/gcc/ada/osint.adb.old	2017-03-10 21:58:02.600710156 +0100
+++ gcc-6-gpl-2017-src/gcc/ada/osint.adb	2017-03-10 21:59:38.033983293 +0100
@@ -2229,14 +2229,11 @@
       for J in Start_Of_Prefix .. Name_Len - Prog'Length + 1 loop
          if Name_Buffer (J .. J + Prog'Length - 1) = Prog then
             End_Of_Prefix := J - 1;
+            Start_Of_Suffix := J + Prog'Length;
             exit;
          end if;
       end loop;
 
-      if End_Of_Prefix > 1 then
-         Start_Of_Suffix := End_Of_Prefix + Prog'Length + 1;
-      end if;
-
       --  Create the new program name
 
       return new String'
--- gcc-6-gpl-2017-src/libgcc/config/i386/linux-unwind.h.old	2017-12-07 20:57:02.737224515 +0100
+++ gcc-6-gpl-2017-src/libgcc/config/i386/linux-unwind.h	2017-12-07 21:01:59.431929926 +0100
@@ -58,7 +58,7 @@
   if (*(unsigned char *)(pc+0) == 0x48
       && *(unsigned long long *)(pc+1) == RT_SIGRETURN_SYSCALL)
     {
-      struct ucontext *uc_ = context->cfa;
+      ucontext_t *uc_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
          because it does not alias anything.  */
@@ -138,7 +138,7 @@
 	siginfo_t *pinfo;
 	void *puc;
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
--- gcc-6-gpl-2017-src/libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc.old	2017-12-07 22:05:30.512328872 +0100
+++ gcc-6-gpl-2017-src/libsanitizer/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	2017-12-07 22:05:53.104950070 +0100
@@ -267,7 +267,7 @@
 
   // Alternate stack for signal handling.
   InternalScopedBuffer<char> handler_stack_memory(kHandlerStackSize);
-  struct sigaltstack handler_stack;
+  stack_t handler_stack;
   internal_memset(&handler_stack, 0, sizeof(handler_stack));
   handler_stack.ss_sp = handler_stack_memory.data();
   handler_stack.ss_size = kHandlerStackSize;
--- gcc-6-gpl-2017-src/libsanitizer/sanitizer_common/sanitizer_linux.cc.old	2017-12-07 22:09:04.912731275 +0100
+++ gcc-6-gpl-2017-src/libsanitizer/sanitizer_common/sanitizer_linux.cc	2017-12-07 22:10:03.150754764 +0100
@@ -546,8 +546,7 @@
 }
 #endif
 
-uptr internal_sigaltstack(const struct sigaltstack *ss,
-                         struct sigaltstack *oss) {
+uptr internal_sigaltstack(const void *ss, void *oss) {
   return internal_syscall(SYSCALL(sigaltstack), (uptr)ss, (uptr)oss);
 }
 
--- gcc-6-gpl-2017-src/libsanitizer/sanitizer_common/sanitizer_linux.h.old	2017-12-07 22:10:10.109638062 +0100
+++ gcc-6-gpl-2017-src/libsanitizer/sanitizer_common/sanitizer_linux.h	2017-12-07 22:10:30.991287828 +0100
@@ -28,8 +28,7 @@
 
 // Syscall wrappers.
 uptr internal_getdents(fd_t fd, struct linux_dirent *dirp, unsigned int count);
-uptr internal_sigaltstack(const struct sigaltstack* ss,
-                          struct sigaltstack* oss);
+uptr internal_sigaltstack(const void* ss, void* oss);
 uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,
     __sanitizer_sigset_t *oldset);
 void internal_sigfillset(__sanitizer_sigset_t *set);
--- gcc-6-gpl-2017-src/libsanitizer/tsan/tsan_platform_linux.cc.old	2017-12-07 22:15:09.626608907 +0100
+++ gcc-6-gpl-2017-src/libsanitizer/tsan/tsan_platform_linux.cc	2017-12-07 22:15:28.825286145 +0100
@@ -291,7 +291,7 @@
 int ExtractResolvFDs(void *state, int *fds, int nfd) {
 #if SANITIZER_LINUX
   int cnt = 0;
-  __res_state *statp = (__res_state*)state;
+  struct __res_state *statp = (struct __res_state*)state;
   for (int i = 0; i < MAXNS && cnt < nfd; i++) {
     if (statp->_u._ext.nsaddrs[i] && statp->_u._ext.nssocks[i] != -1)
       fds[cnt++] = statp->_u._ext.nssocks[i];
