From 9fb44efd4a6270443ca2a06a098c83cf9820cc8b Mon Sep 17 00:00:00 2001
From: Georgy Yakovlev <gyakovlev@gentoo.org>
Date: Thu, 8 Oct 2020 22:38:54 -0700
Subject: [PATCH] add gentoo musl target specs

Directly based on patch by Samuel Holland <samuel@sholland.org>
Found at: https://github.com/smaeul/portage-overlay/blob/master/dev-lang/rust/files/

Signed-off-by: Georgy Yakovlev <gyakovlev@gentoo.org>
---
 src/librustc_target/spec/aarch64_gentoo_linux_musl.rs | 11 +++++++++++
 .../spec/armv7_gentoo_linux_musleabihf.rs             | 11 +++++++++++
 src/librustc_target/spec/i686_gentoo_linux_musl.rs    | 11 +++++++++++
 src/librustc_target/spec/mod.rs                       |  8 ++++++++
 .../spec/powerpc64_gentoo_linux_musl.rs               | 11 +++++++++++
 .../spec/powerpc64le_gentoo_linux_musl.rs             | 11 +++++++++++
 src/librustc_target/spec/powerpc_gentoo_linux_musl.rs | 11 +++++++++++
 src/librustc_target/spec/x86_64_gentoo_linux_musl.rs  | 11 +++++++++++
 8 files changed, 85 insertions(+)
 create mode 100644 src/librustc_target/spec/aarch64_gentoo_linux_musl.rs
 create mode 100644 src/librustc_target/spec/armv7_gentoo_linux_musleabihf.rs
 create mode 100644 src/librustc_target/spec/i686_gentoo_linux_musl.rs
 create mode 100644 src/librustc_target/spec/powerpc64_gentoo_linux_musl.rs
 create mode 100644 src/librustc_target/spec/powerpc64le_gentoo_linux_musl.rs
 create mode 100644 src/librustc_target/spec/powerpc_gentoo_linux_musl.rs
 create mode 100644 src/librustc_target/spec/x86_64_gentoo_linux_musl.rs

diff --git a/src/librustc_target/spec/aarch64_gentoo_linux_musl.rs b/src/librustc_target/spec/aarch64_gentoo_linux_musl.rs
new file mode 100644
index 0000000..420fe7c
--- /dev/null
+++ b/src/librustc_target/spec/aarch64_gentoo_linux_musl.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::aarch64_unknown_linux_musl::target()?;
+
+    base.llvm_target = "aarch64-gentoo-linux-musl".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
diff --git a/src/librustc_target/spec/armv7_gentoo_linux_musleabihf.rs b/src/librustc_target/spec/armv7_gentoo_linux_musleabihf.rs
new file mode 100644
index 0000000..067e2d6
--- /dev/null
+++ b/src/librustc_target/spec/armv7_gentoo_linux_musleabihf.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::armv7_unknown_linux_musleabihf::target()?;
+
+    base.llvm_target = "armv7-gentoo-linux-musleabihf".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
diff --git a/src/librustc_target/spec/i686_gentoo_linux_musl.rs b/src/librustc_target/spec/i686_gentoo_linux_musl.rs
new file mode 100644
index 0000000..1cd39cd
--- /dev/null
+++ b/src/librustc_target/spec/i686_gentoo_linux_musl.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::i686_unknown_linux_musl::target()?;
+
+    base.llvm_target = "i686-gentoo-linux-musl".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
diff --git a/src/librustc_target/spec/mod.rs b/src/librustc_target/spec/mod.rs
index fa29ff3..a685600 100644
--- a/src/librustc_target/spec/mod.rs
+++ b/src/librustc_target/spec/mod.rs
@@ -490,6 +490,14 @@ macro_rules! supported_targets {
 }
 
 supported_targets! {
+    ("aarch64-gentoo-linux-musl", aarch64_gentoo_linux_musl),
+    ("armv7-gentoo-linux-musleabihf", armv7_gentoo_linux_musleabihf),
+    ("i686-gentoo-linux-musl", i686_gentoo_linux_musl),
+    ("powerpc-gentoo-linux-musl", powerpc_gentoo_linux_musl),
+    ("powerpc64-gentoo-linux-musl", powerpc64_gentoo_linux_musl),
+    ("powerpc64le-gentoo-linux-musl", powerpc64le_gentoo_linux_musl),
+    ("x86_64-gentoo-linux-musl", x86_64_gentoo_linux_musl),
+
     ("x86_64-unknown-linux-gnu", x86_64_unknown_linux_gnu),
     ("x86_64-unknown-linux-gnux32", x86_64_unknown_linux_gnux32),
     ("i686-unknown-linux-gnu", i686_unknown_linux_gnu),
diff --git a/src/librustc_target/spec/powerpc64_gentoo_linux_musl.rs b/src/librustc_target/spec/powerpc64_gentoo_linux_musl.rs
new file mode 100644
index 0000000..e840bb2
--- /dev/null
+++ b/src/librustc_target/spec/powerpc64_gentoo_linux_musl.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::powerpc64_unknown_linux_musl::target()?;
+
+    base.llvm_target = "powerpc64-gentoo-linux-musl".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
diff --git a/src/librustc_target/spec/powerpc64le_gentoo_linux_musl.rs b/src/librustc_target/spec/powerpc64le_gentoo_linux_musl.rs
new file mode 100644
index 0000000..1037d82
--- /dev/null
+++ b/src/librustc_target/spec/powerpc64le_gentoo_linux_musl.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::powerpc64le_unknown_linux_musl::target()?;
+
+    base.llvm_target = "powerpc64le-gentoo-linux-musl".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
diff --git a/src/librustc_target/spec/powerpc_gentoo_linux_musl.rs b/src/librustc_target/spec/powerpc_gentoo_linux_musl.rs
new file mode 100644
index 0000000..a623ffe
--- /dev/null
+++ b/src/librustc_target/spec/powerpc_gentoo_linux_musl.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::powerpc_unknown_linux_musl::target()?;
+
+    base.llvm_target = "powerpc-gentoo-linux-musl".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
diff --git a/src/librustc_target/spec/x86_64_gentoo_linux_musl.rs b/src/librustc_target/spec/x86_64_gentoo_linux_musl.rs
new file mode 100644
index 0000000..f330473
--- /dev/null
+++ b/src/librustc_target/spec/x86_64_gentoo_linux_musl.rs
@@ -0,0 +1,11 @@
+use crate::spec::TargetResult;
+
+pub fn target() -> TargetResult {
+    let mut base = super::x86_64_unknown_linux_musl::target()?;
+
+    base.llvm_target = "x86_64-gentoo-linux-musl".to_string();
+    base.target_vendor = "gentoo".to_string();
+    base.options.crt_static_default = false;
+
+    Ok(base)
+}
-- 
2.28.0

