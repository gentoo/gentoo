From cc9c45c0083688bfb833cdf669668db7c41a5bbb Mon Sep 17 00:00:00 2001
From: Sam James <sam@gentoo.org>
Date: Fri, 4 Nov 2022 03:38:19 +0000
Subject: [PATCH] Fix -Wimplicit-int, -Wimplicit-function-declaration

These warnings became fatal by default in Clang 16.

Most of this has since been fixed upstream but
https://github.com/python/cpython/pull/99085 is pending.

Signed-off-by: Sam James <sam@gentoo.org>
--- a/configure.ac
+++ b/configure.ac
@@ -2801,11 +2801,12 @@ if test "$posix_threads" = "yes"; then
       AC_CACHE_VAL(ac_cv_pthread_system_supported,
       [AC_RUN_IFELSE([AC_LANG_SOURCE([[
       #include <stdio.h>
+      #include <stdlib.h>
       #include <pthread.h>
       void *foo(void *parm) {
         return NULL;
       }
-      main() {
+      int main() {
         pthread_attr_t attr;
         pthread_t id;
         if (pthread_attr_init(&attr)) exit(-1);
@@ -4164,6 +4165,7 @@ then
   AC_MSG_CHECKING(whether wchar_t is signed)
   AC_CACHE_VAL(ac_cv_wchar_t_signed, [
   AC_RUN_IFELSE([AC_LANG_SOURCE([[
+  #include <stdlib.h>
   #include <wchar.h>
   int main()
   {
@@ -4253,6 +4255,7 @@ AC_C_BIGENDIAN
 AC_MSG_CHECKING(whether right shift extends the sign bit)
 AC_CACHE_VAL(ac_cv_rshift_extends_sign, [
 AC_RUN_IFELSE([AC_LANG_SOURCE([[
+#include <stdlib.h>
 int main()
 {
 	exit(((-1)>>3 == -1) ? 0 : 1);
