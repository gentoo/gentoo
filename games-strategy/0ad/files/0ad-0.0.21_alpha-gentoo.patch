--- 0ad-0.0.21-alpha/build/premake/premake4/build/gmake.unix/Premake4.make
+++ 0ad-0.0.21-alpha/build/premake/premake4/build/gmake.unix/Premake4.make
@@ -26,9 +26,9 @@
   DEFINES   += -DNDEBUG -DLUA_USE_POSIX -DLUA_USE_DLOPEN
   INCLUDES  += -I../../src/host/lua-5.1.4/src
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
-  CFLAGS    += $(CPPFLAGS) -Wall -Os
-  CXXFLAGS  += $(CPPFLAGS) -Wall -Os
-  LDFLAGS   += -s -rdynamic
+  CFLAGS    += $(CPPFLAGS) -Wall
+  CXXFLAGS  += $(CPPFLAGS) -Wall
+  LDFLAGS   += -rdynamic
   LIBS      += -lm -ldl 
   RESFLAGS  += $(DEFINES) $(INCLUDES) 
   LDDEPS    += 
@@ -48,8 +48,8 @@
   DEFINES   += -D_DEBUG -DLUA_USE_POSIX -DLUA_USE_DLOPEN
   INCLUDES  += -I../../src/host/lua-5.1.4/src
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
-  CFLAGS    += $(CPPFLAGS) -Wall -g
-  CXXFLAGS  += $(CPPFLAGS) -Wall -g
+  CFLAGS    += $(CFLAGS) $(CPPFLAGS) -Wall
+  CXXFLAGS  += $(CXXFLAGS) $(CPPFLAGS) -Wall
   LDFLAGS   += -rdynamic
   LIBS      += -lm -ldl 
   RESFLAGS  += $(DEFINES) $(INCLUDES) 
--- 0ad-0.0.21-alpha/build/premake/premake4/src/tools/gcc.lua
+++ 0ad-0.0.21-alpha/build/premake/premake4/src/tools/gcc.lua
@@ -136,8 +136,6 @@
 		if not cfg.flags.Symbols then
 			if cfg.system == "macosx" then
 				table.insert(result, "-Wl,-x")
-			else
-				table.insert(result, "-s")
 			end
 		end
 	
--- 0ad-0.0.21-alpha/libraries/source/fcollada/src/Makefile
+++ 0ad-0.0.21-alpha/libraries/source/fcollada/src/Makefile
@@ -9,9 +9,9 @@
 
 CXX ?= g++
 CXXFLAGS += -fvisibility=hidden -W -Wall -Wno-unused-parameter -Wno-unused-function $(OS_DEFINE) $(PIC_FLAGS) $(CPPFLAGS)
-CXXFLAGS_DEBUG := -O0 -g -D_DEBUG -DRETAIL
-CXXFLAGS_RELEASE := -O2 -DNDEBUG -DRETAIL
-CXXFLAGS_TEST := -O0 -g -D_DEBUG
+CXXFLAGS_DEBUG := -D_DEBUG -DRETAIL
+CXXFLAGS_RELEASE := -DNDEBUG -DRETAIL
+CXXFLAGS_TEST := -D_DEBUG
 LIBS += `pkg-config libxml-2.0 --libs`
 INCLUDES += -IFCollada `pkg-config libxml-2.0 --cflags`
 INCLUDES_TEST := -IFCollada/FColladaTest $(INCLUDES)
--- 0ad-0.0.21-alpha/libraries/source/spidermonkey/build.sh
+++ 0ad-0.0.21-alpha/libraries/source/spidermonkey/build.sh
@@ -93,20 +93,8 @@
 cd js/src
 
 # Clean up data generated by previous builds that could cause problems
-rm -rf build-debug
 rm -rf build-release
 
-# We want separate debug/release versions of the library, so we have to change
-# the LIBRARY_NAME for each build.
-# (We use perl instead of sed so that it works with MozillaBuild on Windows,
-# which has an ancient sed.)
-perl -i.bak -pe 's/(SHARED_LIBRARY_NAME\s+=).*/$1 '\''mozjs38-ps-debug'\''/' moz.build
-mkdir -p build-debug
-cd build-debug
-CXXFLAGS="${CXXFLAGS} ${TLCXXFLAGS}" ../configure ${CONF_OPTS} --with-nspr-libs="$NSPR_LIBS" --with-nspr-cflags="$NSPR_INCLUDES" --enable-debug --disable-optimize --enable-js-diagnostics --enable-gczeal
-${MAKE} ${MAKE_OPTS}
-cd ..
-
 perl -i.bak -pe 's/(SHARED_LIBRARY_NAME\s+=).*/$1 '\''mozjs38-ps-release'\''/' moz.build
 mkdir -p build-release
 cd build-release
@@ -161,12 +149,9 @@
 mkdir -p ${INCLUDE_DIR_DEBUG}
 mkdir -p ${INCLUDE_DIR_RELEASE}
 cp -R -L ${FOLDER}/js/src/build-release/dist/include/* ${INCLUDE_DIR_RELEASE}/
-cp -R -L ${FOLDER}/js/src/build-debug/dist/include/* ${INCLUDE_DIR_DEBUG}/
 
 mkdir -p lib/
-cp -L ${FOLDER}/js/src/build-debug/dist/lib/${LIB_PREFIX}mozjs38-ps-debug${LIB_SRC_SUFFIX} lib/${LIB_PREFIX}mozjs38-ps-debug${LIB_DST_SUFFIX}
 cp -L ${FOLDER}/js/src/build-release/dist/lib/${LIB_PREFIX}mozjs38-ps-release${LIB_SRC_SUFFIX} lib/${LIB_PREFIX}mozjs38-ps-release${LIB_DST_SUFFIX}
-cp -L ${FOLDER}/js/src/build-debug/dist/bin/${LIB_PREFIX}mozjs38-ps-debug${DLL_SRC_SUFFIX} ../../../binaries/system/${LIB_PREFIX}mozjs38-ps-debug${DLL_DST_SUFFIX}
 cp -L ${FOLDER}/js/src/build-release/dist/bin/${LIB_PREFIX}mozjs38-ps-release${DLL_SRC_SUFFIX} ../../../binaries/system/${LIB_PREFIX}mozjs38-ps-release${DLL_DST_SUFFIX}
 
 # On Windows, also copy debugging symbols files
