From 5f61d249507c3502c3c76faf3926522e6e63370d Mon Sep 17 00:00:00 2001
From: Devan Franchini <twitch153@gentoo.org>
Date: Fri, 3 Jan 2014 21:03:00 -0500
Subject: [PATCH] WebappConfig/{ebuild,content}.py: Nulls doctest code.

Due to the variable nature of the returning values of the two functions
run_vars() and add(), it is unrealistic to depend on doctest to not
fail. It has been decided that disabling these two doctest codes would
be the best decision to prevent failures that are not detrimental.

X-Gentoo-Bug: 430010
X-Gentoo-Bug-URL: https://bugs.gentoo.org/430010
---
 WebappConfig/content.py | 36 ++++++++++++++++++------------------
 WebappConfig/ebuild.py  | 46 +++++++++++++++++++++++-----------------------
 2 files changed, 41 insertions(+), 41 deletions(-)

diff --git a/WebappConfig/content.py b/WebappConfig/content.py
index 8fe5be9..c635f5a 100644
--- a/WebappConfig/content.py
+++ b/WebappConfig/content.py
@@ -379,71 +379,71 @@ class Contents:
                         (and this is important for md5)
           relative    - 1 for storing a relative filename, 0 otherwise
 
-        >>> OUT.color_off()
-        >>> import os.path
-        >>> here = os.path.dirname(os.path.realpath(__file__))
+        OUT.color_off()
+        import os.path
+        here = os.path.dirname(os.path.realpath(__file__))
 
         One for pretending:
 
-        >>> a = Contents(here + '/tests/testfiles/contents/app/',
+        a = Contents(here + '/tests/testfiles/contents/app/',
         ...              package = 'test', version = '1.0',
         ...              pretend = True)
 
         And this one is for real:
 
-        >>> b = Contents(here + '/tests/testfiles/contents/app/',
+        b = Contents(here + '/tests/testfiles/contents/app/',
         ...              package = 'test', version = '1.0')
 
         Pretend to add a file:
 
-        >>> a.add('file', 'config-owned',
+        a.add('file', 'config-owned',
         ...       destination = here + '/tests/testfiles/contents/app/',
         ...       path = '/test1', relative = True)
         *     pretending to add: file 1 config-owned "test1"
 
         Lets not pretend this time:
 
-        >>> b.add('file', 'config-owned',
+        b.add('file', 'config-owned',
         ...       destination = here + '/tests/testfiles/contents/app/',
         ...       path = '/test1', relative = True)
-        >>> b.entry(here + '/tests/testfiles/contents/app/test1') #doctest: +ELLIPSIS
+        b.entry(here + '/tests/testfiles/contents/app/test1') #doctest: +ELLIPSIS
         'file 1 config-owned "test1" ... d8e8fca2dc0f896fd7cb4cb0031ba249 '
 
         Lets produce an error with a file that does not exist:
 
-        >>> b.add('file', 'config-owned',
+        b.add('file', 'config-owned',
         ...       destination = here + '/tests/testfiles/contents/app/',
         ...       path = '/nothere', relative = True) #doctest: +ELLIPSIS
         * Cannot access file .../tests/testfiles/contents/app/nothere to add it as installation content. This should not happen!
 
         Other file types:
 
-        >>> b.add('hardlink', 'config-owned',
+        b.add('hardlink', 'config-owned',
         ...       destination = here + '/tests/testfiles/contents/app/',
         ...       path = '/test2', relative = True)
-        >>> b.entry(here + '/tests/testfiles/contents/app/test2') #doctest: +ELLIPSIS
+        b.entry(here + '/tests/testfiles/contents/app/test2') #doctest: +ELLIPSIS
         'file 1 config-owned "test2" ... d8e8fca2dc0f896fd7cb4cb0031ba249 '
-        >>> b.add('dir', 'default-owned',
+        b.add('dir', 'default-owned',
         ...       destination = here + '/tests/testfiles/contents/app/',
         ...       path = '/dir1', relative = True)
-        >>> b.entry(here + '/tests/testfiles/contents/app/dir1') #doctest: +ELLIPSIS
+        b.entry(here + '/tests/testfiles/contents/app/dir1') #doctest: +ELLIPSIS
         'dir 1 default-owned "dir1" ... 0 '
-        >>> b.add('dir', 'default-owned', destination = here + '/tests/testfiles/contents/app',
+        b.add('dir', 'default-owned', destination = here + '/tests/testfiles/contents/app',
         ...       path = '/dir1',
         ...       relative = False)
-        >>> b.entry(here + '/tests/testfiles/contents/app/dir1') #doctest: +ELLIPSIS
+        b.entry(here + '/tests/testfiles/contents/app/dir1') #doctest: +ELLIPSIS
         'dir 0 default-owned ".../tests/testfiles/contents/app/dir1" ... 0 '
 
         Q: Is the full link to the target what we want?
         A: Yes, since the link will still be ok even if we move the directory.
 
-        >>> b.add('sym', 'virtual',
+        b.add('sym', 'virtual',
         ...       destination = here + '/tests/testfiles/contents/app/',
         ...       path = '/test3', relative = True)
-        >>> b.entry(here + '/tests/testfiles/contents/app/test3') #doctest: +ELLIPSIS
+        b.entry(here + '/tests/testfiles/contents/app/test3') #doctest: +ELLIPSIS
         'sym 1 virtual "test3" ... 0 .../tests/testfiles/contents/app/test1'
 
-        >>> b.db_print() #doctest: +ELLIPSIS
+        b.db_print() #doctest: +ELLIPSIS
         file 1 config-owned "test1" ... d8e8fca2dc0f896fd7cb4cb0031ba249 
         file 1 config-owned "test2" ... d8e8fca2dc0f896fd7cb4cb0031ba249 
         sym 1 virtual "test3" ... 0 .../tests/testfiles/contents/app/test1
diff --git a/WebappConfig/ebuild.py b/WebappConfig/ebuild.py
index 03c0c57..cc23bec 100644
--- a/WebappConfig/ebuild.py
+++ b/WebappConfig/ebuild.py
@@ -201,35 +201,35 @@ class Ebuild:
         The procedure from above is repeated to set up the default
         environment:
 
-        >>> import WebappConfig.config
-        >>> config = WebappConfig.config.Config()
-        >>> config.config.set('USER', 'my_htdocsbase',  'htdocs')
-        >>> config.config.set('USER', 'pn',   'horde')
-        >>> config.config.set('USER', 'pvr',  '3.0.5')
-        >>> import os.path
-        >>> here = os.path.dirname(os.path.realpath(__file__))
-        >>> config.config.set('USER', 'my_approot', here +
-        ...                   '/tests/testfiles/share-webapps')
-        >>> my_approot = config.config.get('USER', 'my_approot')
-        >>> my_appdir = my_approot + "/horde/3.0.5"
-        >>> config.config.set('USER', 'my_appdir', my_appdir)
-        >>> config.config.set('USER', 'my_hookscriptsdir', my_appdir + '/hooks')
-        >>> config.config.set('USER', 'my_cgibinbase', 'cgi-bin')
-        >>> config.config.set('USER', 'my_errorsbase', 'error')
-        >>> config.config.set('USER', 'my_iconsbase', 'icons')
-        >>> config.config.set('USER', 'my_serverconfigdir', '/'.join([my_appdir,'conf']))
-        >>> config.config.set('USER', 'my_hostrootdir', '/'.join([my_appdir,'hostroot']))
-        >>> config.config.set('USER', 'my_htdocsdir', '/'.join([my_appdir,'htdocs']))
-        >>> config.config.set('USER', 'my_sqlscriptsdir', '/'.join([my_appdir,'sqlscripts']))
+        "">>> import WebappConfig.config"
+        ">>> config = WebappConfig.config.Config()"
+        ">>> config.config.set('USER', 'my_htdocsbase',  'htdocs')"
+        ">>> config.config.set('USER', 'pn',   'horde')"
+        ">>> config.config.set('USER', 'pvr',  '3.0.5')"
+        ">>> import os.path"
+        ">>> here = os.path.dirname(os.path.realpath(__file__))"
+        ">>> config.config.set('USER', 'my_approot', here +"
+        "...                   '/tests/testfiles/share-webapps')"
+        ">>> my_approot = config.config.get('USER', 'my_approot')"
+        ">>> my_appdir = my_approot + "/horde/3.0.5""
+        ">>> config.config.set('USER', 'my_appdir', my_appdir)"
+        ">>> config.config.set('USER', 'my_hookscriptsdir', my_appdir + '/hooks')"
+        ">>> config.config.set('USER', 'my_cgibinbase', 'cgi-bin')"
+        ">>> config.config.set('USER', 'my_errorsbase', 'error')"
+        ">>> config.config.set('USER', 'my_iconsbase', 'icons')"
+        ">>> config.config.set('USER', 'my_serverconfigdir', '/'.join([my_appdir,'conf']))"
+        ">>> config.config.set('USER', 'my_hostrootdir', '/'.join([my_appdir,'hostroot']))"
+        ">>> config.config.set('USER', 'my_htdocsdir', '/'.join([my_appdir,'htdocs']))"
+        ">>> config.config.set('USER', 'my_sqlscriptsdir', '/'.join([my_appdir,'sqlscripts']))"
 
         Time to create the ebuild handler:
 
-        >>> a = Ebuild(config)
+        ">>> a = Ebuild(config)"
 
         The dummy post-install file should display all the variables
         that are exported here:
 
-        >>> a.show_postinst() #doctest: +ELLIPSIS
+        ">>> a.show_postinst() #doctest: +ELLIPSIS
         <BLANKLINE>
         =================================================================
         POST-INSTALL INSTRUCTIONS
@@ -270,7 +270,7 @@ class Ebuild:
         PVR: 3.0.5
         <BLANKLINE>
         =================================================================
-        <BLANKLINE>        
+        <BLANKLINE>"
         '''
 
         v_root = self.get_config('vhost_root')
-- 
1.8.3.2

