From ab72d64818a5d88ceb4ab94f1eaae04268519e73 Mon Sep 17 00:00:00 2001
From: Rafal Luzynski <digitalfreak@lingonborough.com>
Date: Mon, 21 Aug 2017 11:55:41 +0200
Subject: [PATCH] Remove Expert mode and the remaining Analyze code

The Expert mode was originally introduced together with the Analyze
feature by the commit 532cbd4. The Expert mode was intended to hide
the Analyze feature by default and show in only when the Expert mode
is on. Later the commit f5eb93f removed most of the Analyze feature
although some of its code still remained and was unused. At the same
time, probably by mistake, the Expert mode was switched to control
the visibility of the Details context menu item.

This commit removes the Expert mode which is unused and implemented
incorrectly and any remains of the Analyze feature. Closes #182.
---
 src/gnome-abrt                  | 3 ---
 src/gnome_abrt/controller.py.in | 7 -------
 src/gnome_abrt/oops.glade       | 8 --------
 src/gnome_abrt/views.py         | 7 -------
 4 files changed, 25 deletions(-)

diff --git a/src/gnome-abrt b/src/gnome-abrt
index f8e96e8..b1044d3 100755
--- a/src/gnome-abrt
+++ b/src/gnome-abrt
@@ -401,8 +401,6 @@ if __name__ == "__main__":
             help=_('Be verbose'))
     CMDARGS.add_argument('-p', '--problem',
             help=_('Selected problem ID'))
-    CMDARGS.add_argument('-x', '--expert', action='store_true',
-            help=_('Expert mode'))
 
     OPTIONS = CMDARGS.parse_args()
 
@@ -414,7 +412,6 @@ if __name__ == "__main__":
     CONF = get_configuration()
     # TODO : mark this option as hidden or something like that
     CONF.add_option('problemid', default_value=None)
-    CONF.add_option('expert', default_value=(OPTIONS.expert))
 
     APP_CMDLINE = []
     if 'problem' in VARS:
diff --git a/src/gnome_abrt/controller.py.in b/src/gnome_abrt/controller.py.in
index fc16dc2..86db419 100644
--- a/src/gnome_abrt/controller.py.in
+++ b/src/gnome_abrt/controller.py.in
@@ -45,13 +45,6 @@ class Controller(object):
 
         problem.delete()
 
-    def analyze(self, problem):
-        if not problem:
-            logging.error("BUG: Controller: Can't open detail of None problem")
-            return
-
-        self.run_event_fn("open-gui", problem)
-
     def _refresh_sources(self):
         for name, src in self.sources:
             try:
diff --git a/src/gnome_abrt/oops.glade b/src/gnome_abrt/oops.glade
index bbb732b..b8ddb42 100644
--- a/src/gnome_abrt/oops.glade
+++ b/src/gnome_abrt/oops.glade
@@ -23,14 +23,6 @@
       <accelerator key="Return"/>
     </child>
     <child>
-      <object class="GtkAction" id="gac_analyze">
-        <property name="label" translatable="yes">Analy_ze</property>
-        <property name="tooltip" translatable="yes">Open selected problem for analysis</property>
-        <signal name="activate" handler="on_gac_analyze_activate" swapped="no"/>
-      </object>
-      <accelerator key="Return" modifiers="GDK_CONTROL_MASK | GDK_MOD1_MASK"/>
-    </child>
-    <child>
       <object class="GtkAction" id="gac_detail">
         <property name="label" translatable="yes">D_etails</property>
         <property name="tooltip" translatable="yes">Show technical details</property>
diff --git a/src/gnome_abrt/views.py b/src/gnome_abrt/views.py
index 82b606f..ec7b211 100644
--- a/src/gnome_abrt/views.py
+++ b/src/gnome_abrt/views.py
@@ -527,7 +527,6 @@ class OopsWindow(Gtk.ApplicationWindow):
         conf.set_watch('T_FMT', self._options_observer)
         conf.set_watch('D_T_FMT', self._options_observer)
         self._options_observer.option_updated(conf, 'problemid')
-        self._builder.mi_detail.set_visible(conf['expert'])
 
         # enable observer
         self._source_observer.enable()
@@ -1002,12 +1001,6 @@ _("This problem has been reported, but a <i>Bugzilla</i> ticket has not"
                     selected[0].problem_id, self)
 
     @handle_problem_and_source_errors
-    def on_gac_analyze_activate(self, action):
-        selected = self._get_selected(self.lss_problems)
-        if selected:
-            self._controller.analyze(selected[0])
-
-    @handle_problem_and_source_errors
     def on_gac_report_activate(self, action):
         selected = self._get_selected(self.lss_problems)
         if selected and not selected[0]['not-reportable']:
-- 
2.13.6

