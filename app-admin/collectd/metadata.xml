<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>bugs@bergstroem.nu</email>
		<name>Johan Bergstr√∂m</name>
		<description>Proxied Maintainer</description>
	</maintainer>
	<maintainer type="person">
		<email>whissi@whissi.de</email>
		<name>Thomas D.</name>
		<description>Proxied Maintainer</description>
	</maintainer>
	<maintainer type="project">
		<email>proxy-maint@gentoo.org</email>
		<name>Proxy Maintainers</name>
	</maintainer>
	<longdescription lang="en">
		Collectd gathers statistics about the system it is running on and stores this
		information. Those statistics can then be used to find current performance
		bottlenecks (i.e. performance analysis) and predict future system load (i.e.
		capacity planning). Or if you just want pretty graphs of your private server
		and are fed up with some homegrown solution you're at the right place.
	</longdescription>
	<upstream>
		<bugs-to>https://github.com/collectd/collectd/issues</bugs-to>
		<doc lang="en">https://collectd.org/documentation.shtml</doc>
		<remote-id type="github">collectd/collectd</remote-id>
	</upstream>
	<use>
		<flag name="collectd_plugins_aggregation">Build the aggregation plugin (aggregates multiplte values into a single value)</flag>
		<flag name="collectd_plugins_amqp">Build the AMQP output plugin (transmits or receives values collected by collectd via the Advanced Message Queuing Protocol (AMQP))</flag>
		<flag name="collectd_plugins_apache">Build the apache input plugin (collects statistics from Apache's mod_status module)</flag>
		<flag name="collectd_plugins_apcups">Build the apcups input plugin (reads various statistics about a connected uninterruptible power supply (UPS))</flag>
		<flag name="collectd_plugins_ascent">Build the ascent input plugin (reads and parses the statistics page of Ascent)</flag>
		<flag name="collectd_plugins_battery">Build the battery input plugin (collects the battery's charge, the drawn current and the battery's voltage)</flag>
		<flag name="collectd_plugins_bind">Build the bind input plugin (collects statistics from bind instances)</flag>
		<flag name="collectd_plugins_ceph">Build the Ceph input plugin (collects statistics from the Ceph distributed storage system)</flag>
		<flag name="collectd_plugins_cgroups">Build the cgroups input plugin (collects CPU accounting information for processes in a cgroup)</flag>
		<flag name="collectd_plugins_conntrack">Build the conntrack input plugin (tracks the number of entries in Linux's connection tracking table)</flag>
		<flag name="collectd_plugins_contextswitch">Build the contextswitch input plugin (collects the number of context switches done by the operating system)</flag>
		<flag name="collectd_plugins_cpu">Build the cpu input plugin (collects the amount of time spent by the CPU in various states)</flag>
		<flag name="collectd_plugins_cpufreq">Build the cpufreq input plugin (collects the current CPU's frequency)</flag>
		<flag name="collectd_plugins_csv">Build the csv output plugin (writes to comma separated values (CSV) files)</flag>
		<flag name="collectd_plugins_curl">Build the curl input plugin (reads streams using <pkg>net-misc/curl</pkg> and then parses them according to the configuration)</flag>
		<flag name="collectd_plugins_curl_json">Build the curl_json input plugin (queries JavaScript Object Notation (JSON) data using <pkg>net-misc/curl</pkg> and parses it according to the user's configuration using <pkg>dev-libs/yajl</pkg>)</flag>
		<flag name="collectd_plugins_curl_xml">Build the curl_xml input plugin (reads files using <pkg>net-misc/curl</pkg> and parses it as Extensible Markup Language (XML))</flag>
		<flag name="collectd_plugins_dbi">Build the dbi input plugin (executes SQL statements on databases and reads back the result)</flag>
		<flag name="collectd_plugins_df">Build the df input plugin (collects file system usage information, i. e. basically how much space on a mounted partition is used and how much is available)</flag>
		<flag name="collectd_plugins_disk">Build the disk input plugin (collects performance statistics of disks and, where supported, partitions)</flag>
		<flag name="collectd_plugins_dns">Build the dns input plugin (collects statistics of your DNS traffic on port udp/53 using <pkg>net-libs/libpcap</pkg>)</flag>
		<flag name="collectd_plugins_drbd">Build the Linux's Distributed Replicated Block Device (DRBD) input plugin (reads Linux's DRBD statistics)</flag>
		<flag name="collectd_plugins_email">Build the email input plugin (opens a UNIX domain socket and starts accepting connections on that socket)</flag>
		<flag name="collectd_plugins_entropy">Build the entropy input plugin (collects the available entropy on a system)</flag>
		<flag name="collectd_plugins_ethstat">Build the ethstat input plugin (reads performance statistics directly from ethernet cards)</flag>
		<flag name="collectd_plugins_exec">Build the exec input/output plugin (executes scripts / applications and reads values back)</flag>
		<flag name="collectd_plugins_fhcount">Build the file handles input plugin (reports the number of used file handles)</flag>
		<flag name="collectd_plugins_filecount">Build the filecount input plugin (counts the number of files in a directory and all its subdirectories)</flag>
		<flag name="collectd_plugins_fscache">Build the fscache input plugin (collects information about the file-system based caching infrastructure for network file-systems and other slow media)</flag>
		<flag name="collectd_plugins_genericjmx">Build the GenericJMX input plugin (reads Managed Beans (MBeans) from an MBeanServer using JMX input plugin; Requires JAVA)</flag>
		<flag name="collectd_plugins_gmond">Build the gmond input plugin (receives data from gmond, the client daemon of the Ganglia project)</flag>
		<flag name="collectd_plugins_hddtemp">Build the hddtemp input plugin (collects the temperature of disks from hddtemp daemon)</flag>
		<flag name="collectd_plugins_interface">Build the interface input plugin (collects information about the traffic, packets per second and errors of interfaces)</flag>
		<flag name="collectd_plugins_ipc">Build the IPC input plugin (collects information related to shared memory)</flag>
		<flag name="collectd_plugins_ipmi">Build the ipmi input plugin (reads hardware sensors from servers using the Intelligent Platform Management Interface (IPMI))</flag>
		<flag name="collectd_plugins_iptables">Build the iptables input plugin (collects statistics from a ip_tables based packet filter)</flag>
		<flag name="collectd_plugins_ipvs">Build the IPVS input plugin (collects statistics from Linux IP Virtual Server)</flag>
		<flag name="collectd_plugins_irq">Build the irq input plugin (collects the number of times each interrupt has been handled by the operating system)</flag>
		<flag name="collectd_plugins_java">Build the java input plugin (embeds a JVM into collectd for writing plugins)</flag>
		<flag name="collectd_plugins_libvirt">Build the (lib)virt input plugin (collects statistics about virtualized guests on a system)</flag>
		<flag name="collectd_plugins_load">Build the load input plugin (collects the system load)</flag>
		<flag name="collectd_plugins_logfile">Build the logfile output plugin (receives log messages from collectd and writes them to a text file)</flag>
		<flag name="collectd_plugins_log_logstash">Build the Logstash output plugin (writes collectd logs and events as Logstash JSON formatted events)</flag>
		<flag name="collectd_plugins_lvm">Build the LVM input plugin (collects the size of logical volumes (LV) and free space inside a volume group (VG) from Linux' Logical Volume Manager (LVM))</flag>
		<flag name="collectd_plugins_madwifi">Build the madwifi input plugin (collects information about Atheros wireless LAN chipsets from the MadWifi driver)</flag>
		<flag name="collectd_plugins_match_empty_counter">Build the match_empty_counter filter plugin</flag>
		<flag name="collectd_plugins_match_hashed">Build the match_hashed filter plugin</flag>
		<flag name="collectd_plugins_match_regex">Build the match_regex filter plugin</flag>
		<flag name="collectd_plugins_match_timediff">Build the match_timediff filter plugin</flag>
		<flag name="collectd_plugins_match_value">Build the match_value filter plugin</flag>
		<flag name="collectd_plugins_mbmon">Build the mbmon input plugin (collects information from mainboard sensors)</flag>
		<flag name="collectd_plugins_md">Build the md input plugin (reports the number of disks in various states in Linux software RAID devices)</flag>
		<flag name="collectd_plugins_memcachec">Build the memcachec input plugin (queries one or more given pages from a memcached instance and parses the returned data according to user specification)</flag>
		<flag name="collectd_plugins_memcached">Build the memcached input plugin (collects statistics from memcached daemon)</flag>
		<flag name="collectd_plugins_memory">Build the memory input plugin (collects physical memory utilization)</flag>
		<flag name="collectd_plugins_modbus">Build the Modbus input plugin (reads register values from a Modbus "slave" via Modbus/TCP)</flag>
		<flag name="collectd_plugins_multimeter">Build the multimeter input plugin (reads a voltage or current from a multimeter connected to a serial bus)</flag>
		<flag name="collectd_plugins_mysql">Build the mysql input plugin (collects values from 'SHOW STATUS' command of a MySQL server)</flag>
		<flag name="collectd_plugins_netlink">Build the netlink input plugin (collects statistics for interfaces, qdiscs, classes and filters using netlink socket)</flag>
		<flag name="collectd_plugins_network">Build the network input/output plugin (send values to other and/or receive values from from other collectd instances)</flag>
		<flag name="collectd_plugins_nfs">Build the nfs input plugin (collects information about the usage of the Network File System (NFS))</flag>
		<flag name="collectd_plugins_nginx">Build the nginx input plugin (collects number of requests handled and the number of current connections by connection state by the nginx daemon)</flag>
		<flag name="collectd_plugins_notify_desktop">Build the notify_desktop output plugin (uses <pkg>x11-libs/libnotify</pkg> to display notifications to the user)</flag>
		<flag name="collectd_plugins_notify_email">Build the notify_email output plugin (uses <pkg>net-libs/libesmtp</pkg> to send notifications to a configured email address)</flag>
		<flag name="collectd_plugins_ntpd">Build the ntpd input plugin (collects statistics from a NTP server)</flag>
		<flag name="collectd_plugins_numa">Build the numa input plugin (collects statistics of the Linux Non-Uniform Memory Access (NUMA) subsystem)</flag>
		<flag name="collectd_plugins_nut">Build the nut input plugin (collects UPS statistics using the Network UPS Tools)</flag>
		<flag name="collectd_plugins_olsrd">Build the olsrd input plugin (reads information about the Optimized Link State Routing daemon)</flag>
		<flag name="collectd_plugins_onewire">Build the onewire (1-Wire) input plugin (collects temperature information from sensors)</flag>
		<flag name="collectd_plugins_openldap">Build the OpenLDAP input plugin (reads monitoring information from OpenLDAP's cn=Monitor subtree)</flag>
		<flag name="collectd_plugins_openvpn">Build the openvpn input plugin (reads the status file printed by OpenVPN)</flag>
		<flag name="collectd_plugins_oracle">Build the oracle input plugin (executes SQL statements against Oracle database systems)</flag>
		<flag name="collectd_plugins_perl">Build the perl language binding plugin (embeds a Perl interpreter into collectd for writing plugins)</flag>
		<flag name="collectd_plugins_ping">Build the ping input plugin (measures network latency)</flag>
		<flag name="collectd_plugins_postgresql">Build the postgresql input plugin (executes SQL statements against a PostgreSQL database)</flag>
		<flag name="collectd_plugins_powerdns">Build the powerdns input plugin (collects statistics from the PowerDNS name server or recursor via control socket)</flag>
		<flag name="collectd_plugins_processes">Build the processes input plugin (collects the number of processes, grouped by their state or detailed statistics about selected processes)</flag>
		<flag name="collectd_plugins_protocols">Build the protocols input plugin (collects information about the network protocols supported by the system)</flag>
		<flag name="collectd_plugins_python">Build the python language binding plugin (embeds a Python interpreter into collectd for writing plugins)</flag>
		<flag name="collectd_plugins_redis">Build the Redis input plugin (collects usage information from Redis instances)</flag>
		<flag name="collectd_plugins_routeros">Build the routeros input plugin (collects information from devices running RouterOS)</flag>
		<flag name="collectd_plugins_rrdcached">Build the rrdcached input/output plugin (connects to rrdcached and submits updates for RRD files)</flag>
		<flag name="collectd_plugins_rrdtool">Build the rrdtool output plugin (writes values to RRD-files)</flag>
		<flag name="collectd_plugins_sensors">Build the sensors input plugin (reads hardware sensors from lm-sensors)</flag>
		<flag name="collectd_plugins_serial">Build the serial input plugin (collects the traffic on serial interfaces)</flag>
		<flag name="collectd_plugins_sigrok">Build the sigrok input plugin (reads measurements from any supported hardware from sigrok project)</flag>
		<flag name="collectd_plugins_smart">Build the S.M.A.R.T input plugin (collects S.M.A.R.T statistics from disk drives)</flag>
		<flag name="collectd_plugins_snmp">Build the snmp input plugin (reads values from network devices using SNMP)</flag>
		<flag name="collectd_plugins_statsd">Build the statsd input plugin (accepts statsd-type metrics from a UDP socket)</flag>
		<flag name="collectd_plugins_swap">Build the swap input plugin (collects amount of memory currently written to swap)</flag>
		<flag name="collectd_plugins_syslog">Build the syslog output plugin (receives messages from collectd and dispatches them to syslog)</flag>
		<flag name="collectd_plugins_table">Build the table input plugin (parses table-like structured plain text)</flag>
		<flag name="collectd_plugins_tail">Build the tail input plugin (follows logfiles, e.g. tail -f)</flag>
		<flag name="collectd_plugins_tail_csv">Build the tail_csv input plugin (follows and parses CSV files, e.g. tail -f *.csv)</flag>
		<flag name="collectd_plugins_target_notification">Build the target_notification filter plugin</flag>
		<flag name="collectd_plugins_target_replace">Build the target_replace filter plugin</flag>
		<flag name="collectd_plugins_target_scale">Build the target_scale filter plugin</flag>
		<flag name="collectd_plugins_target_set">Build the target_set filter plugin</flag>
		<flag name="collectd_plugins_tcpconns">Build the tcpconns input plugin (collects numbers of TCP connections to or from a specified port)</flag>
		<flag name="collectd_plugins_teamspeak2">Build the teamspeak2 input plugin (collects traffic statistics from a teamspeak2 instance)</flag>
		<flag name="collectd_plugins_ted">Build the ted input plugin (connects to The Energy Detective and reads the current power over connected power lines)</flag>
		<flag name="collectd_plugins_thermal">Build the thermal input plugin (reads ACPI thermal zone information)</flag>
		<flag name="collectd_plugins_threshold">Build the threshold plugin (checks values against configured thresholds and creates notifications if values are out of bounds)</flag>
		<flag name="collectd_plugins_tokyotyrant">Build the tokyotyrant input plugin (collects number of records and file size from a running Tokyo Tyrant server)</flag>
		<flag name="collectd_plugins_turbostat">Build the turbostat input plugin (reads CPU frequency and C-state residency on modern Intel turbo-capable processors)</flag>
		<flag name="collectd_plugins_unixsock">Build the unixsock input/output plugin (opens a UNIX domain socket and accepts connections)</flag>
		<flag name="collectd_plugins_uptime">Build the uptime input plugin (keeps track of the system uptime)</flag>
		<flag name="collectd_plugins_users">Build the users input plugin (counts the number of users currently logged into the system)</flag>
		<flag name="collectd_plugins_uuid">Build the uuid plugin (tries hard to determine the UUID of the system it is running on)</flag>
		<flag name="collectd_plugins_varnish">Build the varnish input plugin (collects information about Varnish)</flag>
		<flag name="collectd_plugins_virt">Build the (lib)virt input plugin (collects statistics about virtualized guests on a system)</flag>
		<flag name="collectd_plugins_vmem">Build the vmem input plugin (collects information about the virtual memory subsystem of the kernel)</flag>
		<flag name="collectd_plugins_vserver">Build the vserver input plugin (collects information about the virtual servers running on a system, using Linux-Vserver)</flag>
		<flag name="collectd_plugins_wireless">Build the wireless input plugin (collects signal quality, signal power and signal-to-noise ratio for wireless LAN cards)</flag>
		<flag name="collectd_plugins_write_graphite">Build the write_graphite output plugin (stores values in Carbon, the storage layer of Graphite)</flag>
		<flag name="collectd_plugins_write_http">Build the write_http output plugin (sends metrics to a web-server using HTTP POST requests)</flag>
		<flag name="collectd_plugins_write_log">Build the write_log output plugin (writes metrics to a file)</flag>
		<flag name="collectd_plugins_write_mongodb">Build the MongoDB output plugin (writes metrics to a MongoDB)</flag>
		<flag name="collectd_plugins_write_redis">Build the Redis output plugin (stores values in Redis)</flag>
		<flag name="collectd_plugins_write_riemann">Build the Riemann output plugin (stores values in Riemann, a stream processing and monitoring system)</flag>
		<flag name="collectd_plugins_write_sensu">Build the Sensu output plugin (sends metrics to Sensu Core, an open-source monitoring project)</flag>
		<flag name="collectd_plugins_write_tsdb">Build the TSDB output plugin (writes metrics to OpenTSDB, an open-source distributed time-series database based on Apache HBase)</flag>
		<flag name="collectd_plugins_zfs_arc">Build the ZFS ARC input plugin (reports information such as the cache size, the various hits and misses (also as a ratio) and the transferred data)</flag>
		<flag name="collectd_plugins_zookeeper">Build the zookeeper input plugin (reads data from Apache Zookeeper MNTR command)</flag>
		<flag name="contrib">Install user-contributed files in the doc directory</flag>
		<flag name="filecaps">When set collectd daemon will have set required capabilities to run most plugins even if run as unprivileged user</flag>
		<flag name="java">Must be set (workaround for java-pkg-opt-2 eclass limitation) when you want java or genericjmx plugin</flag>
	</use>
</pkgmetadata>
