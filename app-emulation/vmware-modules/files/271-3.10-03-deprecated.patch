undefines DEPRECATED which is unfortunately also defined (as a string)
in <linux/printk.h>. Realistically, this macro isn't even used, so this
doesn't matter much. But it hushes some very loud warnings.

diff -rupN vmblock-only/shared/vm_assert.h vmblock-only.new/shared/vm_assert.h
--- vmblock-only/shared/vm_assert.h	2014-10-09 21:50:54.221159088 -0400
+++ vmblock-only.new/shared/vm_assert.h	2014-10-09 21:53:04.612166156 -0400
@@ -237,11 +237,13 @@ EXTERN void WarningThrottled(uint32 *cou
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                        \
                                Warning("%s:%d: %s is DEPRECATED; %s\n",     \
                                           __FILE__, __LINE__, __FUNCTION__, \
                                           _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vmci-only/shared/vm_assert.h vmci-only.new/shared/vm_assert.h
--- vmci-only/shared/vm_assert.h	2014-10-09 21:50:54.222159088 -0400
+++ vmci-only.new/shared/vm_assert.h	2014-10-09 21:52:52.348165492 -0400
@@ -237,11 +237,13 @@ EXTERN void WarningThrottled(uint32 *cou
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                        \
                                Warning("%s:%d: %s is DEPRECATED; %s\n",     \
                                           __FILE__, __LINE__, __FUNCTION__, \
                                           _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vmmon-only/include/vm_assert.h vmmon-only.new/include/vm_assert.h
--- vmmon-only/include/vm_assert.h	2014-10-09 21:50:54.222159088 -0400
+++ vmmon-only.new/include/vm_assert.h	2014-10-09 21:52:36.877164653 -0400
@@ -237,11 +237,13 @@ EXTERN void WarningThrottled(uint32 *cou
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                        \
                                Warning("%s:%d: %s is DEPRECATED; %s\n",     \
                                           __FILE__, __LINE__, __FUNCTION__, \
                                           _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vmnet-only/vm_assert.h vmnet-only.new/vm_assert.h
--- vmnet-only/vm_assert.h	2014-10-09 21:50:54.222159088 -0400
+++ vmnet-only.new/vm_assert.h	2014-10-09 21:52:57.736165784 -0400
@@ -237,11 +237,13 @@ EXTERN void WarningThrottled(uint32 *cou
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                        \
                                Warning("%s:%d: %s is DEPRECATED; %s\n",     \
                                           __FILE__, __LINE__, __FUNCTION__, \
                                           _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vsock-only/shared/vm_assert.h vsock-only.new/shared/vm_assert.h
--- vsock-only/shared/vm_assert.h	2014-10-09 21:50:54.222159088 -0400
+++ vsock-only.new/shared/vm_assert.h	2014-10-09 21:52:45.352165112 -0400
@@ -237,11 +237,13 @@ EXTERN void WarningThrottled(uint32 *cou
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                        \
                                Warning("%s:%d: %s is DEPRECATED; %s\n",     \
                                           __FILE__, __LINE__, __FUNCTION__, \
                                           _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
