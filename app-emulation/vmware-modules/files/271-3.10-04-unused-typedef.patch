hushes warnings about unused typedefs which are part of the "static assert"
technique that the code uses. We simply add an "__attribute__((unused)) to each of them

--- vmblock-only/shared/vm_assert.h	2014-10-07 22:43:39.519402467 -0400
+++ vmblock-only/shared/vm_assert.h	2014-10-07 22:48:01.346409957 -0400
@@ -317,7 +317,7 @@ EXTERN void WarningThrottled(uint32 *cou
 #define ASSERT_ON_COMPILE(e) \
    do { \
       enum { AssertOnCompileMisused = ((e) ? 1 : -1) }; \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
    } while (0)
 
 
--- vmci-only/shared/vm_assert.h	2014-10-07 22:43:39.519402467 -0400
+++ vmci-only/shared/vm_assert.h	2014-10-07 22:47:51.829409685 -0400
@@ -317,7 +317,7 @@ EXTERN void WarningThrottled(uint32 *cou
 #define ASSERT_ON_COMPILE(e) \
    do { \
       enum { AssertOnCompileMisused = ((e) ? 1 : -1) }; \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
    } while (0)
 
 
--- vmmon-only/include/vm_assert.h	2014-10-07 22:43:39.520402467 -0400
+++ vmmon-only/include/vm_assert.h	2014-10-07 22:47:39.246409325 -0400
@@ -317,7 +317,7 @@ EXTERN void WarningThrottled(uint32 *cou
 #define ASSERT_ON_COMPILE(e) \
    do { \
       enum { AssertOnCompileMisused = ((e) ? 1 : -1) }; \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
    } while (0)
 
 
--- vmnet-only/vm_assert.h	2014-10-07 22:43:39.520402467 -0400
+++ vmnet-only/vm_assert.h	2014-10-07 22:47:55.804409799 -0400
@@ -317,7 +317,7 @@ EXTERN void WarningThrottled(uint32 *cou
 #define ASSERT_ON_COMPILE(e) \
    do { \
       enum { AssertOnCompileMisused = ((e) ? 1 : -1) }; \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
    } while (0)
 
 
--- vsock-only/shared/vm_assert.h	2014-10-07 22:47:11.595408534 -0400
+++ vsock-only/shared/vm_assert.h	2014-10-07 22:45:55.715406363 -0400
@@ -317,7 +317,7 @@ EXTERN void WarningThrottled(uint32 *cou
 #define ASSERT_ON_COMPILE(e) \
    do { \
       enum { AssertOnCompileMisused = ((e) ? 1 : -1) }; \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused]; \
    } while (0)
 
 
--- vsock-only/shared/vm_atomic.h	2013-11-05 23:33:27.000000000 -0500
+++ vsock-only/shared/vm_atomic.h	2014-10-07 22:53:06.024418673 -0400
@@ -2394,7 +2394,7 @@ Atomic_TestBit64(Atomic_uint64 *var, //
                                       && 8 * sizeof (out) == size             \
                                       && 8 * sizeof (cast) == size            \
                                          ? 1 : -1 };                          \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
    }                                                                          \
                                                                               \
                                                                               \
--- vmci-only/shared/vm_atomic.h	2013-11-05 23:33:27.000000000 -0500
+++ vmci-only/shared/vm_atomic.h	2014-10-07 22:53:24.873419213 -0400
@@ -2394,7 +2394,7 @@ Atomic_TestBit64(Atomic_uint64 *var, //
                                       && 8 * sizeof (out) == size             \
                                       && 8 * sizeof (cast) == size            \
                                          ? 1 : -1 };                          \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
    }                                                                          \
                                                                               \
                                                                               \

--- vmblock-only/shared/vm_atomic.h	2013-11-05 23:33:27.000000000 -0500
+++ vmblock-only/shared/vm_atomic.h	2014-10-07 22:53:31.073419390 -0400
@@ -2394,7 +2394,7 @@ Atomic_TestBit64(Atomic_uint64 *var, //
                                       && 8 * sizeof (out) == size             \
                                       && 8 * sizeof (cast) == size            \
                                          ? 1 : -1 };                          \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
    }                                                                          \
                                                                               \

--- vmnet-only/vm_atomic.h	2013-11-06 00:40:52.000000000 -0500
+++ vmnet-only/vm_atomic.h	2014-10-07 23:04:50.637438831 -0400
@@ -2394,7 +2394,7 @@ Atomic_TestBit64(Atomic_uint64 *var, //
                                       && 8 * sizeof (out) == size             \
                                       && 8 * sizeof (cast) == size            \
                                          ? 1 : -1 };                          \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
    }                                                                          \
                                                                               \
                                                                               \
																			   
--- vmmon-only/include/vm_atomic.h   2013-11-06 00:40:52.000000000 -0500
+++ vmmon-only/include/vm_atomic.h   2014-10-07 23:04:50.637438831 -0400
@@ -2394,7 +2394,7 @@ Atomic_TestBit64(Atomic_uint64 *var, //
                                       && 8 * sizeof (out) == size             \
                                       && 8 * sizeof (cast) == size            \
                                          ? 1 : -1 };                          \
-      typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
+      __attribute__((unused)) typedef char AssertOnCompileFailed[AssertOnCompileMisused];             \
    }                                                                          \
                                                                               \
                                                                               \
