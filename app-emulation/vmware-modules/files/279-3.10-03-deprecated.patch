undefines DEPRECATED which is unfortunately also defined (as a string)
in <linux/printk.h>. Realistically, this macro isn't even used, so this
doesn't matter much. But it hushes some very loud warnings.

diff -rupN vmblock-only/shared/vm_assert.h vmblock-only.new/shared/vm_assert.h
--- vmblock-only/shared/vm_assert.h	2014-04-14 17:41:41.000000000 -0400
+++ vmblock-only.new/shared/vm_assert.h	2014-10-11 17:37:23.010352172 -0400
@@ -251,11 +251,13 @@ void WarningThrottled(uint32 *count, con
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                     \
                                Warning("%s:%d: %s is DEPRECATED. %s\n",  \
                                        __FILE__, __LINE__, __FUNCTION__, \
                                        _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vmci-only/shared/vm_assert.h vmci-only.new/shared/vm_assert.h
--- vmci-only/shared/vm_assert.h	2014-04-14 17:41:41.000000000 -0400
+++ vmci-only.new/shared/vm_assert.h	2014-10-11 17:37:08.936352130 -0400
@@ -251,11 +251,13 @@ void WarningThrottled(uint32 *count, con
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                     \
                                Warning("%s:%d: %s is DEPRECATED. %s\n",  \
                                        __FILE__, __LINE__, __FUNCTION__, \
                                        _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vmmon-only/include/vm_assert.h vmmon-only.new/include/vm_assert.h
--- vmmon-only/include/vm_assert.h	2014-04-14 20:06:20.000000000 -0400
+++ vmmon-only.new/include/vm_assert.h	2014-10-11 17:36:45.289352058 -0400
@@ -251,11 +251,13 @@ void WarningThrottled(uint32 *count, con
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                     \
                                Warning("%s:%d: %s is DEPRECATED. %s\n",  \
                                        __FILE__, __LINE__, __FUNCTION__, \
                                        _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vmnet-only/vm_assert.h vmnet-only.new/vm_assert.h
--- vmnet-only/vm_assert.h	2014-04-14 20:06:21.000000000 -0400
+++ vmnet-only.new/vm_assert.h	2014-10-11 17:37:14.364352146 -0400
@@ -251,11 +251,13 @@ void WarningThrottled(uint32 *count, con
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                     \
                                Warning("%s:%d: %s is DEPRECATED. %s\n",  \
                                        __FILE__, __LINE__, __FUNCTION__, \
                                        _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
diff -rupN vsock-only/shared/vm_assert.h vsock-only.new/shared/vm_assert.h
--- vsock-only/shared/vm_assert.h	2014-04-14 17:41:41.000000000 -0400
+++ vsock-only.new/shared/vm_assert.h	2014-10-11 17:37:02.778352111 -0400
@@ -251,11 +251,13 @@ void WarningThrottled(uint32 *count, con
 #define LOG_ONCE(_s) DO_ONCE(Log _s)
 
 #ifdef VMX86_DEVEL
+   #undef DEPRECATED
    #define DEPRECATED(_fix) DO_ONCE(                                     \
                                Warning("%s:%d: %s is DEPRECATED. %s\n",  \
                                        __FILE__, __LINE__, __FUNCTION__, \
                                        _fix))
 #else
+   #undef DEPRECATED
    #define DEPRECATED(_fix) do {} while (0)
 #endif
 
