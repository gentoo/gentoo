https://gitlab.freedesktop.org/pipewire/pipewire/-/commit/651f0decea5f83730c271e9bed03cdd0048fcd49.patch
https://gitlab.freedesktop.org/pipewire/pipewire/-/commit/2cddd4a775c145570f4a8a30d28b57f551d43206.patch

From: Wim Taymans <wtaymans@redhat.com>
Date: Thu, 21 Oct 2021 11:09:48 +0200
Subject: [PATCH] cpu: fix compilation on some architectures

--- a/spa/plugins/support/cpu.c
+++ b/spa/plugins/support/cpu.c
@@ -270,7 +270,7 @@ impl_init(const struct spa_handle_factory *factory,
 		if ((str = spa_dict_lookup(info, SPA_KEY_CPU_VM_TYPE)) != NULL)
 			this->vm_type = atoi(str);
 		if ((str = spa_dict_lookup(info, SPA_KEY_CPU_ZERO_DENORMALS)) != NULL)
-			impl_cpu_zero_denormals(this, spa_atob(str));
+			spa_cpu_zero_denormals(&this->cpu, spa_atob(str));
 	}
 
 	spa_log_debug(this->log, "%p: count:%d align:%d flags:%08x",

From: Wim Taymans <wtaymans@redhat.com>
Date: Mon, 25 Oct 2021 16:32:16 +0200
Subject: [PATCH] cpu: disable VFP asm when not available

Fixes #1746
--- a/spa/plugins/support/cpu-arm.c
+++ b/spa/plugins/support/cpu-arm.c
@@ -143,7 +143,7 @@ static int arm_zero_denormals(void *object, bool enable)
 			"msr	fpcr, %0		\n"
 			"isb				\n"
 			: "=r"(cw)::"memory");
-#else
+#elif (defined(__VFP_FP__) && !defined(__SOFTFP__))
 	uint32_t cw;
 	if (enable)
 		__asm__ __volatile__(
