Backported from upstream to fix dev-cpp/libfmt-8 compatibility

remove changes of CHANGELOG.md from original git commit

From 2bbfb8976f6e4d667499c77e41a6433850063e88 Mon Sep 17 00:00:00 2001
From: Cory Bloor <Cordell.Bloor@amd.com>
Date: Tue, 8 Feb 2022 23:53:57 -0700
Subject: [PATCH] Fix compatibility with fmt v8.1 (#371)

* Make rocsolver_logvalue fmt specializations const

This allows for compile-time format string processing in fmt v8.0.

* Fix compatibility with fmt v7.1

* Update CHANGELOG.md
---
 CHANGELOG.md                               |  2 ++
 library/src/include/rocsolver_logvalue.hpp | 38 +++++++++++++---------
 2 files changed, 25 insertions(+), 15 deletions(-)

diff --git a/library/src/include/rocsolver_logvalue.hpp b/library/src/include/rocsolver_logvalue.hpp
index 199f8d57d..9b3791031 100644
--- a/library/src/include/rocsolver_logvalue.hpp
+++ b/library/src/include/rocsolver_logvalue.hpp
@@ -1,5 +1,5 @@
 /* ************************************************************************
- * Copyright (c) 2021 Advanced Micro Devices, Inc.
+ * Copyright (c) 2021-2022 Advanced Micro Devices, Inc.
  * ************************************************************************ */
 
 #pragma once
@@ -8,6 +8,14 @@
 
 #include "rocsolver_datatype2string.hpp"
 
+/* The format function for user-defined types cannot be const before fmt v8.0
+   but must be const in fmt v8.1 if the type is used in a tuple. */
+#if FMT_VERSION < 80000
+#define ROCSOLVER_FMT_CONST
+#else
+#define ROCSOLVER_FMT_CONST const
+#endif
+
 /***************************************************************************
  * Wrapper for types passed to logger, so we can more easily adjust the
  * default way of printing built-in types without doing it globally. (e.g.
@@ -37,7 +45,7 @@ template <typename T>
 struct formatter<rocsolver_logvalue<T>> : formatter<T>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<T> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<T> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<T>::format(wrapper.value, ctx);
     }
@@ -49,7 +57,7 @@ template <>
 struct formatter<rocsolver_logvalue<bool>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<bool> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<bool> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(wrapper.value ? '1' : '0', ctx);
     }
@@ -58,7 +66,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_operation>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_operation> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_operation> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_operation(wrapper.value), ctx);
     }
@@ -67,7 +75,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_fill>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_fill> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_fill> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_fill(wrapper.value), ctx);
     }
@@ -76,7 +84,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_diagonal>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_diagonal> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_diagonal> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_diagonal(wrapper.value), ctx);
     }
@@ -85,7 +93,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_side>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_side> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_side> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_side(wrapper.value), ctx);
     }
@@ -94,7 +102,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_direct>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_direct> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_direct> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_direct(wrapper.value), ctx);
     }
@@ -104,7 +112,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_storev>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_storev> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_storev> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_storev(wrapper.value), ctx);
     }
@@ -113,7 +121,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_workmode>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_workmode> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_workmode> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_workmode(wrapper.value), ctx);
     }
@@ -122,7 +130,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_svect>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_svect> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_svect> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_svect(wrapper.value), ctx);
     }
@@ -131,7 +139,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_evect>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_evect> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_evect> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_evect(wrapper.value), ctx);
     }
@@ -140,7 +148,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_eform>> : formatter<char>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_eform> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_eform> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<char>::format(rocblas2char_eform(wrapper.value), ctx);
     }
@@ -149,7 +157,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_datatype>> : formatter<string_view>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_datatype> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_datatype> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<string_view>::format(rocblas2string_datatype(wrapper.value), ctx);
     }
@@ -158,7 +166,7 @@ template <>
 struct formatter<rocsolver_logvalue<rocblas_initialization>> : formatter<string_view>
 {
     template <typename FormatCtx>
-    auto format(rocsolver_logvalue<rocblas_initialization> wrapper, FormatCtx& ctx)
+    auto format(rocsolver_logvalue<rocblas_initialization> wrapper, FormatCtx& ctx) ROCSOLVER_FMT_CONST
     {
         return formatter<string_view>::format(rocblas2string_initialization(wrapper.value), ctx);
     }
