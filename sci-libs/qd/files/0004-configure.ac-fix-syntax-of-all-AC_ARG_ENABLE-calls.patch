From 829c868c9655fa7dfd4a64a42476fe1eddadc792 Mon Sep 17 00:00:00 2001
From: Michael Orlitzky <michael@orlitzky.com>
Date: Wed, 4 Aug 2021 18:47:12 -0400
Subject: [PATCH 04/12] configure.ac: fix syntax of all AC_ARG_ENABLE calls.

Currently, we find AC_ARG_ENABLE being called like

  AC_ARG_ENABLE(enable_inline, ...

where the corresponding argument should be --enable-inline. The
autoconf documentation however suggests that this should be

  AC_ARG_ENABLE([inline], ...

so we update all of these calls accordingly. In the process, we update
all of the corresponding AC_HELP_STRING instances, since that macro
has been superseded by AS_HELP_STRING.
---
 configure.ac | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/configure.ac b/configure.ac
index 31b32f5..1e91cd1 100644
--- a/configure.ac
+++ b/configure.ac
@@ -25,7 +25,7 @@ AC_CANONICAL_HOST
 
 # Checks for arguments
 # --enable-inline
-AC_ARG_ENABLE(enable_inline, AC_HELP_STRING(--enable-inline, [inline commonly used functions.  [[default=yes]]]))
+AC_ARG_ENABLE([inline], AS_HELP_STRING(--enable-inline, [inline commonly used functions.  [[default=yes]]]))
 AC_MSG_CHECKING([if commonly used function is to be inlined])
 if test "$enable_inline" != "no"; then
   enable_inline="yes"
@@ -34,7 +34,7 @@ fi
 AC_MSG_RESULT($enable_inline)
 
 # --enable-ieee-add
-AC_ARG_ENABLE(enable_ieee_add, AC_HELP_STRING(--enable-ieee-add, [use addition that satisfies IEEE-style error bound instead of Cray-style error bound.  [[default=no]]]))
+AC_ARG_ENABLE([ieee-add], AS_HELP_STRING(--enable-ieee-add, [use addition that satisfies IEEE-style error bound instead of Cray-style error bound.  [[default=no]]]))
 AC_MSG_CHECKING([if addition with IEEE-style error bound is to be used])
 if test "$enable_ieee_add" = "yes"; then
   AC_DEFINE([QD_IEEE_ADD], [1], [Define to 1 to use additions with IEEE-style error bounds.])
@@ -44,7 +44,7 @@ fi
 AC_MSG_RESULT($enable_ieee_add)
 
 # --enable-sloppy-mul
-AC_ARG_ENABLE(enable_sloppy_mul, AC_HELP_STRING(--enable-sloppy-mul, [use fast but slightly inaccurate multiplication.  [[default=yes]]]))
+AC_ARG_ENABLE([sloppy-mul], AS_HELP_STRING(--enable-sloppy-mul, [use fast but slightly inaccurate multiplication.  [[default=yes]]]))
 AC_MSG_CHECKING([if sloppy multiplication is to be used])
 if test "$enable_sloppy_mul" != "no"; then
   enable_sloppy_mul="yes"
@@ -53,7 +53,7 @@ fi
 AC_MSG_RESULT($enable_sloppy_mul)
 
 # --enable-sloppy-div
-AC_ARG_ENABLE(enable_sloppy_div, AC_HELP_STRING(--enable-sloppy-div, [use fast but slightly inaccurate division.  [[default=yes]]]))
+AC_ARG_ENABLE([sloppy-div], AS_HELP_STRING(--enable-sloppy-div, [use fast but slightly inaccurate division.  [[default=yes]]]))
 AC_MSG_CHECKING([if sloppy division is to be used])
 if test "$enable_sloppy_div" != "no"; then
   enable_sloppy_div="yes"
@@ -63,7 +63,7 @@ AC_MSG_RESULT($enable_sloppy_div)
 
 
 # --enable-debug
-AC_ARG_ENABLE(enable_debug, AC_HELP_STRING(--enable-debug, [enable debugging code. [[default=no]]]))
+AC_ARG_ENABLE([debug], AS_HELP_STRING(--enable-debug, [enable debugging code. [[default=no]]]))
 AC_MSG_CHECKING([if debugging code is to be enabled])
 if test "$enable_debug" = "yes"; then
   AC_DEFINE([QD_DEBUG], [1], [Define to 1 to enable debugging code.])
@@ -73,7 +73,7 @@ fi
 AC_MSG_RESULT($enable_debug)
 
 # --enable-warnings
-AC_ARG_ENABLE(enable_warnings, AC_HELP_STRING(--enable-warnings, [enable compiler warnings. [[default=no]]]))
+AC_ARG_ENABLE([warnings], AS_HELP_STRING(--enable-warnings, [enable compiler warnings. [[default=no]]]))
 AC_MSG_CHECKING([if compiler warnings is to be enabled])
 if test "$enable_warnings" != "yes"; then
   enable_warnings="no"
@@ -149,7 +149,7 @@ if test "$enable_debug" = "yes"; then
 fi
 
 # --enable-fma
-AC_ARG_ENABLE(enable_fma, AC_HELP_STRING(--enable-fma, [use fused multiply-add/subtract (auto,gnu,ia64,c99,ibm,compiler).  Use this option with care.  [[default=auto]]]))
+AC_ARG_ENABLE([fma], AS_HELP_STRING(--enable-fma, [use fused multiply-add/subtract (auto,gnu,ia64,c99,ibm,compiler).  Use this option with care.  [[default=auto]]]))
 if test "x$enable_fma" = "x"; then
   enable_fma="auto"
 fi
@@ -248,7 +248,7 @@ if test "$FCFLAGS" = ""; then
     FCFLAGS="-O2"
   fi
 fi
-AC_ARG_ENABLE(enable_fortran, AC_HELP_STRING(--enable-fortran, [build Fortran 77/90 interfaces [[default=auto]]]))
+AC_ARG_ENABLE([fortran], AS_HELP_STRING(--enable-fortran, [build Fortran 77/90 interfaces [[default=auto]]]))
 if test "$enable_fortran" != "no"; then
   AC_LANG_PUSH(Fortran)
   AC_PROG_FC([xlf95 ifort pathf95 f95 gfortran g95 pgf95 lf95 fort ifc efc pathf90 xlf90 pgf90 epcf90 xlf f90])
-- 
2.31.1

