diff -urN -x make.log -x Makefile.platform cifparse-obj-v6.302-prod-src.orig/etc/make.platform.gnu3 cifparse-obj-v6.302-prod-src/etc/make.platform.gnu3
--- cifparse-obj-v6.302-prod-src.orig/etc/make.platform.gnu3	2005-04-26 06:12:57.000000000 -0700
+++ cifparse-obj-v6.302-prod-src/etc/make.platform.gnu3	2005-12-18 22:50:21.000000000 -0800
@@ -107,8 +107,8 @@
 C_WARNINGS=$(WARNINGS)
 
 # C compiler flags
-CFLAGS=$(OPT) $(ABI) $(ANSI_C_FLAG) $(C_WARNINGS) $(DEFINES) $(INCLUDES)
-CFLAGS_NONANSI=$(OPT) $(ABI) $(NON_ANSI_C_FLAG) $(C_WARNINGS) $(DEFINES) \
+CFLAGS=$(C_OPT) $(ABI) $(ANSI_C_FLAG) $(C_WARNINGS) $(DEFINES) $(INCLUDES)
+CFLAGS_NONANSI=$(C_OPT) $(ABI) $(NON_ANSI_C_FLAG) $(C_WARNINGS) $(DEFINES) \
                $(INCLUDES) 
 
 ## C++ compiler
@@ -125,12 +125,12 @@
 # This variable specifies how to compile the C code. If it is set to C,
 # that indicates that C code will be compiled with the C++ compiler.
 # Otherwise it will be compiled with C compiler.
-EXT=C
+EXT=c
 
 # C++ compiler flags
-C++FLAGS=$(OPT) $(ABI) $(ANSI_C_PLUS_FLAG) $(C_PLUS_WARNINGS) $(DEFINES) \
+C++FLAGS=$(CCC_OPT) $(ABI) $(ANSI_C_PLUS_FLAG) $(C_PLUS_WARNINGS) $(DEFINES) \
         $(INCLUDES)
-C++FLAGS_NONANSI=$(OPT) $(ABI) $(NON_ANSI_C_PLUS_FLAG) $(C_PLUS_WARNINGS) \
+C++FLAGS_NONANSI=$(CCC_OPT) $(ABI) $(NON_ANSI_C_PLUS_FLAG) $(C_PLUS_WARNINGS) \
                  $(DEFINES) $(INCLUDES)
 # C++FLAGS_RELAXED should be set to avoid warnings reported by third party
 # source code that is not maintained by PDB
@@ -144,7 +144,7 @@
 F77=f77
 
 # Fortran compiler flags
-FFLAGS=-O -u
+FFLAGS=$(F_OPT)
 
 # Additional Fortran libraries
 F77LIBS=
diff -urN -x make.log -x Makefile.platform cifparse-obj-v6.302-prod-src.orig/etc/make.platform.gnu4 cifparse-obj-v6.302-prod-src/etc/make.platform.gnu4
--- cifparse-obj-v6.302-prod-src.orig/etc/make.platform.gnu4	1969-12-31 16:00:00.000000000 -0800
+++ cifparse-obj-v6.302-prod-src/etc/make.platform.gnu4	2005-12-18 22:55:17.000000000 -0800
@@ -0,0 +1,202 @@
+##########################################################################
+##
+##  File:    make.plaform.gnu4
+##  Purpose: This file is a Linux platform makefile that supports GNU 4.x
+##           compiler suite.
+##
+##########################################################################
+
+#-----Lexer and Parser section-------------------------------------------#
+
+# Lexer executable
+LEX=flex
+
+# Lexer flags
+LEXFLAGS=-Cfr -L
+
+# Parser executable
+YACC=bison
+
+# Parser flags
+YACCFLAGS=-d -v -l
+
+#------------------------------------------------------------------------#
+
+#-----Compilers section--------------------------------------------------#
+
+## ABI
+## This part defines an application binary interface to be used with the
+## compiler suite.
+ABI= 
+
+## Warnings flags
+## This part defines warnings related flags
+
+# WARNINGS_AS_ERRORS defines flags to instruct all compilers to treat all
+# warnings as errors.
+
+# ALL_WARNINGS defines flags to instruct all compilers to report all
+# warnings.
+ALL_WARNINGS=-Wall
+
+# NO_DEPRECATED defines flags to instruct C++ compiler not to report
+# warnings about deprecated constructs still used in C++ code.
+NO_DEPRECATED=-Wno-deprecated
+
+# Collect all general warnings related flags
+WARNINGS=$(WARNINGS_AS_ERRORS) $(ALL_WARNINGS)
+
+## Platform specifics
+## This part defines platform specific information
+
+# Endianess.
+# Should be defined only for big endian platforms. Otherwise
+# it must be left undefined, which indicates little endian platform.
+#ENDIANESS=-DBIG_ENDIAN_PLATFORM
+ 
+# OS indicator. Should be defined only if SunOS is the platform
+#PLATFORM_OS=-DSUN_OS
+ 
+# Collect all platform related flags
+PLATFORM=$(ENDIANESS) $(PLATFORM_OS)
+
+## Compiler capabilities/restrictions related defines
+## This part defines variables based on the capabilities or restrictions
+## of the compiler suite used on the platform.
+
+# If STRCASECMP_OPTION is defined, that indicates that the compiler
+# suite/supporting libraries support strcasecmp() function.
+STRCASECMP_OPTION=-DHAVE_STRCASECMP
+
+# If INCL_TEMPLATE_SRC_OPTION is defined, that indicates that
+# compiler must include template method definition in template
+# header files in order to properly compile templates.
+INCL_TEMPLATE_SRC_OPTION=-DINCL_TEMPLATE_SRC
+
+# If PLACEMENT_NEW_OPTION is defined, that indicates that the compiler
+# suite/supporting libraries support placement new/delete operators.
+PLACEMENT_NEW_OPTION=-DHAVE_PLACEMENT_NEW
+
+# Collect all compiler capabilities/restrictions
+COMPILER=$(STRCASECMP_OPTION) $(INCL_TEMPLATE_SRC_OPTION) \
+  $(PLACEMENT_NEW_OPTION)
+
+# Collect all global defines
+GDEFINES=$(PLATFORM) $(COMPILER)
+
+# Collect all defines from global defines and defines specified in
+# module makefile
+DEFINES=$(GDEFINES) $(LDEFINES)
+
+## Global include directories
+GINCLUDES= 
+
+# Collect all include directories from global include directories and
+# include directories specified in module makefile
+INCLUDES=$(LINCLUDES) $(GINCLUDES) 
+
+## C compiler
+## This part defines C compiler information
+
+# C compiler executable
+CC=gcc
+
+# C compiler ANSI/NON-ANSI flags
+ANSI_C_FLAG=-ansi
+NON_ANSI_C_FLAG=
+C_WARNINGS=$(WARNINGS)
+
+# C compiler flags
+CFLAGS=$(C_OPT) $(ABI) $(ANSI_C_FLAG) $(C_WARNINGS) $(DEFINES) $(INCLUDES)
+CFLAGS_NONANSI=$(C_OPT) $(ABI) $(NON_ANSI_C_FLAG) $(C_WARNINGS) $(DEFINES) \
+               $(INCLUDES) 
+
+## C++ compiler
+## This part defines C++ compiler information
+
+# C++ compiler executable
+CCC=g++
+
+# C++ compiler ANSI/NON-ANSI flags
+ANSI_C_PLUS_FLAG=-ansi
+NON_ANSI_C_PLUS_FLAG=-traditional-cpp
+C_PLUS_WARNINGS=$(WARNINGS) $(NO_DEPRECATED)
+
+# This variable specifies how to compile the C code. If it is set to C,
+# that indicates that C code will be compiled with the C++ compiler.
+# Otherwise it will be compiled with C compiler.
+EXT=c
+
+# C++ compiler flags
+C++FLAGS=$(CCC_OPT) $(ABI) $(ANSI_C_PLUS_FLAG) $(C_PLUS_WARNINGS) $(DEFINES) \
+        $(INCLUDES)
+C++FLAGS_NONANSI=$(CCC_OPT) $(ABI) $(NON_ANSI_C_PLUS_FLAG) $(C_PLUS_WARNINGS) \
+                 $(DEFINES) $(INCLUDES)
+# C++FLAGS_RELAXED should be set to avoid warnings reported by third party
+# source code that is not maintained by PDB
+C++FLAGS_RELAXED=$(OPT) $(ABI) $(ANSI_C_PLUS_FLAG) $(NO_DEPRECATED) $(DEFINES) \
+        $(INCLUDES)
+
+## Fortran compiler
+## This part defines Fortran compiler information
+
+# Fortran compiler executable
+F77=gfortran
+
+# Fortran compiler flags
+FFLAGS=$(F_OPT)
+
+# Additional Fortran libraries
+F77LIBS=
+
+#------------------------------------------------------------------------#
+
+#-----Linkers section----------------------------------------------------#
+
+# Static linking option. If not defined, dynamic linking is used.
+STATIC_LINKING=-static
+
+# Linker flags
+LDFLAGS=$(ABI) -w $(STATIC_LINKING)
+LDFLAGS_NO_STATIC=$(ABI) -w
+
+# Fortran linker
+F77_LINKER=gfortran
+
+#------------------------------------------------------------------------#
+
+#-----Archiver section---------------------------------------------------#
+
+# Archiver executable
+AR=ar
+
+# Archiver flags
+AR_GETFLAGS=xv
+AR_PUTFLAGS=rcvs
+
+#------------------------------------------------------------------------#
+
+#-----Ranlib-------------------------------------------------------------#
+
+RANLIB=true
+
+#------------------------------------------------------------------------#
+
+#-----Installer----------------------------------------------------------#
+
+INSTALL=../etc/cifinstall
+INSTALLOPTS=-m 0444 
+
+#------------------------------------------------------------------------#
+
+#-----Stripper-----------------------------------------------------------#
+
+STRIP=strip
+
+#------------------------------------------------------------------------#
+
+#-----Shell--------------------------------------------------------------#
+
+SHELL=/bin/sh
+
+#------------------------------------------------------------------------#
diff -urN -x make.log -x Makefile.platform cifparse-obj-v6.302-prod-src.orig/etc/platform.sh cifparse-obj-v6.302-prod-src/etc/platform.sh
--- cifparse-obj-v6.302-prod-src.orig/etc/platform.sh	2005-04-26 06:12:57.000000000 -0700
+++ cifparse-obj-v6.302-prod-src/etc/platform.sh	2005-12-18 22:50:21.000000000 -0800
@@ -47,23 +47,31 @@
     ;;
 
     Linux)
-#     Check if it is GCC version 3.x
-      gcc_ver=`gcc --version | grep -e " 3\."`
+#     Check if it is GCC version 4.x
+      gcc_ver=`gcc --version | grep -e " 4\."`
       if [[ -z $gcc_ver ]]
       then
-#     It is not GCC version 3.x. Check if it is GCC version 2.x
-        gcc_ver=`gcc --version | grep -e "2\."`
+#       It is not GCC version 4.x. Check if it is GCC version 3.x
+        gcc_ver=`gcc --version | grep -e " 3\."`
         if [[ -z $gcc_ver ]]
         then
-#         It is not GCC version 2.x either. Production can not be compiled.
-          sysid="unknown"
+#         It is not GCC version 3.x. Check if it is GCC version 2.x
+          gcc_ver=`gcc --version | grep -e "2\."`
+          if [[ -z $gcc_ver ]]
+          then
+#           It is not GCC version 2.x either. Production can not be compiled.
+            sysid="unknown"
+          else
+#           It is GCC version 2.x
+            sysid="gnu2"
+          fi
         else
-#         It is GCC version 2.x
-          sysid="gnu2"
+#         It is GCC version 3.x
+          sysid="gnu3"
         fi
       else
-#       It is GCC version 3.x
-        sysid="gnu3"
+#       It is GCC version 4.x
+        sysid="gnu4"
       fi
     ;;
 
diff -urN -x make.log -x Makefile.platform cifparse-obj-v6.302-prod-src.orig/Makefile cifparse-obj-v6.302-prod-src/Makefile
--- cifparse-obj-v6.302-prod-src.orig/Makefile	2005-04-26 06:12:57.000000000 -0700
+++ cifparse-obj-v6.302-prod-src/Makefile	2005-12-18 22:50:21.000000000 -0800
@@ -54,7 +54,7 @@
 		echo "------------------------------------------------------------"; \
 		echo "**** Making $$libdir ****"; \
 		echo "------------------------------------------------------------"; \
-		(cd $$libdir && $(MAKE) -f $(MAKEFILE) "OPT=-O" install) || exit 1; \
+		(cd $$libdir && $(MAKE) -f $(MAKEFILE) C_OPT="${CFLAGS}" CCC_OPT="${CXXFLAGS}" F_OPT="${FFLAGS}" install) || exit 1; \
 	done
 
 debug:
