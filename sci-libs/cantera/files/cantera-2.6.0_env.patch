diff -Naur old/SConstruct new/SConstruct
--- old/SConstruct
+++ new/SConstruct
@@ -178,6 +178,10 @@
 
 config_options = [
     Option(
+        "AR",
+        "The archiver to use.",
+        "${AR}"),
+    Option(
         "CXX",
         "The C++ compiler to use.",
         "${CXX}"),
@@ -740,7 +744,7 @@
     toolchain = ["default"]
 
 env = Environment(tools=toolchain+["textfile", "subst", "recursiveInstall", "wix", "gch"],
-                  ENV={"PATH": os.environ["PATH"]},
+                  ENV={'PATH': os.environ['PATH'], 'CCACHE_DIR': os.environ.get('CCACHE_DIR','')},
                   toolchain=toolchain,
                   **extraEnvArgs)
 
@@ -775,7 +779,7 @@
 
 add_RegressionTest(env)
 
-opts.AddVariables(*config.to_scons(["CC", "CXX"], env=env))
+opts.AddVariables(*config.to_scons(["AR", "CC", "CXX"], env=env))
 opts.Update(env)
 
 # Check if this is actually Apple's clang on macOS
@@ -861,11 +865,7 @@
 env['cantera_pure_version'] = re.match(r'(\d+\.\d+\.\d+)', env['cantera_version']).group(0)
 env['cantera_short_version'] = re.match(r'(\d+\.\d+)', env['cantera_version']).group(0)
 
-try:
-    env["git_commit"] = get_command_output("git", "rev-parse", "--short", "HEAD")
-    logger.info(f"Building Cantera from git commit '{env['git_commit']}'")
-except (subprocess.CalledProcessError, FileNotFoundError):
-    env["git_commit"] = "unknown"
+env["git_commit"] = "unknown"
 
 # Print values of all build options:
 # the (updated) "cantera.conf" combines all options that were specified by the user
diff -Naur old/interfaces/cython/SConscript new/interfaces/cython/SConscript
--- old/interfaces/cython/SConscript
+++ new/interfaces/cython/SConscript
@@ -107,7 +107,7 @@
                               obj, LIBPREFIX="", SHLIBSUFFIX=module_ext,
                               SHLIBPREFIX="", LIBSUFFIXES=[module_ext])
 
-build_cmd = ("$python_cmd_esc -m pip wheel -v --no-build-isolation --use-feature=in-tree-build --no-deps "
+build_cmd = ("$python_cmd_esc -m pip wheel -v --no-build-isolation --no-deps "
              "--wheel-dir=build/python/dist build/python")
 plat = info['plat'].replace('-', '_').replace('.', '_')
 wheel_name = (f"Cantera-{env['cantera_version']}-cp{py_version_nodot}"
@@ -172,7 +172,7 @@
 
     install_cmd.append(f"--root={stage_dir.resolve()}")
 
-install_cmd.extend(("--no-build-isolation", "--use-feature=in-tree-build", "--no-deps", "-v", "--force-reinstall",
+install_cmd.extend(("--no-build-isolation", "--no-deps", "-v", "--force-reinstall",
                     "build/python"))
 if localenv['PYTHON_INSTALLER'] == 'direct':
     mod_inst = install(localenv.Command, 'dummy', mod,
diff -Naur old/test_problems/SConscript new/test_problems/SConscript
--- old/test_problems/SConscript
+++ new/test_problems/SConscript
@@ -233,7 +233,7 @@
      artifacts=['vcs_equilibrate_res.csv'])
 
 CompileAndTest('clib', 'clib_test', 'clib_test',
-               extensions=['^clib_test.c'], libs=localenv['cantera_shared_libs'])
+               extensions=['^clib_test.c'])
 
 # C++ Samples
 Test('cxx-bvp', 'cxx_samples', '#build/samples/cxx/bvp/blasius', None,
