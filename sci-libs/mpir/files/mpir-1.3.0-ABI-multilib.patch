--- configure.in.orig	2009-11-28 10:48:59.196977657 +0000
+++ configure.in	2009-11-28 10:54:50.717976971 +0000
@@ -361,7 +361,7 @@
 # hugely bloat the output.
 
 
-AC_ARG_VAR(ABI, [desired ABI (for processors supporting more than one ABI)])
+AC_ARG_VAR(MPIRABI, [desired ABI (for processors supporting more than one ABI)])
 
 # abilist needs to be non-empty, "standard" is just a generic name here
 abilist="standard"
@@ -1590,7 +1590,7 @@
 
 cat >&AC_FD_CC <<EOF
 User:
-ABI=$ABI
+MPIRABI=$MPIRABI
 CC=$CC
 CFLAGS=$CFLAGS_or_unset
 CPPFLAGS=$CPPFLAGS_or_unset
@@ -1611,22 +1611,22 @@
 # If the user specifies an ABI then it must be in $abilist, after that
 # $abilist is restricted to just that choice.
 #
-if test -n "$ABI"; then
+if test -n "$MPIRABI"; then
   found=no
   for abi in $abilist; do
-    if test $abi = "$ABI"; then found=yes; break; fi
+    if test $abi = "$MPIRABI"; then found=yes; break; fi
   done
   if test $found = no; then
-    AC_MSG_ERROR([ABI=$ABI is not among the following valid choices: $abilist])
+    AC_MSG_ERROR([MPIRABI=$MPIRABI is not among the following valid choices: $abilist])
   fi
-  abilist="$ABI"
+  abilist="$MPIRABI"
 fi
 
 found_compiler=no
 
 for abi in $abilist; do
 
-  echo "checking ABI=$abi"
+  echo "checking MPIRABI=$abi"
 
   # Suppose abilist="64 32", then for abi=64, will have abi1="_64" and
   # abi2="_64".  For abi=32, will have abi1="_32" and abi2="".  This is how
@@ -1879,7 +1879,7 @@
     done
   fi
 
-  ABI="$abi"
+  MPIRABI="$abi"
   CC="$cc"
   CFLAGS="$cflags"
   CPPFLAGS="$cppflags"
@@ -1895,8 +1895,8 @@
    AC_SUBST(GMP_CFLAGS)
 
   # Could easily have this in config.h too, if desired.
-  ABI_nodots=`echo $ABI | sed 's/\./_/'`
-  GMP_DEFINE_RAW("define_not_for_expansion(\`HAVE_ABI_$ABI_nodots')", POST)
+  ABI_nodots=`echo $MPIRABI | sed 's/\./_/'`
+  GMP_DEFINE_RAW("define_not_for_expansion(\`HAVE_ABI_$MPIRABI_nodots')", POST)
 
 
   # GMP_LDFLAGS substitution, selected according to ABI.
@@ -2094,7 +2094,7 @@
 #
 case $host in
   X86_PATTERN | X86_64_PATTERN)
-    if test "$ABI" = 32; then
+    if test "$MPIRABI" = 32; then
       case "$path $fat_path" in
         *mmx*)   GMP_ASM_X86_MMX( , [GMP_STRIP_PATH(*mmx*)]) ;;
       esac
@@ -2108,7 +2108,7 @@
 
 cat >&AC_FD_CC <<EOF
 Decided:
-ABI=$ABI
+MPIRABI=$MPIRABI
 CC=$CC
 CFLAGS=$CFLAGS
 CPPFLAGS=$CPPFLAGS
@@ -2117,7 +2117,7 @@
 CXXFLAGS=$CXXFLAGS
 path=$path
 EOF
-echo "using ABI=\"$ABI\""
+echo "using MPIRABI=\"$MPIRABI\""
 echo "      CC=\"$CC\""
 echo "      CFLAGS=\"$CFLAGS\""
 echo "      CPPFLAGS=\"$CPPFLAGS\""
@@ -2593,7 +2593,7 @@
 
 
 if test -n "$fat_path"; then
-  if test "$ABI" = 64; then
+  if test "$MPIRABI" = 64; then
     fat_path="$fat_path_64"
   fi
 
@@ -3099,19 +3099,19 @@
       GMP_INCLUDE_MPN(powerpc32/powerpc-defs.m4)
       case $host in
         *-*-aix*)
-	  case $ABI in
+	  case $MPIRABI in
 	    64 | aix64)  GMP_INCLUDE_MPN(powerpc64/aix.m4) ;;
             *)           GMP_INCLUDE_MPN(powerpc32/aix.m4) ;;
           esac
           ;;
         *-*-linux* | *-*-*bsd*)
-	  case $ABI in
+	  case $MPIRABI in
 	    mode64)      GMP_INCLUDE_MPN(powerpc64/elf.m4) ;;
 	    mode32 | 32) GMP_INCLUDE_MPN(powerpc32/elf.m4) ;;
           esac
           ;;
         *-*-darwin*)
-	  case $ABI in
+	  case $MPIRABI in
 	    mode64)      GMP_INCLUDE_MPN(powerpc64/darwin.m4) ;;
 	    mode32 | 32) GMP_INCLUDE_MPN(powerpc32/darwin.m4) ;;
           esac
@@ -3126,7 +3126,7 @@
       GMP_INCLUDE_MPN(powerpc32/aix.m4)
       ;;
     sparcv9*-*-* | ultrasparc*-*-* | sparc64-*-*)
-      case $ABI in
+      case $MPIRABI in
         64)
           GMP_ASM_SPARC_REGISTER
           ;;
@@ -3134,7 +3134,7 @@
       ;;
     X86_PATTERN | X86_64_PATTERN)
       GMP_ASM_ALIGN_FILL_0x90
-      case $ABI in
+      case $MPIRABI in
         32)
           GMP_INCLUDE_MPN(x86/x86-defs.m4)
           AC_DEFINE(HAVE_HOST_CPU_FAMILY_x86)
