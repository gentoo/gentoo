--- a/c10/CMakeLists.txt
+++ b/c10/CMakeLists.txt
@@ -107,7 +107,7 @@
 # Note: for now, we will put all export path into one single Caffe2Targets group
 # to deal with the cmake deployment need. Inside the Caffe2Targets set, the
 # individual libraries like libc10.so and libcaffe2.so are still self-contained.
-install(TARGETS c10 EXPORT Caffe2Targets DESTINATION lib)
+install(TARGETS c10 EXPORT Caffe2Targets DESTINATION ${CMAKE_INSTALL_LIBDIR})
 install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
         DESTINATION include
         FILES_MATCHING PATTERN "*.h")
--- a/c10/cuda/CMakeLists.txt
+++ b/c10/cuda/CMakeLists.txt
@@ -63,7 +63,7 @@ add_subdirectory(test)
 # Note: for now, we will put all export path into one single Caffe2Targets group
 # to deal with the cmake deployment need. Inside the Caffe2Targets set, the
 # individual libraries like libc10.so and libcaffe2.so are still self-contained.
-install(TARGETS c10_cuda EXPORT Caffe2Targets DESTINATION lib)
+install(TARGETS c10_cuda EXPORT Caffe2Targets DESTINATION ${CMAKE_INSTALL_LIBDIR})
 foreach(file ${C10_CUDA_HEADERS})
   get_filename_component( dir ${file} DIRECTORY )
   install( FILES ${file} DESTINATION include/c10/cuda/${dir} )
--- a/c10/hip/CMakeLists.txt
+++ b/c10/hip/CMakeLists.txt
@@ -55,7 +55,7 @@ target_include_directories(
 add_subdirectory(test)
 
 # ---[ Installation
-install(TARGETS c10_hip EXPORT Caffe2Targets DESTINATION lib)
+install(TARGETS c10_hip EXPORT Caffe2Targets DESTINATION ${CMAKE_INSTALL_LIBDIR})
 install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
         DESTINATION include
         FILES_MATCHING PATTERN "*.h")
--- a/modules/detectron/CMakeLists.txt
+++ b/modules/detectron/CMakeLists.txt
@@ -17,7 +17,7 @@ if(BUILD_CAFFE2_OPS)
 
     torch_set_target_props(caffe2_detectron_ops_gpu)
     target_link_libraries(caffe2_detectron_ops_gpu torch ${OpenMP_link})
-    install(TARGETS caffe2_detectron_ops_gpu DESTINATION lib)
+    install(TARGETS caffe2_detectron_ops_gpu DESTINATION ${CMAKE_INSTALL_LIBDIR})
     if(MSVC)
       install(FILES $<TARGET_PDB_FILE:caffe2_detectron_ops_gpu> DESTINATION lib OPTIONAL)
     endif()
@@ -31,7 +31,7 @@ if(BUILD_CAFFE2_OPS)
     torch_set_target_props(caffe2_detectron_ops_hip)
     target_compile_options(caffe2_detectron_ops_hip PRIVATE ${HIP_CXX_FLAGS})
     target_link_libraries(caffe2_detectron_ops_hip torch)
-    install(TARGETS caffe2_detectron_ops_hip DESTINATION lib)
+    install(TARGETS caffe2_detectron_ops_hip DESTINATION ${CMAKE_INSTALL_LIBDIR})
   elseif(NOT IOS_PLATFORM)
     add_library(caffe2_detectron_ops SHARED ${Detectron_CPU_SRCS})
     if(HAVE_SOVERSION)
@@ -40,7 +40,7 @@ if(BUILD_CAFFE2_OPS)
     endif()
     torch_set_target_props(caffe2_detectron_ops)
     target_link_libraries(caffe2_detectron_ops torch ${OpenMP_link})
-    install(TARGETS caffe2_detectron_ops DESTINATION lib)
+    install(TARGETS caffe2_detectron_ops DESTINATION ${CMAKE_INSTALL_LIBDIR})
     if(MSVC)
       install(FILES $<TARGET_PDB_FILE:caffe2_detectron_ops> DESTINATION lib OPTIONAL)
     endif()
--- a/modules/module_test/CMakeLists.txt
+++ b/modules/module_test/CMakeLists.txt
@@ -16,7 +16,7 @@ if(BUILD_TEST AND NOT BUILD_LITE_INTERPRETER)
         VERSION ${TORCH_VERSION} SOVERSION ${TORCH_SOVERSION})
   endif()
   target_link_libraries(caffe2_module_test_dynamic torch_library)
-  install(TARGETS caffe2_module_test_dynamic DESTINATION lib)
+  install(TARGETS caffe2_module_test_dynamic DESTINATION ${CMAKE_INSTALL_LIBDIR})
   if(MSVC AND BUILD_SHARED_LIBS)
     install(FILES $<TARGET_PDB_FILE:caffe2_module_test_dynamic> DESTINATION lib OPTIONAL)
   endif()
--- a/modules/observers/CMakeLists.txt
+++ b/modules/observers/CMakeLists.txt
@@ -21,7 +21,7 @@ endif()
 target_link_libraries(caffe2_observers PUBLIC torch_library)
 target_include_directories(caffe2_observers PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/..)
 target_compile_options(caffe2_observers PRIVATE "-DCAFFE2_BUILD_OBSERVER_LIB")
-install(TARGETS caffe2_observers DESTINATION lib)
+install(TARGETS caffe2_observers DESTINATION ${CMAKE_INSTALL_LIBDIR})
 caffe2_interface_library(caffe2_observers caffe2_observers_library)
 if(MSVC AND BUILD_SHARED_LIBS)
   install(FILES $<TARGET_PDB_FILE:caffe2_observers> DESTINATION lib OPTIONAL)
--- a/modules/rocksdb/CMakeLists.txt
+++ b/modules/rocksdb/CMakeLists.txt
@@ -59,7 +59,7 @@ add_library(caffe2_rocksdb ${CMAKE_CURRENT_SOURCE_DIR}/rocksdb.cc)
 target_link_libraries(caffe2_rocksdb PUBLIC torch_library)
 target_link_libraries(caffe2_rocksdb PRIVATE ${RocksDB_LIBRARIES})
 target_include_directories(caffe2_rocksdb PRIVATE ${RocksDB_INCLUDE_DIR})
-install(TARGETS caffe2_rocksdb DESTINATION lib)
+install(TARGETS caffe2_rocksdb DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 # ---[ Last, Append the library to Caffe2_MODULES, if we are building with
 # the main repo.
--- a/test/cpp/c10d/CMakeLists.txt
+++ b/test/cpp/c10d/CMakeLists.txt
@@ -51,7 +51,7 @@ if(USE_CUDA)
     if(INSTALL_TEST)
       install(TARGETS ProcessGroupNCCLTest DESTINATION bin)
       install(TARGETS ProcessGroupNCCLErrorsTest DESTINATION bin)
-      install(TARGETS c10d_cuda_test DESTINATION lib)
+      install(TARGETS c10d_cuda_test DESTINATION ${CMAKE_INSTALL_LIBDIR})
     endif()
   endif()
 else()
--- a/test/cpp/jit/CMakeLists.txt
+++ b/test/cpp/jit/CMakeLists.txt
@@ -32,9 +32,9 @@ endif()
 target_link_libraries(backend_with_compiler torch)
 
 if(INSTALL_TEST)
-  install(TARGETS torchbind_test DESTINATION lib)
-  install(TARGETS jitbackend_test DESTINATION lib)
-  install(TARGETS backend_with_compiler DESTINATION lib)
+  install(TARGETS torchbind_test DESTINATION ${CMAKE_INSTALL_LIBDIR})
+  install(TARGETS jitbackend_test DESTINATION ${CMAKE_INSTALL_LIBDIR})
+  install(TARGETS backend_with_compiler DESTINATION ${CMAKE_INSTALL_LIBDIR})
 endif()
 
 # Build the cpp gtest binary containing the cpp-only tests.
--- a/torch/csrc/deploy/CMakeLists.txt
+++ b/torch/csrc/deploy/CMakeLists.txt
@@ -80,4 +80,4 @@ if(INSTALL_TEST)
   install(TARGETS test_deploy_gpu DESTINATION bin)
 endif()
 
-install(TARGETS torch_deploy DESTINATION lib)
+install(TARGETS torch_deploy DESTINATION ${CMAKE_INSTALL_LIBDIR})
