From 55c74ed3854736cc6cb43fd242f1db5249aea5e4 Mon Sep 17 00:00:00 2001
From: David Gobbi <david.gobbi@gmail.com>
Date: Fri, 29 May 2020 10:24:16 -0600
Subject: [PATCH] Fix gcc10 return-local-addr warning in wrappers

There was a warning from gcc10 because it thought a stack-allocated
array variable was being returned.
---
 Wrapping/Tools/vtkParseExtras.c     | 10 +++++-----
 Wrapping/Tools/vtkParsePreprocess.c | 27 ++++++++++++++++-----------
 2 files changed, 21 insertions(+), 16 deletions(-)

diff --git a/Wrapping/Tools/vtkParseExtras.c b/Wrapping/Tools/vtkParseExtras.c
index 88a73c15d8d..853ed135f6f 100644
--- a/Wrapping/Tools/vtkParseExtras.c
+++ b/Wrapping/Tools/vtkParseExtras.c
@@ -251,13 +251,13 @@ static const char* vtkparse_string_replace(
     if (any_replaced)
     {
       /* return a string that was allocated with malloc */
-      if (result == result_store)
+      tmp = (char*)malloc(strlen(result) + 1);
+      strcpy(tmp, result);
+      cp = tmp;
+      if (result != result_store)
       {
-        tmp = (char*)malloc(strlen(result) + 1);
-        strcpy(tmp, result);
-        result = tmp;
+        free(result);
       }
-      cp = result;
     }
   }
 
diff --git a/Wrapping/Tools/vtkParsePreprocess.c b/Wrapping/Tools/vtkParsePreprocess.c
index 4f30cfa2cb5..bd2e7cbb116 100644
--- a/Wrapping/Tools/vtkParsePreprocess.c
+++ b/Wrapping/Tools/vtkParsePreprocess.c
@@ -4405,14 +4405,16 @@ const char* vtkParsePreprocess_ExpandMacro(
     }
     return macro->Definition;
   }
-
-  if (rp == stack_rp)
+  else
   {
-    rp = (char*)malloc(strlen(stack_rp) + 1);
-    strcpy(rp, stack_rp);
+    char* tmp = (char*)malloc(strlen(rp) + 1);
+    strcpy(tmp, rp);
+    if (rp != stack_rp)
+    {
+      free(rp);
+    }
+    return tmp;
   }
-
-  return rp;
 }
 
 /**
@@ -4631,14 +4633,17 @@ const char* vtkParsePreprocess_ProcessString(PreprocessInfo* info, const char* t
       }
       return tp;
     }
-    if (rp == stack_rp)
+    else
     {
-      rp = (char*)malloc(strlen(stack_rp) + 1);
-      strcpy(rp, stack_rp);
+      char* tmp = (char*)malloc(strlen(rp) + 1);
+      strcpy(tmp, rp);
+      if (rp != stack_rp)
+      {
+        free(rp);
+      }
+      return tmp;
     }
   }
-
-  return rp;
 }
 
 /**
-- 
GitLab

