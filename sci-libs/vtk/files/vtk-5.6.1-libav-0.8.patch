Description: Upstream changes introduced in version 5.6.1-6.1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 vtk (5.6.1-6.1) unstable; urgency=low
 .
   [ Michael Schutte ]
   * Non-maintainer upload.
   * Remove absolute paths to required libraries from
     /usr/lib/vtk-5.6/VTKLibraryDepends.cmake after building, closes:
     #506992.  Due to the multiarch transition, the original behavior
     frequently causes reverse build-deps to FTBFS.  This change should
     probably be reverted once all required libraries are multiarched.
 .
   [ Steve M. Robbins ]
   * Override lintian diagnostic about embedded libraries ftgl and sqlite.
   * IO/vtkFFMPEGWriter.cxx: Applied fix from #638246 to build with libav
     0.7.
 .
 The person named in the Author field signed this changelog entry.
Author: Steve M. Robbins <smr@debian.org>
Bug-Debian: http://bugs.debian.org/506992

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- vtk-5.6.1.orig/IO/vtkFFMPEGWriter.cxx
+++ vtk-5.6.1/IO/vtkFFMPEGWriter.cxx
@@ -123,7 +123,7 @@ int vtkFFMPEGWriterInternal::Start()
     }
 
   //choose avi media file format
-  this->avOutputFormat = guess_format("avi", NULL, NULL);
+  this->avOutputFormat = av_guess_format("avi", NULL, NULL);
   if (!this->avOutputFormat) 
     {
     vtkGenericWarningMacro (<< "Could not open the avi media file format.");
@@ -150,7 +150,7 @@ int vtkFFMPEGWriterInternal::Start()
   //Set up the codec.
   AVCodecContext *c = this->avStream->codec;
   c->codec_id = (CodecID)this->avOutputFormat->video_codec;
-  c->codec_type = CODEC_TYPE_VIDEO;
+  c->codec_type = AVMEDIA_TYPE_VIDEO;
   c->width = this->Dim[0];
   c->height = this->Dim[1];
   c->pix_fmt = PIX_FMT_YUVJ420P;
@@ -329,7 +329,7 @@ int vtkFFMPEGWriterInternal::Write(vtkIm
     pkt.stream_index = this->avStream->index;
     if (cc->coded_frame->key_frame) //treat keyframes well
       {
-      pkt.flags |= PKT_FLAG_KEY;
+      pkt.flags |= AV_PKT_FLAG_KEY;
       }
     pkt.duration = 0; //presentation duration in time_base units or 0 if NA
     pkt.pos = -1; //byte position in stream or -1 if NA
