--- configure.ac	1970-01-01 01:00:00.000000000 +0100
+++ configure.ac	2009-03-14 11:37:58.804041439 +0000
@@ -0,0 +1,18 @@
+# -*- Autoconf -*-
+AC_PREREQ(2.59)
+AC_INIT(parmetis, 3.1.1, karypis@cs.umn.edu)
+AM_INIT_AUTOMAKE([foreign])
+AC_CONFIG_HEADER([config.h])
+AC_PROG_INSTALL
+AC_PROG_LIBTOOL
+AC_CHECK_LIB(m, sqrt)
+sinclude(ax_mpi.m4)
+AC_LANG_PUSH([C])
+AX_MPI([], AC_MSG_ERROR([could not compile an mpi test program]))
+AC_CONFIG_FILES([Makefile 
+		 metis.pc
+		 parmetis.pc
+		 ParMETISLib/Makefile
+		 METISLib/Makefile
+		 Programs/Makefile])
+AC_OUTPUT
--- Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ Makefile.am	2009-03-14 11:37:15.700900498 +0000
@@ -0,0 +1,5 @@
+SUBDIRS = METISLib ParMETISLib Programs
+EXTRA_DIST = CHANGES VERSION parmetis.pc.in metis.pc.in
+include_HEADERS = parmetis.h
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = metis.pc parmetis.pc
--- METISLib/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ METISLib/Makefile.am	2009-03-14 11:37:15.700900498 +0000
@@ -0,0 +1,18 @@
+pkginclude_HEADERS = defs.h macros.h metis.h proto.h rename.h \
+	stdheaders.h struct.h
+pkgincludedir = $(includedir)/metis
+
+lib_LTLIBRARIES = libmetis.la
+libmetis_la_SOURCES = \
+	coarsen.c fm.c initpart.c match.c ccgraph.c \
+	pmetis.c pqueue.c refine.c util.c timing.c debug.c \
+	bucketsort.c graph.c stat.c kmetis.c kwayrefine.c \
+	kwayfm.c balance.c ometis.c srefine.c sfm.c separator.c \
+	mincover.c mmd.c mesh.c meshpart.c frename.c fortran.c \
+	myqsort.c compress.c parmetis.c estmem.c \
+	mpmetis.c mcoarsen.c mmatch.c minitpart.c mbalance.c \
+	mutil.c mkmetis.c mkwayrefine.c mkwayfmh.c \
+	mrefine2.c minitpart2.c mbalance2.c mfm2.c \
+	kvmetis.c kwayvolrefine.c kwayvolfm.c subdomains.c \
+	mfm.c memory.c mrefine.c checkgraph.c
+libmetis_la_LDFLAGS = -no-undefined -version-info 4:1:0 
--- metis.pc.in	1970-01-01 01:00:00.000000000 +0100
+++ metis.pc.in	2009-03-14 11:37:15.700900498 +0000
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: METIS
+Description: Software for unstructured graph partitioning
+Version: @VERSION@
+Libs: -L${libdir} -lmetis
+Cflags: -I${includedir}/metis
--- ParMETISLib/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ParMETISLib/Makefile.am	2009-03-14 11:57:08.006017954 +0000
@@ -0,0 +1,21 @@
+pkginclude_HEADERS = defs.h macros.h parmetislib.h proto.h \
+	rename.h stdheaders.h struct.h
+pkgincludedir = $(includedir)/parmetis
+
+lib_LTLIBRARIES = libparmetis.la
+libparmetis_la_SOURCES = \
+	comm.c util.c debug.c setup.c grsetup.c timer.c \
+	node_refine.c initmsection.c order.c \
+	xyzpart.c pspases.c frename.c \
+	iintsort.c iidxsort.c ikeysort.c ikeyvalsort.c \
+	kmetis.c gkmetis.c ometis.c \
+	initpart.c match.c \
+	kwayfm.c kwayrefine.c kwaybalance.c \
+	remap.c stat.c fpqueue.c \
+	ametis.c rmetis.c lmatch.c initbalance.c \
+	mdiffusion.c diffutil.c wave.c \
+	csrmatch.c redomylink.c balancemylink.c \
+	selectq.c akwayfm.c serial.c move.c \
+	mmetis.c mesh.c memory.c weird.c backcompat.c
+libparmetis_la_LDFLAGS = -no-undefined -version-info 3:1:1
+libparmetis_la_LIBADD = @MPILIBS@ $(top_builddir)/METISLib/libmetis.la
--- parmetis.pc.in	1970-01-01 01:00:00.000000000 +0100
+++ parmetis.pc.in	2009-03-14 11:37:15.700900498 +0000
@@ -0,0 +1,11 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: ParMETIS
+Description: Software for parallel (mpi) unstructured graph partitioning
+Version: @VERSION@
+Requires: metis
+Libs: -L${libdir} -lparmetis
+Cflags: -I${includedir}
--- Programs/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ Programs/Makefile.am	2009-03-14 11:37:15.700900498 +0000
@@ -0,0 +1,13 @@
+AM_CPPFLAGS = -I$(top_srcdir)/ParMETISLib
+LDADD = $(top_builddir)/METISLib/libmetis.la \
+	$(top_builddir)/ParMETISLib/libparmetis.la
+
+check_PROGRAMS = ptest mtest
+ptest_SOURCES = ptest.c io.c adaptgraph.c
+mtest_SOURCES = mtest.c io.c
+
+MPIRUN = mpirun -np 2
+
+check-local: $(check_PROGRAMS)
+	$(MPIRUN) ptest ../Graphs/rotor.graph
+	$(MPIRUN) mtest ../Graphs/bricks.hex3d 2
--- ax_mpi.m4	1970-01-01 01:00:00.000000000 +0100
+++ ax_mpi.m4	2010-01-20 20:33:15.000000000 +0000
@@ -0,0 +1,178 @@
+# ===========================================================================
+#             http://www.nongnu.org/autoconf-archive/ax_mpi.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_MPI([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro tries to find out how to compile programs that use MPI
+#   (Message Passing Interface), a standard API for parallel process
+#   communication (see http://www-unix.mcs.anl.gov/mpi/)
+#
+#   On success, it sets the MPICC, MPICXX, MPIF77, or MPIFC output variable
+#   to the name of the MPI compiler, depending upon the current language.
+#   (This may just be $CC/$CXX/$F77/$FC, but is more often something like
+#   mpicc/mpiCC/mpif77/mpif90.) It also sets MPILIBS to any libraries that
+#   are needed for linking MPI (e.g. -lmpi or -lfmpi, if a special
+#   MPICC/MPICXX/MPIF77/MPIFC was not found).
+#
+#   If you want to compile everything with MPI, you should set:
+#
+#     CC="MPICC" #OR# CXX="MPICXX" #OR# F77="MPIF77" #OR# FC="MPIFC"
+#     LIBS="$MPILIBS $LIBS"
+#
+#   NOTE: The above assumes that you will use $CC (or whatever) for linking
+#   as well as for compiling. (This is the default for automake and most
+#   Makefiles.)
+#
+#   The user can force a particular library/compiler by setting the
+#   MPICC/MPICXX/MPIF77/MPIFC and/or MPILIBS environment variables.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if an MPI library is
+#   found, and ACTION-IF-NOT-FOUND is a list of commands to run if it is not
+#   found. If ACTION-IF-FOUND is not specified, the default action will
+#   define HAVE_MPI.
+#
+# LICENSE
+#
+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>
+#   Copyright (c) 2008 Julian C. Cummings <cummings@cacr.caltech.edu>
+#
+#   This program is free software: you can redistribute it and/or modify it
+#   under the terms of the GNU General Public License as published by the
+#   Free Software Foundation, either version 3 of the License, or (at your
+#   option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#   Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License along
+#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright owner
+#   gives unlimited permission to copy, distribute and modify the configure
+#   scripts that are the output of Autoconf when processing the Macro. You
+#   need not follow the terms of the GNU General Public License when using
+#   or distributing such scripts, even though portions of the text of the
+#   Macro appear in them. The GNU General Public License (GPL) does govern
+#   all other use of the material that constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the Autoconf
+#   Macro released by the Autoconf Archive. When you make and distribute a
+#   modified version of the Autoconf Macro, you may extend this special
+#   exception to the GPL to apply to your modified version as well.
+
+AU_ALIAS([ACX_MPI], [AX_MPI])
+AC_DEFUN([AX_MPI], [
+AC_PREREQ(2.50) dnl for AC_LANG_CASE
+
+AC_LANG_CASE([C], [
+	AC_REQUIRE([AC_PROG_CC])
+	AC_ARG_VAR(MPICC,[MPI C compiler command])
+	AC_CHECK_PROGS(MPICC, mpicc hcc mpxlc_r mpxlc mpcc cmpicc, $CC)
+	ax_mpi_save_CC="$CC"
+	CC="$MPICC"
+	AC_SUBST(MPICC)
+],
+[C++], [
+	AC_REQUIRE([AC_PROG_CXX])
+	AC_ARG_VAR(MPICXX,[MPI C++ compiler command])
+	AC_CHECK_PROGS(MPICXX, mpic++ mpicxx mpiCC hcp mpxlC_r mpxlC mpCC cmpic++, $CXX)
+	ax_mpi_save_CXX="$CXX"
+	CXX="$MPICXX"
+	AC_SUBST(MPICXX)
+],
+[Fortran 77], [
+	AC_REQUIRE([AC_PROG_F77])
+	AC_ARG_VAR(MPIF77,[MPI Fortran 77 compiler command])
+	AC_CHECK_PROGS(MPIF77, mpif77 hf77 mpxlf_r mpxlf mpf77 cmpifc, $F77)
+	ax_mpi_save_F77="$F77"
+	F77="$MPIF77"
+	AC_SUBST(MPIF77)
+],
+[Fortran], [
+	AC_REQUIRE([AC_PROG_FC])
+	AC_ARG_VAR(MPIFC,[MPI Fortran compiler command])
+	AC_CHECK_PROGS(MPIFC, mpif90 mpxlf95_r mpxlf90_r mpxlf95 mpxlf90 mpf90 cmpif90c, $FC)
+	ax_mpi_save_FC="$FC"
+	FC="$MPIFC"
+	AC_SUBST(MPIFC)
+])
+
+if test x = x"$MPILIBS"; then
+	AC_LANG_CASE([C], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
+		[C++], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
+		[Fortran 77], [AC_MSG_CHECKING([for MPI_Init])
+			AC_LINK_IFELSE([AC_LANG_PROGRAM([],[      call MPI_Init])],[MPILIBS=" "
+				AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])],
+		[Fortran], [AC_MSG_CHECKING([for MPI_Init])
+			AC_LINK_IFELSE([AC_LANG_PROGRAM([],[      call MPI_Init])],[MPILIBS=" "
+				AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])])
+fi
+AC_LANG_CASE([Fortran 77], [
+	if test x = x"$MPILIBS"; then
+		AC_CHECK_LIB(fmpi, MPI_Init, [MPILIBS="-lfmpi"])
+	fi
+	if test x = x"$MPILIBS"; then
+		AC_CHECK_LIB(fmpich, MPI_Init, [MPILIBS="-lfmpich"])
+	fi
+],
+[Fortran], [
+	if test x = x"$MPILIBS"; then
+		AC_CHECK_LIB(fmpi, MPI_Init, [MPILIBS="-lfmpi"])
+	fi
+	if test x = x"$MPILIBS"; then
+		AC_CHECK_LIB(mpichf90, MPI_Init, [MPILIBS="-lmpichf90"])
+	fi
+])
+if test x = x"$MPILIBS"; then
+	AC_CHECK_LIB(mpi, MPI_Init, [MPILIBS="-lmpi"])
+fi
+if test x = x"$MPILIBS"; then
+	AC_CHECK_LIB(mpich, MPI_Init, [MPILIBS="-lmpich"])
+fi
+
+dnl We have to use AC_TRY_COMPILE and not AC_CHECK_HEADER because the
+dnl latter uses $CPP, not $CC (which may be mpicc).
+AC_LANG_CASE([C], [if test x != x"$MPILIBS"; then
+	AC_MSG_CHECKING([for mpi.h])
+	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
+		AC_MSG_RESULT(no)])
+fi],
+[C++], [if test x != x"$MPILIBS"; then
+	AC_MSG_CHECKING([for mpi.h])
+	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
+		AC_MSG_RESULT(no)])
+fi],
+[Fortran 77], [if test x != x"$MPILIBS"; then
+	AC_MSG_CHECKING([for mpif.h])
+	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[      include 'mpif.h'])],[AC_MSG_RESULT(yes)], [MPILIBS=""
+		AC_MSG_RESULT(no)])
+fi],
+[Fortran], [if test x != x"$MPILIBS"; then
+	AC_MSG_CHECKING([for mpif.h])
+	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[      include 'mpif.h'])],[AC_MSG_RESULT(yes)], [MPILIBS=""
+		AC_MSG_RESULT(no)])
+fi])
+
+AC_LANG_CASE([C], [CC="$ax_mpi_save_CC"],
+	[C++], [CXX="$ax_mpi_save_CXX"],
+	[Fortran 77], [F77="$ax_mpi_save_F77"],
+	[Fortran], [FC="$ax_mpi_save_FC"])
+
+AC_SUBST(MPILIBS)
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x = x"$MPILIBS"; then
+        $2
+        :
+else
+        ifelse([$1],,[AC_DEFINE(HAVE_MPI,1,[Define if you have the MPI library.])],[$1])
+        :
+fi
+])dnl AX_MPI
