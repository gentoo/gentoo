#Created by Quincy Fleming
#Disables git program as it will just result in fatal error during build (won't stop the build though. just annoying)
#Also, this removes enabling of LTO by default and allows the user to choose wether or not they want LTO support via USE flag
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,22 +11,6 @@
   set(X11WL ON)
 endif()
 
-execute_process( # save the current branch to GIT_BRANCH
-  COMMAND git rev-parse --abbrev-ref HEAD
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
-  OUTPUT_VARIABLE GIT_BRANCH
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
-execute_process( # save the current commit hash to GIT_COMMIT_HASH
-  COMMAND git log -1 --format=%h
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
-  OUTPUT_VARIABLE GIT_COMMIT_HASH
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
-add_definitions(-DGIT_COMMIT_HASH="${GIT_COMMIT_HASH}")
-add_definitions(-DGIT_BRANCH="${GIT_BRANCH}")
 add_definitions(-DCLIPBOARD_VERSION="${PROJECT_VERSION}")
 
 if (MSVC)
@@ -84,17 +68,6 @@
 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${LIB_LOCATION})
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${BIN_LOCATION})
 
-function(enable_lto this_target)
-include(CheckIPOSupported)
-check_ipo_supported(RESULT lto_supported)
-if(lto_supported AND NOT NO_LTO)
-  set_property(TARGET ${this_target} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
-  if(CMAKE_COMPILER_IS_GNUCXX)
-    list(APPEND CMAKE_CXX_COMPILE_OPTIONS_IPO "-flto=auto") # set the thread amount to what is available on the CPU
-  endif()
-endif()
-endfunction()
-
 add_subdirectory(src/gui)
 
 find_package(X11)
--- a/src/cb/CMakeLists.txt
+++ b/src/cb/CMakeLists.txt
@@ -5,8 +5,6 @@
   src/themes.cpp
 )
 
-enable_lto(cb)
-
 target_link_libraries(cb gui)
 
 if(WIN32)
--- a/src/cbwayland/CMakeLists.txt
+++ b/src/cbwayland/CMakeLists.txt
@@ -60,8 +60,6 @@
 )
 add_dependencies(cbwayland cbwayland_generatedheaders)
 
-enable_lto(cbwayland)
-
 target_link_libraries(cbwayland
   ${WAYLAND_CLIENT_LIBRARIES}
   gui
--- a/src/cbx11/CMakeLists.txt
+++ b/src/cbx11/CMakeLists.txt
@@ -7,8 +7,6 @@
   gui
 )
 
-enable_lto(cbx11)
-
 target_include_directories(cbx11 PRIVATE ${X11_INCLUDE_DIR})
 
 install(TARGETS cbx11 LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
