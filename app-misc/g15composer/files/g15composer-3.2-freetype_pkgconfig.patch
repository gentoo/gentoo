--- g15composer-3.2/configure.in
+++ g15composer-3.2/configure.in
@@ -14,24 +14,24 @@
 AC_PROG_YACC
 
 # Checks for --enable args
-AC_MSG_CHECKING(whether to enable FreeType2 support)
-AC_ARG_ENABLE(ttf, [  --enable-ttf               enable FreeType2 support],
-        if [[[ "$enableval" = "yes" ]]]; then
-		AC_CHECK_LIB([g15render], [g15r_ttfLoad],
-	                AC_DEFINE(TTF_SUPPORT, [1], [Define to 1 to enable FreeType2 support])
-        	        CFLAGS="$CFLAGS `freetype-config --cflags`"
-        	        CXXFLAGS="$CXXFLAGS `freetype-config --cflags`"
-        	        FTLIB="-lfreetype"
-	                ttf_support="yes",
-			AC_MSG_ERROR(["libg15render does not support ttf functions. please reconfigure with --enable-ttf"])
-			ttf_support="no"
-		)
-        else
-                ttf_support="no"
-        fi,
-        ttf_support="no"
+AC_ARG_ENABLE(ttf, [  --enable-ttf               enable FreeType2 support],,enable_ttf="no")
+AS_IF([test "x$enable_ttf" = "xyes"], [
+	PKG_PROG_PKG_CONFIG
+	PKG_CHECK_MODULES(FREETYPE, freetype2,
+		[
+			CFLAGS="$CFLAGS $FREETYPE_CFLAGS"
+			CXXFLAGS="$CXXFLAGS $FREETYPE_CFLAGS"
+			FTLIB="$FREETYPE_LIBS"
+		],
+		AC_MSG_ERROR([Cannot find freetype2])
+	)
+	AC_CHECK_LIB([g15render], [g15r_ttfLoad],
+		AC_DEFINE(TTF_SUPPORT, [1], [Define to 1 to enable FreeType2 support]),
+		AC_MSG_ERROR(["libg15render does not support ttf functions. please reconfigure with --enable-ttf"])
+	)
+],
+	AC_MSG_RESULT(No Freetype is being used)
 )
-AC_MSG_RESULT($ttf_support)
 
 # Checks for libraries.
 AC_CHECK_LIB([g15daemon_client], [g15_send], ,AC_MSG_ERROR(["libg15daemon_client not found. please install it"]))
