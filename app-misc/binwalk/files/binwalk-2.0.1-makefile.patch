Don't build python via the makefile and fix parallel make jobs.

--- binwalk-2.0.1/Makefile.in
+++ binwalk-2.0.1/Makefile.in
@@ -33,21 +33,20 @@
 	$(PYTHON) ./setup.py install $(PREFIX)
 
 build:
-	if [ "$(BUILD_C_LIBS)" -eq "1" ]; then make -C $(SRC_C_DIR); fi
-	if [ "$(BUILD_BUNDLES)" -eq "1" ]; then make -C $(SRC_BUNDLES_DIR); fi
-	$(PYTHON) ./setup.py build
+	if [ "$(BUILD_C_LIBS)" -eq "1" ]; then $(MAKE) -C $(SRC_C_DIR); fi
+	if [ "$(BUILD_BUNDLES)" -eq "1" ]; then $(MAKE) -C $(SRC_BUNDLES_DIR); fi
 
 deps:
 	./deps.sh
 
 clean:
-	if [ "$(BUILD_C_LIBS)" -eq "1" ]; then make -C $(SRC_C_DIR) clean; fi
-	if [ "$(BUILD_BUNDLES)" -eq "1" ]; then make -C $(SRC_BUNDLES_DIR) clean; fi
+	if [ "$(BUILD_C_LIBS)" -eq "1" ]; then $(MAKE) -C $(SRC_C_DIR) clean; fi
+	if [ "$(BUILD_BUNDLES)" -eq "1" ]; then $(MAKE) -C $(SRC_BUNDLES_DIR) clean; fi
 	$(PYTHON) ./setup.py clean
 
 distclean: clean
-	if [ "$(BUILD_C_LIBS)" -eq "1" ]; then make -C $(SRC_C_DIR) distclean; fi
-	if [ "$(BUILD_BUNDLES)" -eq "1" ]; then make -C $(SRC_BUNDLES_DIR) distclean; fi
+	if [ "$(BUILD_C_LIBS)" -eq "1" ]; then $(MAKE) -C $(SRC_C_DIR) distclean; fi
+	if [ "$(BUILD_BUNDLES)" -eq "1" ]; then $(MAKE) -C $(SRC_BUNDLES_DIR) distclean; fi
 	rm -rf Makefile config.* *.cache
 
 uninstall:
--- binwalk-2.0.1/src/C/Makefile
+++ binwalk-2.0.1/src/C/Makefile
@@ -3,9 +3,9 @@
 .PHONY: all clean_libs clean distclean
 
 all:
-	make -C miniz
+	$(MAKE) -C miniz
 	cp miniz/*.$(SOEXT) $(LIB_DIR)
-	make -C compress
+	$(MAKE) -C compress
 	cp compress/*.$(SOEXT) $(LIB_DIR)
 
 clean_libs:
@@ -13,10 +13,10 @@
 	rm -f $(LIB_DIR)/libcompress42.$(SOEXT)
 
 clean: clean_libs
-	make -C miniz clean
-	make -C compress clean
+	$(MAKE) -C miniz clean
+	$(MAKE) -C compress clean
 
 distclean: clean_libs
-	make -C miniz distclean
-	make -C compress distclean
+	$(MAKE) -C miniz distclean
+	$(MAKE) -C compress distclean
 
