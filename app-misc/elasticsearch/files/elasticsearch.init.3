#!/sbin/openrc-run

name="Elasticsearch"
description="Elasticsearch Server"

ES_INSTANCE=${SVCNAME#*.}

if [ -n "${ES_INSTANCE}" ] && [ ${SVCNAME} != "elasticsearch" ]; then
	ES_BASE_PATH="/var/lib/elasticsearch/${ES_INSTANCE}"
	CONF_DIR="/etc/elasticsearch/${ES_INSTANCE}"
	LOG_DIR="/var/log/elasticsearch/${ES_INSTANCE}"
else
	ES_BASE_PATH="/var/lib/elasticsearch/_default"
	CONF_DIR="/etc/elasticsearch"
	LOG_DIR="/var/log/elasticsearch/_default"
fi

ES_HOME=${ES_HOME:="/usr/share/elasticsearch"}
ES_USER=${ES_USER:="elasticsearch"}
ES_GROUP=${ES_GROUP:="elasticsearch"}
ES_STARTUP_SLEEP_TIME=${ES_STARTUP_TIME:=5}
MAX_OPEN_FILES=${MAX_OPEN_FILES:=65536}
MAX_MAP_COUNT=${MAX_MAP_COUNT:=262144}

DATA_DIR=${DATA_DIR:="${ES_BASE_PATH}/data"}

if [ -f "${CONF_DIR}/elasticsearch.in.sh" ]; then
    ES_INCLUDE="${CONF_DIR}/elasticsearch.in.sh"
fi

export ES_INCLUDE
export JAVA_HOME
export JAVA_OPTS
export ES_JVM_OPTIONS
export ES_JAVA_OPTS
export ES_STARTUP_SLEEP_TIME
export ES_PATH_CONF="${CONF_DIR}"

pidfile="/run/elasticsearch/${RC_SVCNAME}.pid"

command="/usr/share/elasticsearch/bin/elasticsearch"
command_args="--daemonize --pidfile=${pidfile} -Epath.logs=${LOG_DIR} -Epath.data=${DATA_DIR}"
command_user="${ES_USER}:${ES_GROUP}"
required_files="${CONF_DIR}/elasticsearch.yml"
retry="TERM/30/KILL/30"

depend() {
	use net
}

start_pre() {
	if [ -n "${MAX_MAP_COUNT}" -a -f /proc/sys/vm/max_map_count ]; then
		sysctl -q -w vm.max_map_count=${MAX_MAP_COUNT}
	fi

	checkpath -d -o "${ES_USER}:${ES_GROUP}" -m750 "/var/lib/elasticsearch"
	checkpath -d -o "${ES_USER}:${ES_GROUP}" -m750 "/var/log/elasticsearch"
	checkpath -d -o "${ES_USER}:${ES_GROUP}" -m750 "/run/elasticsearch"
	checkpath -d -o "${ES_USER}:${ES_GROUP}" -m750 "${ES_BASE_PATH}"
	checkpath -d -o "${ES_USER}:${ES_GROUP}" -m750 "${LOG_DIR}"
}
