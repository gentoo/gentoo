--- wit-2.30a/Makefile
+++ wit-2.30a/Makefile
@@ -190,8 +190,8 @@
 endif
 
 # lib summary
-LIB_LIST	+= libbz2 lzma
-LIB_OBJECTS	+= $(LIBBZ2_OBJ) $(LZMA_OBJ)
+LIB_LIST	+= lzma
+LIB_OBJECTS	+= $(LZMA_OBJ)
 RM_FILES	+= $(foreach l,$(LIB_LIST),src/$(l)/*.{d,o})
 
 
@@ -273,10 +274,8 @@
 DEFINES1	+= -D_LZMA_PROB32=1	# LZMA option
 DEFINES		=  $(strip $(DEFINES1) $(MODE) $(XDEF))
 
-CFLAGS		+= -fomit-frame-pointer -fno-strict-aliasing -funroll-loops
 CFLAGS		+= -Wall -Wno-parentheses -Wno-unused-function
-#CFLAGS		+= -O3 -Isrc/libwbfs -Isrc/lzma -Isrc -I$(UI) -I. -Iwork
-CFLAGS		+= -O3 -Isrc/libwbfs -Isrc -I$(UI) -I. -Iwork
+CFLAGS		+= -Isrc/libwbfs -Isrc -I$(UI) -I. -Iwork
 ifeq ($(SYSTEM),mac)
  CFLAGS		+= -I/usr/local/include
 endif
@@ -291,7 +290,7 @@
 ifeq ($(HAVE_ZLIB),1)
  LIBS		+= -lz
 endif
-LIBS		+= $(XLIBS)
+LIBS		+= $(XLIBS) -lbz2
 
 DISTRIB_RM	= ./wit-v$(VERSION)-r
 DISTRIB_BASE	= wit-v$(VERSION)-r$(REVISION_NEXT)
@@ -344,71 +343,60 @@
 # general rules
 
 $(ALL_TOOLS_X): %: %.o $(ALL_OBJECTS) $(TOBJ_ALL) Makefile | $(HELPER_TOOLS)
-	@printf "$(LOGFORMAT)" tool "$@" "$(MODE) $(TOPT_$@) $(TOBJ_$@)"
-	@$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
+	$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
 		$(ALL_OBJECTS) $(TOBJ_$@) $(LIBS) $(TOPT_$@) -o $@
-	@if test -f $@.exe; then $(STRIP) $@.exe; else $(STRIP) $@; fi
 
-	@mkdir -p bin/$(SYSTEM) bin/$(SYSTEM)/debug
-	@if test -s $(MODE_FILE) && grep -Fq -e -DDEBUG $(MODE_FILE); \
+	mkdir -p bin/$(SYSTEM) bin/$(SYSTEM)/debug
+	if test -s $(MODE_FILE) && grep -Fq -e -DDEBUG $(MODE_FILE); \
 		then cp -p $@ bin/$(SYSTEM)/debug/; \
 		else cp -p $@ bin/; cp -p $@ bin/$(SYSTEM)/; fi
 
 #--------------------------
 
 $(HELPER_TOOLS): %: %.o $(ALL_OBJECTS) $(UI_TABS) Makefile
-	@printf "$(LOGFORMAT)" helper "$@ $(TOBJ_$@)" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
+	$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
 		$(ALL_OBJECTS) $(TOBJ_$@) $(LIBS) -o $@
 
 #--------------------------
 
 $(WDF_LINKS): wdf
-	@printf "$(LOGFORMAT)" "link" "wdf -> $@" ""
-	@ln -f wdf "$@"
+	ln -f wdf "$@"
 
 #--------------------------
 
 $(UI_OBJECTS): %.o: %.c ui-%.c ui-%.h version.h Makefile
-	@printf "$(LOGFORMAT)" +object "$@" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
 
 #--------------------------
 
 $(C_OBJECTS): %.o: %.c version.h Makefile $(TEXT_FILES)
-	@printf "$(LOGFORMAT)" object "$@" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
 
 #--------------------------
 
 $(ASM_OBJECTS): %.o: %.S Makefile
-	@printf "$(LOGFORMAT)" asm "$@" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
 
 #--------------------------
 
 $(SETUP_FILES): templates.sed $(SETUP_DIR)/$@
-	@printf "$(LOGFORMAT)" create "$@" ""
-	@chmod 775 $(GEN_TEMPLATE)
-	@$(GEN_TEMPLATE) $@
+	chmod 775 $(GEN_TEMPLATE)
+	$(GEN_TEMPLATE) $@
 
 #--------------------------
 
 $(TEXT_FILES): $(GEN_TEXT_FILE) $(TEXT_DIR)/$@
-	@printf "$(LOGFORMAT)" text "$@" ""
-	@chmod 775 $(GEN_TEXT_FILE)
-	@$(GEN_TEXT_FILE) $(TEXT_DIR) $@
+	chmod 775 $(GEN_TEXT_FILE)
+	$(GEN_TEXT_FILE) $(TEXT_DIR) $@
 
 #--------------------------
 
 $(UI_FILES): gen-ui.c tab-ui.c ui.h $(UI_TABS) | gen-ui
-	@printf "$(LOGFORMAT)" run gen-ui ""
-	@./gen-ui
+	./gen-ui
 
 .PHONY : ui
 ui : gen-ui
-	@printf "$(LOGFORMAT)" run gen-ui ""
-	@./gen-ui
+	./gen-ui
 
 #
 ###############################################################################
