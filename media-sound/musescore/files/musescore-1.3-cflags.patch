--- mscore-1.3/mscore/al/CMakeLists.txt
+++ mscore-1.3/mscore/al/CMakeLists.txt
@@ -42,7 +42,7 @@
 
 set_source_files_properties(
    dsp.cpp xml.cpp tempo.cpp sig.cpp pos.cpp fraction.cpp
-   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch"
    )
 
 set_source_files_properties(dspSSE.cpp
--- mscore-1.3/mscore/awl/CMakeLists.txt
+++ mscore-1.3/mscore/awl/CMakeLists.txt
@@ -61,7 +61,7 @@
 
 set_target_properties( awl
    PROPERTIES COMPILE_FLAGS
-      "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+      "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch"
    )
 
 ADD_DEPENDENCIES(awl mops1)
--- mscore-1.3/mscore/CMakeLists.txt
+++ mscore-1.3/mscore/CMakeLists.txt
@@ -257,9 +257,6 @@
    WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
    )
 
-set(CMAKE_CXX_FLAGS_DEBUG   "-g")
-set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG")
-
 if (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
       if (MINGW)
             set(FLAGS -DQT_DEBUG -DQT_DLL)
@@ -272,9 +269,9 @@
       endif (MINGW)
 else (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
       if (MINGW)
-            set(FLAGS -O2 -DNDEBUG -DQT_DLL -DQT_NO_DEBUG)
+            set(FLAGS -DNDEBUG -DQT_DLL -DQT_NO_DEBUG)
       else (MINGW)
-            set(FLAGS -O2 -DNDEBUG -DQT_NO_DEBUG)
+            set(FLAGS -DNDEBUG -DQT_NO_DEBUG)
       endif (MINGW)
 endif (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
 
@@ -284,7 +281,7 @@
 add_custom_command(
  OUTPUT ${PROJECT_BINARY_DIR}/all.h.gch
  COMMAND ${CMAKE_CXX_COMPILER}
-   -x c++-header -g  ${FLAGS}
+   -x c++-header ${FLAGS}
    -I${QT_HEADERS_DIR}
    -o all.h.gch all.h
  DEPENDS ${PROJECT_BINARY_DIR}/all.h
--- mscore-1.3/mscore/fluid/CMakeLists.txt
+++ mscore-1.3/mscore/fluid/CMakeLists.txt
@@ -28,7 +28,7 @@
   )
 
 set_target_properties( fluid
-   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch"
    )
 
 ADD_DEPENDENCIES(fluid mops1)
--- mscore-1.3/mscore/mscore/CMakeLists.txt
+++ mscore-1.3/mscore/mscore/CMakeLists.txt
@@ -199,7 +199,7 @@
    if(CMAKE_BUILD_TYPE MATCHES "DEBUG")
      set_target_properties( mscore
         PROPERTIES
-           COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch ${QT_DEFINITIONS} -DQT_SVG_LIB -DQT_GUI_LIB -DQT_XML_LIB -DQT_CORE_LIB -DQT_SCRIPT_LIB"
+           COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch ${QT_DEFINITIONS} -DQT_SVG_LIB -DQT_GUI_LIB -DQT_XML_LIB -DQT_CORE_LIB -DQT_SCRIPT_LIB"
            LINK_FLAGS "${PROJECT_BINARY_DIR}/resfile.o -mwindows -mconsole -L ${CROSSQT}/lib"
         )
    else(CMAKE_BUILD_TYPE MATCHES "DEBUG")
--- mscore-1.3/mscore/ofqf/CMakeLists.txt
+++ mscore-1.3/mscore/ofqf/CMakeLists.txt
@@ -34,8 +34,8 @@
    )
 
 set_target_properties( ofqf
-   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch"
    )
 
 ADD_DEPENDENCIES(ofqf mops1)
-ADD_DEPENDENCIES(ofqf mops2)
\ No newline at end of file
+ADD_DEPENDENCIES(ofqf mops2)
--- mscore-1.3/mscore/osdabzip/CMakeLists.txt
+++ mscore-1.3/mscore/osdabzip/CMakeLists.txt
@@ -29,7 +29,7 @@
   )
 
 set_target_properties( osdabzip
-   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch"
    )
 
 ADD_DEPENDENCIES(osdabzip mops1)
--- mscore-1.3/mscore/singleapp/src/CMakeLists.txt
+++ mscore-1.3/mscore/singleapp/src/CMakeLists.txt
@@ -35,7 +35,7 @@
   )
 
 set_target_properties( qtsingleapp
-   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -g -Wall -Wextra -Winvalid-pch"
+   PROPERTIES COMPILE_FLAGS "-include ${PROJECT_BINARY_DIR}/all.h -Wall -Wextra -Winvalid-pch"
    )
 
 ADD_DEPENDENCIES(qtsingleapp mops1)
