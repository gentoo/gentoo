Description: Wrap boost includes to avoid FTBFS due to qt4 moc.
Author: Robert Bruce Park <robert.park@canonical.com>
Bug-Debian: https://bugs.debian.org/795144
Last-Update: <2015-04-13>

--- a/src/core/boundfuturewatcher.h
+++ b/src/core/boundfuturewatcher.h
@@ -3,7 +3,9 @@
 
 #include <QFutureWatcher>
 
+#ifndef Q_MOC_RUN
 #include <boost/noncopyable.hpp>
+#endif
 
 template <typename T, typename D>
 class BoundFutureWatcher : public QFutureWatcher<T>, boost::noncopyable {
--- a/src/core/database.cpp
+++ b/src/core/database.cpp
@@ -23,7 +23,9 @@
 #include "core/logging.h"
 #include "core/taskmanager.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/scope_exit.hpp>
+#endif
 
 #include <QCoreApplication>
 #include <QDir>
--- a/src/core/macglobalshortcutbackend.mm
+++ b/src/core/macglobalshortcutbackend.mm
@@ -22,7 +22,9 @@
 #include "mac_startup.h"
 #import "mac_utilities.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/noncopyable.hpp>
+#endif
 
 #include <QAction>
 #include <QList>
--- a/src/core/mergedproxymodel.h
+++ b/src/core/mergedproxymodel.h
@@ -25,10 +25,12 @@
 using std::placeholders::_1;
 using std::placeholders::_2;
 
+#ifndef Q_MOC_RUN
 #include <boost/multi_index_container.hpp>
 #include <boost/multi_index/member.hpp>
 #include <boost/multi_index/ordered_index.hpp>
 #include <boost/multi_index/hashed_index.hpp>
+#endif
 
 using boost::multi_index::multi_index_container;
 using boost::multi_index::indexed_by;
--- a/src/core/scopedtransaction.h
+++ b/src/core/scopedtransaction.h
@@ -18,7 +18,9 @@
 #ifndef SCOPEDTRANSACTION_H
 #define SCOPEDTRANSACTION_H
 
+#ifndef Q_MOC_RUN
 #include <boost/noncopyable.hpp>
+#endif
 
 class QSqlDatabase;
 
--- a/src/core/signalchecker.h
+++ b/src/core/signalchecker.h
@@ -20,8 +20,10 @@
 
 #include <glib-object.h>
 
+#ifndef Q_MOC_RUN
 #include <boost/function_types/function_arity.hpp>
 #include <boost/typeof/typeof.hpp>
+#endif
 
 // Do not call this directly, use CHECKED_GCONNECT instead.
 bool CheckedGConnect(
--- a/src/devices/macdevicelister.mm
+++ b/src/devices/macdevicelister.mm
@@ -38,7 +38,9 @@
 #import <Foundation/NSString.h>
 #import <Foundation/NSURL.h>
 
+#ifndef Q_MOC_RUN
 #include <boost/scope_exit.hpp>
+#endif
 
 #include <libmtp.h>
 
--- a/src/library/groupbydialog.h
+++ b/src/library/groupbydialog.h
@@ -25,9 +25,11 @@
 using std::placeholders::_1;
 using std::placeholders::_2;
 
+#ifndef Q_MOC_RUN
 #include <boost/multi_index_container.hpp>
 #include <boost/multi_index/member.hpp>
 #include <boost/multi_index/ordered_index.hpp>
+#endif
 
 #include "librarymodel.h"
 
--- a/tests/database_test.cpp
+++ b/tests/database_test.cpp
@@ -20,7 +20,9 @@
 
 #include "core/database.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/scoped_ptr.hpp>
+#endif
 
 #include <QtDebug>
 #include <QSqlQuery>
--- a/tests/librarybackend_test.cpp
+++ b/tests/librarybackend_test.cpp
@@ -23,7 +23,9 @@
 #include "core/song.h"
 #include "core/database.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/scoped_ptr.hpp>
+#endif
 
 #include <QFileInfo>
 #include <QSignalSpy>
--- a/tests/plsparser_test.cpp
+++ b/tests/plsparser_test.cpp
@@ -27,7 +27,9 @@
 #include <QUrl>
 #include <QtDebug>
 
+#ifndef Q_MOC_RUN
 #include <boost/shared_ptr.hpp>
+#endif
 
 using boost::shared_ptr;
 
--- a/tests/songloader_test.cpp
+++ b/tests/songloader_test.cpp
@@ -29,7 +29,10 @@
 #include <QSignalSpy>
 #include <QtDebug>
 
+#ifndef Q_MOC_RUN
 #include <boost/scoped_ptr.hpp>
+#endif
+
 #include <cstdlib>
 
 using ::testing::_;
--- a/tests/songplaylistitem_test.cpp
+++ b/tests/songplaylistitem_test.cpp
@@ -19,7 +19,10 @@
 #include "test_utils.h"
 
 #include <gtest/gtest.h>
+
+#ifndef Q_MOC_RUN
 #include <boost/scoped_ptr.hpp>
+#endif
 
 #include <QTemporaryFile>
 #include <QFileInfo>
--- a/tests/utilities_test.cpp
+++ b/tests/utilities_test.cpp
@@ -21,7 +21,9 @@
 
 #include "core/utilities.h"
 
+#ifndef Q_MOC_RUN
 #include <boost/scoped_ptr.hpp>
+#endif
 
 #include <QtDebug>
 
