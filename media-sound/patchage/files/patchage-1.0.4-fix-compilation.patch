diff --git a/src/JackDbusDriver.cpp b/src/JackDbusDriver.cpp
index 23c12f2..f49a522 100644
--- a/src/JackDbusDriver.cpp
+++ b/src/JackDbusDriver.cpp
@@ -24,6 +24,7 @@
 #include "SignalDirection.hpp"
 #include "make_jack_driver.hpp"
 #include "warnings.hpp"
+#include "AudioDriver.hpp"
 
 PATCHAGE_DISABLE_FMT_WARNINGS
 #include <fmt/core.h>
@@ -61,7 +62,7 @@ namespace {
 class JackDriver : public AudioDriver
 {
 public:
-  explicit JackDriver(ILog& log, EventSink emit_event);
+  explicit JackDriver(ILog& log, Driver::EventSink emit_event);
 
   JackDriver(const JackDriver&) = delete;
   JackDriver& operator=(const JackDriver&) = delete;
@@ -75,7 +76,7 @@ public:
   void attach(bool launch_daemon) override;
   void detach() override;
   bool is_attached() const override;
-  void refresh(const EventSink& sink) override;
+  void refresh(const Driver::EventSink& sink) override;
   bool connect(const PortID& tail_id, const PortID& head_id) override;
   bool disconnect(const PortID& tail_id, const PortID& head_id) override;
 
@@ -129,7 +130,7 @@ private:
   dbus_uint64_t _graph_version;
 };
 
-JackDriver::JackDriver(ILog& log, EventSink emit_event)
+JackDriver::JackDriver(ILog& log, Driver::EventSink emit_event)
   : AudioDriver{std::move(emit_event)}
   , _log(log)
   , _dbus_error()
@@ -584,7 +585,7 @@ JackDriver::is_attached() const
 }
 
 void
-JackDriver::refresh(const EventSink& sink)
+JackDriver::refresh(const Driver::EventSink& sink)
 {
   DBusMessage*    reply_ptr              = nullptr;
   DBusMessageIter iter                   = {};
