Respect user CXXFLAGS setting.

--- yoshimi-1.5.10/src/CMakeLists.txt
+++ yoshimi-1.5.10/src/CMakeLists.txt
@@ -302,27 +302,27 @@
 set (YOSHI_INCLUDES ${FLTK_INCLUDE_DIR})
 
 # set platform specific compiler flags
-if (BuildFor0ld_X86)
-    set (CMAKE_CXX_FLAGS ${BuildOptions_X86})
-else (BuildFor0ld_X86)
-    if (BuildForAMD_X86_64)
-        set (CMAKE_CXX_FLAGS ${BuildOptions_X86_64AMD})
-    else (BuildForAMD_X86_64)
-        if (BuildForCore2_X86_64)
-            set (CMAKE_CXX_FLAGS ${BuildOptions_X86_64Core2})
-        else (BuildForCore2_X86_64)
-            if (BuildForNEON)
-                set (CMAKE_CXX_FLAGS ${BuildOptions_NEON})
-            else (BuildForNEON)
-                if (BuildForThisCPU)
-                    set (CMAKE_CXX_FLAGS ${BuildOptionsThisCPU})
-                else (BuildForThisCPU)
-                    set (CMAKE_CXX_FLAGS ${BuildOptionsBasic})
-                endif (BuildForThisCPU)
-            endif (BuildForNEON)
-        endif (BuildForCore2_X86_64)
-    endif (BuildForAMD_X86_64)
-endif (BuildFor0ld_X86)
+#if (BuildFor0ld_X86)
+    #set (CMAKE_CXX_FLAGS ${BuildOptions_X86})
+#else (BuildFor0ld_X86)
+    #if (BuildForAMD_X86_64)
+        #set (CMAKE_CXX_FLAGS ${BuildOptions_X86_64AMD})
+    #else (BuildForAMD_X86_64)
+        #if (BuildForCore2_X86_64)
+            #set (CMAKE_CXX_FLAGS ${BuildOptions_X86_64Core2})
+        #else (BuildForCore2_X86_64)
+            #if (BuildForNEON)
+                #set (CMAKE_CXX_FLAGS ${BuildOptions_NEON})
+            #else (BuildForNEON)
+                #if (BuildForThisCPU)
+                    #set (CMAKE_CXX_FLAGS ${BuildOptionsThisCPU})
+                #else (BuildForThisCPU)
+                    #set (CMAKE_CXX_FLAGS ${BuildOptionsBasic})
+                #endif (BuildForThisCPU)
+            #endif (BuildForNEON)
+        #endif (BuildForCore2_X86_64)
+    #endif (BuildForAMD_X86_64)
+#endif (BuildFor0ld_X86)
 
 if (BuildForDebug)
     set (CMAKE_BUILD_TYPE "Debug")
@@ -330,8 +330,8 @@
     message (STATUS "DEBUG Build, flags: ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
 else (BuildForDebug)
     set (CMAKE_BUILD_TYPE "Release")
-    set (CMAKE_CXX_FLAGS_RELEASE ${BuildOptionsRelease})
-    message (STATUS "RELEASE Build, flags: ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
+    #set (CMAKE_CXX_FLAGS_RELEASE ${BuildOptionsRelease})
+    message (STATUS "RELEASE Build, flags: ${CMAKE_CXX_FLAGS}")
 endif (BuildForDebug)
 
 configure_file(
