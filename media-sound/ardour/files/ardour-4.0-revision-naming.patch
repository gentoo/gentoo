diff -rupN ardour-4.0-vanilla/wscript ardour-4.0/wscript
--- ardour-4.0-vanilla/wscript  2015-04-18 00:23:10.000000000 +0200
+++ ardour-4.0/wscript  2015-04-20 18:26:50.849812000 +0200
@@ -137,29 +137,29 @@ def fetch_tarball_revision ():
     if not os.path.exists ('libs/ardour/revision.cc'):
         print ('This tarball was not created correctly - it is missing libs/ardour/revision.cc')
         sys.exit (1)
-    with open('libs/ardour/revision.cc') as f:
-        content = f.readlines()
-        remove_punctuation_map = dict((ord(char), None) for char in '";')
-        return content[1].decode('utf-8').strip().split(' ')[7].translate (remove_punctuation_map)
-
-if os.path.isdir (os.path.join(os.getcwd(), '.git')):
-    rev = fetch_git_revision ()
-else:
-    rev = fetch_tarball_revision ()
+#    with open('libs/ardour/revision.cc') as f:
+#        content = f.readlines()
+#        remove_punctuation_map = dict((ord(char), None) for char in '";')
+#        return content[1].decode('utf-8').strip().split(' ')[7].translate (remove_punctuation_map)
+
+#if os.path.isdir (os.path.join(os.getcwd(), '.git')):
+#    rev = fetch_git_revision ()
+#else:
+#    rev = fetch_tarball_revision ()
 
 #
 # rev is now of the form MAJOR.MINOR[-rcX]-rev-commit
 # or, if right at the same rev as a release, MAJOR.MINOR[-rcX]
 #
 
-parts = rev.split ('.', 1)
-MAJOR = parts[0]
-other = parts[1].split('-', 1)
-MINOR = other[0]
-if len(other) > 1:
-    MICRO = other[1].rsplit('-',1)[0].replace('-','.')
-else:
-    MICRO = '0'
+#parts = rev.split ('.', 1)
+MAJOR = '4'
+#other = parts[1].split('-', 1)
+MINOR = '0'
+#if len(other) > 1:
+#    MICRO = other[1].rsplit('-',1)[0].replace('-','.')
+#else:
+MICRO = 'gentoo'
 
 V = MAJOR + '.' + MINOR + '.' + MICRO
 VERSION = V
@@ -216,16 +216,16 @@ def fetch_gcc_version (CC):
     return version
 
 def create_stored_revision():
-    rev = ""
-    if os.path.exists('.git'):
-        rev = fetch_git_revision();
-        print("Git version: " + rev + "\n")
-    elif os.path.exists('libs/ardour/revision.cc'):
-        print("Using packaged revision")
-        return
-    else:
-        print("Missing libs/ardour/revision.cc.  Blame the packager.")
-        sys.exit(-1)
+    rev = "4.0-gentoo"
+#    if os.path.exists('.git'):
+#        rev = fetch_git_revision();
+#        print("Git version: " + rev + "\n")
+#    elif os.path.exists('libs/ardour/revision.cc'):
+#        print("Using packaged revision")
+#        return
+#    else:
+#        print("Missing libs/ardour/revision.cc.  Blame the packager.")
+#        sys.exit(-1)
 
     try:
         #

