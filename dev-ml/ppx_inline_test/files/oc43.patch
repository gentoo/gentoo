diff -uNr ppx_inline_test-113.33.00/_oasis ppx_inline_test-113.33.00+4.03/_oasis
--- ppx_inline_test-113.33.00/_oasis	2016-03-09 16:44:54.000000000 +0100
+++ ppx_inline_test-113.33.00+4.03/_oasis	2016-03-22 15:13:50.000000000 +0100
@@ -1,8 +1,8 @@
 OASISFormat:      0.4
-OCamlVersion:     >= 4.02.3
+OCamlVersion:     >= 4.03.0
 FindlibVersion:   >= 1.3.2
 Name:             ppx_inline_test
-Version:          113.33.00
+Version:          113.33.00+4.03
 Synopsis:         Syntax extension for writing in-line tests in ocaml code
 Authors:          Jane Street Group, LLC <opensource@janestreet.com>
 Copyrights:       (C) 2015-2016 Jane Street Group LLC <opensource@janestreet.com>
diff -uNr ppx_inline_test-113.33.00/opam ppx_inline_test-113.33.00+4.03/opam
--- ppx_inline_test-113.33.00/opam	2016-03-18 12:08:01.000000000 +0100
+++ ppx_inline_test-113.33.00+4.03/opam	2016-03-22 17:51:37.000000000 +0100
@@ -16,4 +16,4 @@
   "ppx_driver"
   "ppx_tools"  {>= "0.99.3"}
 ]
-available: [ ocaml-version >= "4.02.3" ]
+available: [ ocaml-version >= "4.03.0" ]
diff -uNr ppx_inline_test-113.33.00/src/ppx_inline_test.ml ppx_inline_test-113.33.00+4.03/src/ppx_inline_test.ml
--- ppx_inline_test-113.33.00/src/ppx_inline_test.ml	2016-03-09 16:44:54.000000000 +0100
+++ ppx_inline_test-113.33.00+4.03/src/ppx_inline_test.ml	2016-03-22 15:13:50.000000000 +0100
@@ -96,18 +96,18 @@
 
 let expand_test ~loc ~path:_ id e =
   assert_enabled loc;
-  apply_to_descr "test" ~loc (Some e) id (pexp_fun ~loc "" None (punit ~loc) e)
+  apply_to_descr "test" ~loc (Some e) id (pexp_fun ~loc Nolabel None (punit ~loc) e)
 ;;
 
 let expand_test_unit ~loc ~path:_ id e =
   assert_enabled loc;
-  apply_to_descr "test_unit" ~loc (Some e) id (pexp_fun ~loc "" None (punit ~loc) e)
+  apply_to_descr "test_unit" ~loc (Some e) id (pexp_fun ~loc Nolabel None (punit ~loc) e)
 ;;
 
 let expand_test_module ~loc ~path:_ id m =
   assert_enabled loc;
   apply_to_descr "test_module" ~loc ~inner_loc:m.pmod_loc None id
-    (pexp_fun ~loc "" None (punit ~loc)
+    (pexp_fun ~loc Nolabel None (punit ~loc)
        (pexp_letmodule ~loc (Located.mk ~loc "M")
           m
           (eunit ~loc)))
@@ -120,9 +120,8 @@
     pstr ((
       pstr_value nonrecursive (
         value_binding
-          ~pat:(map (pstring __) ~f:(fun f x -> f (Some x)))
+          ~pat:(alt_option (pstring __) ppat_any)
           ~expr ^:: nil)
-      ||| map (pstr_eval expr nil) ~f:(fun f -> f None)
     ) ^:: nil)
 
   let test =
