diff --git a/src/setuptools_scm/hg.py b/src/setuptools_scm/hg.py
index 972f493..8fedd68 100644
--- a/src/setuptools_scm/hg.py
+++ b/src/setuptools_scm/hg.py
@@ -13,7 +13,7 @@ def _hg_tagdist_normalize_tagcommit(config, tag, dist, node, branch):
         "(branch(.)"  # look for revisions in this branch only
         " and tag({tag!r})::."  # after the last tag
         # ignore commits that only modify .hgtags and nothing else:
-        " and (merge() or file('re:^(?!\.hgtags).*$'))"
+        " and (merge() or file('re:^(?!\\.hgtags).*$'))"
         " and not tag({tag!r}))"  # ignore the tagged commit itself
     ).format(
         tag=tag
@@ -70,7 +70,9 @@ def parse(root, config=None):
 
 def get_latest_normalizable_tag(root):
     # Gets all tags containing a '.' (see #229) from oldest to newest
-    cmd = ["hg", "log", "-r", "ancestors(.) and tag('re:\.')", "--template", "{tags}\n"]
+    cmd = [
+        "hg", "log", "-r", "ancestors(.) and tag('re:\\.')", "--template", "{tags}\n"
+    ]
     outlines = do(cmd, root).split()
     if not outlines:
         return "null"
diff --git a/testing/test_functions.py b/testing/test_functions.py
index 14d8961..c3d78b6 100644
--- a/testing/test_functions.py
+++ b/testing/test_functions.py
@@ -8,6 +8,8 @@ from setuptools_scm.version import (
     format_version,
     tag_to_version,
 )
+
+from setuptools_scm.config import Configuration
 from setuptools_scm.utils import has_command
 
 PY3 = sys.version_info > (2,)
@@ -33,12 +35,14 @@ def test_next_tag(tag, expected):
     assert guess_next_version(version) == expected
 
 
+c = Configuration()
+
 VERSIONS = {
-    "exact": meta("1.1", distance=None, dirty=False),
-    "zerodistance": meta("1.1", distance=0, dirty=False),
-    "dirty": meta("1.1", distance=None, dirty=True),
-    "distance": meta("1.1", distance=3, dirty=False),
-    "distancedirty": meta("1.1", distance=3, dirty=True),
+    "exact": meta("1.1", distance=None, dirty=False, config=c),
+    "zerodistance": meta("1.1", distance=0, dirty=False, config=c),
+    "dirty": meta("1.1", distance=None, dirty=True, config=c),
+    "distance": meta("1.1", distance=3, dirty=False, config=c),
+    "distancedirty": meta("1.1", distance=3, dirty=True, config=c),
 }
 
 
diff --git a/testing/test_version.py b/testing/test_version.py
index be940ef..a287a0d 100644
--- a/testing/test_version.py
+++ b/testing/test_version.py
@@ -3,33 +3,36 @@ from setuptools_scm.config import Configuration
 from setuptools_scm.version import meta, simplified_semver_version, tags_to_versions
 
 
+c = Configuration()
+
+
 @pytest.mark.parametrize(
     "version, expected_next",
     [
-        pytest.param(meta("1.0.0"), "1.0.0", id="exact"),
-        pytest.param(meta("1.0"), "1.0.0", id="short_tag"),
+        pytest.param(meta("1.0.0", config=c), "1.0.0", id="exact"),
+        pytest.param(meta("1.0", config=c), "1.0.0", id="short_tag"),
         pytest.param(
-            meta("1.0.0", distance=2, branch="default"),
+            meta("1.0.0", distance=2, branch="default", config=c),
             "1.0.1.dev2",
             id="normal_branch",
         ),
         pytest.param(
-            meta("1.0", distance=2, branch="default"),
+            meta("1.0", distance=2, branch="default", config=c),
             "1.0.1.dev2",
             id="normal_branch_short_tag",
         ),
         pytest.param(
-            meta("1.0.0", distance=2, branch="feature"),
+            meta("1.0.0", distance=2, branch="feature", config=c),
             "1.1.0.dev2",
             id="feature_branch",
         ),
         pytest.param(
-            meta("1.0", distance=2, branch="feature"),
+            meta("1.0", distance=2, branch="feature", config=c),
             "1.1.0.dev2",
             id="feature_branch_short_tag",
         ),
         pytest.param(
-            meta("1.0.0", distance=2, branch="features/test"),
+            meta("1.0.0", distance=2, branch="features/test", config=c),
             "1.1.0.dev2",
             id="feature_in_branch",
         ),
