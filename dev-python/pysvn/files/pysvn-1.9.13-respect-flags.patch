From 9f1d90d7b6ece865af2a23fa412e205cedba4fd4 Mon Sep 17 00:00:00 2001
From: Sebastian Pipping <sebastian@pipping.org>
Date: Sat, 3 Jul 2021 11:48:09 +0200
Subject: [PATCH] Respect CC, CXX, LDFLAGS

---
 Patches/test_proplist.mak |  4 ++--
 Source/setup_configure.py | 24 ++++++++++--------------
 2 files changed, 12 insertions(+), 16 deletions(-)

diff --git a/Patches/test_proplist.mak b/Patches/test_proplist.mak
index 9d9a58a..02e7a68 100644
--- a/Patches/test_proplist.mak
+++ b/Patches/test_proplist.mak
@@ -2,7 +2,7 @@ CCCFLAGS=-fPIC -fexceptions -frtti -I$(SVN_INC) -I$(APR_INC)
 LDLIBS=-L$(SVN_LIB) -lsvn_client-1 -lapr-0
 
 test_proplist: test_proplist.o
-	g++ -g -o test_proplist test_proplist.o $(LDLIBS)
+	$(CXX) $(LDFLAGS) -o test_proplist test_proplist.o $(LDLIBS)
 
 test_proplist.o: test_proplist.cpp
-	g++ -c -g $(CCCFLAGS) -o $@ $<
+	$(CXX) -c $(LDFLAGS) $(CCCFLAGS) -o $@ $<
diff --git a/Source/setup_configure.py b/Source/setup_configure.py
index 72c2c8e..fbe6936 100644
--- a/Source/setup_configure.py
+++ b/Source/setup_configure.py
@@ -891,8 +891,8 @@ class CompilerGCC(Compiler):
     def __init__( self, setup ):
         Compiler.__init__( self, setup )
 
-        self._addVar( 'CCC',            'g++' )
-        self._addVar( 'CC',             'gcc' )
+        self._addVar( 'CCC',            '$(CXX)' )
+        self._addVar( 'CC',             '$(CC)' )
 
     def getPythonExtensionFileExt( self ):
         return '.so'
@@ -1034,8 +1034,8 @@ class MacOsxCompilerGCC(CompilerGCC):
         else:
             arch_options = ''
 
-        self._addVar( 'CCC',            'g++ %s -mmacosx-version-min=%s' % (arch_options, self.macosx_deployment_target) )
-        self._addVar( 'CC',             'gcc %s -mmacosx-version-min=%s' % (arch_options, self.macosx_deployment_target) )
+        self._addVar( 'CCC',            '$(CXX) %s -mmacosx-version-min=%s' % (arch_options, self.macosx_deployment_target) )
+        self._addVar( 'CC',             '$(CC) %s -mmacosx-version-min=%s' % (arch_options, self.macosx_deployment_target) )
 
         self._find_paths_pycxx_dir = [
                         '../Import/pycxx-%d.%d.%d' % min_pycxx_version,
@@ -1101,11 +1101,10 @@ class MacOsxCompilerGCC(CompilerGCC):
 
     def setupUtilities( self ):
         self._addVar( 'CCCFLAGS',
-                                        '-g  '
                                         '-Wall -fPIC -fexceptions -frtti '
                                         '-I. -I%(APR_INC)s -I%(APU_INC)s -I%(SVN_INC)s '
                                         '-D%(DEBUG)s' )
-        self._addVar( 'LDEXE',          '%(CCC)s -g' )
+        self._addVar( 'LDEXE',          '%(CCC)s $(LDFLAGS)' )
 
     def setupPySvn( self ):
         # Support building in a virtualenv.
@@ -1129,7 +1128,6 @@ class MacOsxCompilerGCC(CompilerGCC):
         self._addVar( 'PYTHON_INC',         distutils.sysconfig.get_python_inc() )
 
         py_cflags_list = [
-                    '-g',
                     '-Wall -fPIC',
                     '-I. -I%(APR_INC)s -I%(APU_INC)s -I%(SVN_INC)s',
                     '-DPYCXX_PYTHON_2TO3 -I%(PYCXX)s -I%(PYCXX_SRC)s -I%(PYTHON_INC)s',
@@ -1159,7 +1157,7 @@ class MacOsxCompilerGCC(CompilerGCC):
 
         if self.options.hasOption( '--link-python-framework-via-dynamic-lookup' ):
             # preferred link method on homebrew for pysvn
-            self._addVar( 'LDSHARED',   '%(CCC)s -bundle -g '
+            self._addVar( 'LDSHARED',   '%(CCC)s -bundle $(LDFLAGS) '
                                         '-framework System '
                                         '-framework CoreFoundation '
                                         '-framework Kerberos '
@@ -1167,7 +1165,7 @@ class MacOsxCompilerGCC(CompilerGCC):
                                         '-undefined dynamic_lookup '
                                         '%(LDLIBS)s' )
         else:
-            self._addVar( 'LDSHARED',   '%(CCC)s -bundle -g '
+            self._addVar( 'LDSHARED',   '%(CCC)s -bundle $(LDFLAGS) '
                                         '-framework System '
                                         '%(PYTHON_FRAMEWORK)s '
                                         '-framework CoreFoundation '
@@ -1240,11 +1238,10 @@ class UnixCompilerGCC(CompilerGCC):
 
     def setupUtilities( self ):
         self._addVar( 'CCCFLAGS',
-                                        '-g  '
                                         '-Wall -fPIC -fexceptions -frtti '
                                         '-I. -I%(APR_INC)s -I%(APU_INC)s -I%(SVN_INC)s '
                                         '-D%(DEBUG)s' )
-        self._addVar( 'LDEXE',          '%(CCC)s -g' )
+        self._addVar( 'LDEXE',          '%(CCC)s $(LDFLAGS)' )
 
     def setupPySvn( self ):
         self._pysvnModuleSetup()
@@ -1272,8 +1269,7 @@ class UnixCompilerGCC(CompilerGCC):
         py_cflags_list.extend( self._getDefines( '-D%s' ) )
 
         if self.options.hasOption( '--enable-debug' ):
-            print( 'Info: Debug enabled' )
-            py_cflags_list.append( '-g' )
+            print( 'Info: --enable-debug ignored' )
 
         if self.options.hasOption( '--disable-deprecated-functions-warnings' ):
             print( 'Info: Disable deprecated functions warnings' )
@@ -1282,7 +1278,7 @@ class UnixCompilerGCC(CompilerGCC):
         self._addVar( 'CCFLAGS',    ' '.join( py_cflags_list ) )
         self._addVar( 'CCCFLAGS',   ' '.join( py_cflags_list+['-fexceptions -frtti'] ) )
         self._addVar( 'LDLIBS',     ' '.join( self._getLdLibs() ) )
-        self._addVar( 'LDSHARED',   '%(CCC)s -shared -g' )
+        self._addVar( 'LDSHARED',   '%(CCC)s -shared $(LDFLAGS)' )
 
 #--------------------------------------------------------------------------------
 class LinuxCompilerGCC(UnixCompilerGCC):
-- 
2.32.0

