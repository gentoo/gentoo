diff --git a/saltfactories/plugin.py b/saltfactories/plugin.py
index b29a115..9d68c34 100644
--- a/saltfactories/plugin.py
+++ b/saltfactories/plugin.py
@@ -21,7 +21,7 @@ def pytest_tempdir_temproot():
         tempdir = os.environ.get("TMPDIR") or tempfile.gettempdir()
     else:
         tempdir = "/tmp"
-    return os.path.abspath(os.path.realpath(tempdir))
+    return os.path.abspath(tempdir)
 
 
 def pytest_tempdir_basename():
diff --git a/tests/functional/markers/test_requires_network.py b/tests/functional/markers/test_requires_network.py
index 8b57368..d58f0a1 100644
--- a/tests/functional/markers/test_requires_network.py
+++ b/tests/functional/markers/test_requires_network.py
@@ -9,7 +9,10 @@ from unittest import mock
 from saltfactories.utils import ports
 from saltfactories.utils import socket
 
+import pytest
 
+
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_has_local_network(testdir):
     testdir.makepyfile(
         """
diff --git a/tests/integration/factories/cli/test_salt.py b/tests/integration/factories/cli/test_salt.py
index 17fce6c..7bd2789 100644
--- a/tests/integration/factories/cli/test_salt.py
+++ b/tests/integration/factories/cli/test_salt.py
@@ -17,6 +17,7 @@ def salt_minion_2(salt_master, salt_minion):
         yield factory
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_merged_json_out(salt_cli, salt_minion, salt_minion_2):
     ret = salt_cli.run("test.ping", minion_tgt="*")
     assert ret.exitcode == 0, ret
@@ -27,6 +28,7 @@ def test_merged_json_out(salt_cli, salt_minion, salt_minion_2):
     assert ret.json[salt_minion_2.id] is True
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_merged_json_out_disabled(salt_cli, salt_minion, salt_minion_2):
     ret = salt_cli.run("test.ping", minion_tgt="*", merge_json_output=False)
     assert ret.exitcode == 0, ret
diff --git a/tests/integration/factories/daemons/api/test_api.py b/tests/integration/factories/daemons/api/test_api.py
index 78b8bb7..e20f28c 100644
--- a/tests/integration/factories/daemons/api/test_api.py
+++ b/tests/integration/factories/daemons/api/test_api.py
@@ -23,5 +23,6 @@ def salt_api(master):
         yield factory
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_api(salt_api):
     assert salt_api.is_running()
diff --git a/tests/integration/factories/daemons/api/test_restarts.py b/tests/integration/factories/daemons/api/test_restarts.py
index a6c5472..dd15c17 100644
--- a/tests/integration/factories/daemons/api/test_restarts.py
+++ b/tests/integration/factories/daemons/api/test_restarts.py
@@ -16,6 +16,7 @@ def master(salt_factories):
         yield factory
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_multiple_start_stops(master):
     factory = master.get_salt_api_daemon()
     assert factory.is_running() is False
diff --git a/tests/integration/factories/daemons/master/test_master.py b/tests/integration/factories/daemons/master/test_master.py
index 2676dfa..cbf598e 100644
--- a/tests/integration/factories/daemons/master/test_master.py
+++ b/tests/integration/factories/daemons/master/test_master.py
@@ -46,10 +46,12 @@ def salt_key(master):
     return master.get_salt_key_cli()
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_master(master):
     assert master.is_running()
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_salt_run(master, salt_run):
     max_open_files_config_value = master.config["max_open_files"]
     ret = salt_run.run("config.get", "max_open_files")
@@ -57,6 +59,7 @@ def test_salt_run(master, salt_run):
     assert ret.json == max_open_files_config_value
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_salt_cp(master, minion, salt_cp, tempfiles):
     """
     Test copying a file from the master to the minion
@@ -98,6 +101,7 @@ def test_salt_cp(master, minion, salt_cp, tempfiles):
             os.unlink(dest)
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_salt_cp_no_match(master, minion, salt_cp, tempfiles):
     assert master.is_running()
     assert minion.is_running()
@@ -119,6 +123,7 @@ def test_salt_cp_no_match(master, minion, salt_cp, tempfiles):
             os.unlink(dest)
 
 
+@pytest.mark.skip("not compatible with sandbox")
 @pytest.mark.skip_on_salt_system_install
 def test_salt_key(master, minion, minion_3, salt_key):
     ret = salt_key.run("--list-all")
diff --git a/tests/integration/factories/daemons/master/test_restarts.py b/tests/integration/factories/daemons/master/test_restarts.py
index 6a6852d..70415d0 100644
--- a/tests/integration/factories/daemons/master/test_restarts.py
+++ b/tests/integration/factories/daemons/master/test_restarts.py
@@ -11,6 +11,7 @@ def master(salt_factories):
     return factory
 
 
+@pytest.mark.skip("not compatible with network")
 def test_multiple_start_stops(master):
     assert master.is_running() is False
     pid = None
diff --git a/tests/integration/factories/daemons/minion/test_event_forwarder_engine.py b/tests/integration/factories/daemons/minion/test_event_forwarder_engine.py
index d63e640..653693e 100644
--- a/tests/integration/factories/daemons/minion/test_event_forwarder_engine.py
+++ b/tests/integration/factories/daemons/minion/test_event_forwarder_engine.py
@@ -28,6 +28,7 @@ def salt_call_cli(minion):
     return minion.get_salt_call_cli()
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_event_listener_engine(minion, salt_call_cli, event_listener):
     """
     There are some events which the minion fires internally that never reach the master.
diff --git a/tests/integration/factories/daemons/minion/test_minion.py b/tests/integration/factories/daemons/minion/test_minion.py
index 64a3df6..ab82e55 100644
--- a/tests/integration/factories/daemons/minion/test_minion.py
+++ b/tests/integration/factories/daemons/minion/test_minion.py
@@ -27,6 +27,7 @@ def salt_call_cli(minion):
     return minion.get_salt_call_cli()
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_minion(minion, salt_cli):
     assert minion.is_running()
     ret = salt_cli.run("test.ping", minion_tgt=minion.id)
@@ -34,6 +35,7 @@ def test_minion(minion, salt_cli):
     assert ret.json is True
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_no_match(minion, salt_cli):
     assert minion.is_running()
     ret = salt_cli.run("test.ping", minion_tgt="minion-2")
@@ -41,6 +43,7 @@ def test_no_match(minion, salt_cli):
     assert not ret.json
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_show_jid(minion, salt_cli):
     assert minion.is_running()
     ret = salt_cli.run("--show-jid", "test.ping", minion_tgt=minion.id)
@@ -48,6 +51,7 @@ def test_show_jid(minion, salt_cli):
     assert ret.json is True
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_minion_salt_call(minion, salt_call_cli):
     assert minion.is_running()
     ret = salt_call_cli.run("test.ping")
@@ -59,6 +63,7 @@ def test_minion_salt_call(minion, salt_call_cli):
     assert ret.json is True
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_salt_call_exception_handling_doesnt_timeout(minion, salt_call_cli):
     ret = salt_call_cli.run(
         "test.raise_exception", "OSError", "2", "No such file or directory", "/tmp/foo.txt"
diff --git a/tests/integration/factories/daemons/minion/test_restarts.py b/tests/integration/factories/daemons/minion/test_restarts.py
index a7d9ae0..8f0401b 100644
--- a/tests/integration/factories/daemons/minion/test_restarts.py
+++ b/tests/integration/factories/daemons/minion/test_restarts.py
@@ -10,6 +10,7 @@ def master(salt_factories):
         yield factory
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_multiple_start_stops(master):
     factory = master.get_salt_minion_daemon(random_string("minion-"))
     assert factory.is_running() is False
diff --git a/tests/integration/factories/daemons/proxy/test_proxy_minion.py b/tests/integration/factories/daemons/proxy/test_proxy_minion.py
index 3bbca21..2e2fb8b 100644
--- a/tests/integration/factories/daemons/proxy/test_proxy_minion.py
+++ b/tests/integration/factories/daemons/proxy/test_proxy_minion.py
@@ -35,6 +35,7 @@ def salt_call_cli(proxy_minion):
     return proxy_minion.get_salt_call_cli()
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_proxy_minion(proxy_minion, salt_cli):
     assert proxy_minion.is_running()
     ret = salt_cli.run("test.ping", minion_tgt=proxy_minion.id)
@@ -42,6 +43,7 @@ def test_proxy_minion(proxy_minion, salt_cli):
     assert ret.json is True
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_no_match(proxy_minion, salt_cli):
     assert proxy_minion.is_running()
     ret = salt_cli.run("test.ping", minion_tgt="proxy-minion-2")
@@ -49,6 +51,7 @@ def test_no_match(proxy_minion, salt_cli):
     assert not ret.json
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_show_jid(proxy_minion, salt_cli):
     if platform.is_darwin() and sys.version_info[:2] == (3, 7):
         pytest.skip(
@@ -61,6 +64,7 @@ def test_show_jid(proxy_minion, salt_cli):
     assert ret.json is True
 
 
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_proxy_minion_salt_call(proxy_minion, salt_call_cli):
     assert proxy_minion.is_running()
     ret = salt_call_cli.run("test.ping")
diff --git a/tests/integration/factories/daemons/proxy/test_restarts.py b/tests/integration/factories/daemons/proxy/test_restarts.py
index 3101204..28652ff 100644
--- a/tests/integration/factories/daemons/proxy/test_restarts.py
+++ b/tests/integration/factories/daemons/proxy/test_restarts.py
@@ -17,6 +17,7 @@ def master(salt_factories):
         yield factory
 
 
+@pytest.mark.skip("not compatible with sandbox")
 def test_multiple_start_stops(master):
     factory = master.get_salt_proxy_minion_daemon(random_string("proxy-minion-"))
     assert factory.is_running() is False
diff --git a/tests/integration/factories/daemons/ssh/test_salt_ssh.py b/tests/integration/factories/daemons/ssh/test_salt_ssh.py
index f58eac4..c3df3de 100644
--- a/tests/integration/factories/daemons/ssh/test_salt_ssh.py
+++ b/tests/integration/factories/daemons/ssh/test_salt_ssh.py
@@ -51,6 +51,7 @@ def salt_ssh_cli(sshd, salt_factories, master):
 
 
 @pytest.mark.skip_on_windows
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_salt_ssh(salt_ssh_cli):
     ret = salt_ssh_cli.run("--ignore-host-keys", "test.echo", "It Works!", minion_tgt="localhost")
     assert ret.exitcode == 0
diff --git a/tests/integration/factories/daemons/sshd/test_sshd.py b/tests/integration/factories/daemons/sshd/test_sshd.py
index 3b425fc..3e03636 100644
--- a/tests/integration/factories/daemons/sshd/test_sshd.py
+++ b/tests/integration/factories/daemons/sshd/test_sshd.py
@@ -5,6 +5,7 @@ import pytest
 
 @pytest.fixture(scope="module")
 @pytest.mark.skip_if_binaries_missing("sshd", "ssh-keygen")
+@pytest.mark.skip("not compatible with network-sandbox")
 def sshd(salt_factories):
     # Set StrictModes to no because our config directory lives in /tmp and those permissions
     # are not acceptable by sshd strict paranoia.
@@ -15,12 +16,14 @@ def sshd(salt_factories):
 
 
 @pytest.mark.skip_on_windows
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_sshd(sshd):
     assert sshd.is_running()
 
 
 @pytest.mark.skip_on_windows
 @pytest.mark.skip_if_binaries_missing("ssh")
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_connect(sshd):
     cmd = subprocess.run(
         [
diff --git a/tests/unit/utils/markers/test_skip_if_no_remote_network.py b/tests/unit/utils/markers/test_skip_if_no_remote_network.py
index 1aa72dc..c4d079e 100644
--- a/tests/unit/utils/markers/test_skip_if_no_remote_network.py
+++ b/tests/unit/utils/markers/test_skip_if_no_remote_network.py
@@ -9,7 +9,10 @@ from unittest import mock
 import saltfactories.utils.markers as markers
 from saltfactories.utils import socket
 
+import pytest
 
+
+@pytest.mark.skip("not compatible with network-sandbox")
 def test_has_remote_network():
     assert markers.skip_if_no_remote_network() is None
 
