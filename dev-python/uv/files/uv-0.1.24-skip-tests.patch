diff --git a/crates/uv/tests/pip_compile.rs b/crates/uv/tests/pip_compile.rs
index 1fc08d1b..60675de4 100644
--- a/crates/uv/tests/pip_compile.rs
+++ b/crates/uv/tests/pip_compile.rs
@@ -5140,7 +5140,6 @@ fn expand_env_var_requirements_txt() -> Result<()> {
 }
 
 /// Raise an error when an editable's `Requires-Python` constraint is not met.
-#[test]
 fn requires_python_editable() -> Result<()> {
     let context = TestContext::new("3.12");
 
@@ -5392,7 +5391,6 @@ fn no_stream() -> Result<()> {
 }
 
 /// Raise an error when a direct URL dependency's `Requires-Python` constraint is not met.
-#[test]
 fn requires_python_direct_url() -> Result<()> {
     let context = TestContext::new("3.12");
 
diff --git a/crates/uv/tests/pip_install.rs b/crates/uv/tests/pip_install.rs
index 6dfbd764..ddc5f37b 100644
--- a/crates/uv/tests/pip_install.rs
+++ b/crates/uv/tests/pip_install.rs
@@ -912,7 +912,6 @@ fn install_no_index_version() {
 /// package in.)
 ///
 /// Ref: <https://github.com/astral-sh/uv/issues/1600>
-#[test]
 fn install_extra_index_url_has_priority() {
     let context = TestContext::new("3.12");
 
@@ -2344,7 +2343,6 @@ requires-python = ">=3.11,<3.13"
 }
 
 /// Raise an error when an editable's `Requires-Python` constraint is not met.
-#[test]
 fn requires_python_editable() -> Result<()> {
     let context = TestContext::new("3.12");
 
@@ -2792,7 +2790,6 @@ fn dry_run_install_then_upgrade() -> std::result::Result<(), Box<dyn std::error:
 }
 
 /// Raise an error when a direct URL's `Requires-Python` constraint is not met.
-#[test]
 fn requires_python_direct_url() -> Result<()> {
     let context = TestContext::new("3.12");
 
diff --git a/crates/uv/tests/pip_install_scenarios.rs b/crates/uv/tests/pip_install_scenarios.rs
index 29ec3483..a538291d 100644
--- a/crates/uv/tests/pip_install_scenarios.rs
+++ b/crates/uv/tests/pip_install_scenarios.rs
@@ -2244,7 +2244,6 @@ fn post_greater_than_or_equal_post() {
 /// └── a
 ///     └── a-1.2.3.post1
 /// ```
-#[test]
 fn post_less_than_or_equal() {
     let context = TestContext::new("3.8");
 
@@ -2283,7 +2282,6 @@ fn post_less_than_or_equal() {
 /// └── a
 ///     └── a-1.2.3.post1
 /// ```
-#[test]
 fn post_less_than() {
     let context = TestContext::new("3.8");
 
@@ -2320,7 +2318,6 @@ fn post_less_than() {
 ///     ├── a-1.2.3.post1
 ///     └── a-1.2.3.post1+local
 /// ```
-#[test]
 fn post_local_greater_than() {
     let context = TestContext::new("3.8");
 
@@ -2361,7 +2358,6 @@ fn post_local_greater_than() {
 ///     ├── a-1.2.3.post1
 ///     └── a-1.2.3.post1+local
 /// ```
-#[test]
 fn post_local_greater_than_post() {
     let context = TestContext::new("3.8");
 
@@ -2529,7 +2525,6 @@ fn post_greater_than_post_not_available() {
 /// └── a
 ///     └── a-1.0.0a1
 /// ```
-#[test]
 fn package_only_prereleases() {
     let context = TestContext::new("3.8");
 
@@ -3652,7 +3647,6 @@ fn package_prereleases_specifier_boundary() {
 ///     └── a-1.0.0
 ///         └── requires python>=3.30 (incompatible with environment)
 /// ```
-#[test]
 fn python_version_does_not_exist() {
     let context = TestContext::new("3.8");
 
@@ -3694,7 +3688,6 @@ fn python_version_does_not_exist() {
 ///     └── a-1.0.0
 ///         └── requires python<=3.8 (incompatible with environment)
 /// ```
-#[test]
 fn python_less_than_current() {
     let context = TestContext::new("3.9");
 
@@ -3736,7 +3729,6 @@ fn python_less_than_current() {
 ///     └── a-1.0.0
 ///         └── requires python>=3.10 (incompatible with environment)
 /// ```
-#[test]
 fn python_greater_than_current() {
     let context = TestContext::new("3.9");
 
@@ -3778,7 +3770,6 @@ fn python_greater_than_current() {
 ///     └── a-1.0.0
 ///         └── requires python>=3.8.14 (incompatible with environment)
 /// ```
-#[test]
 fn python_greater_than_current_patch() {
     let context = TestContext::new("3.8.12");
 
@@ -3942,7 +3933,6 @@ fn python_greater_than_current_backtrack() {
 ///     └── a-4.0.0
 ///         └── requires python>=3.12 (incompatible with environment)
 /// ```
-#[test]
 fn python_greater_than_current_excluded() {
     let context = TestContext::new("3.9");
 
diff --git a/crates/uv/tests/pip_list.rs b/crates/uv/tests/pip_list.rs
index 15d784c1..f15f14b1 100644
--- a/crates/uv/tests/pip_list.rs
+++ b/crates/uv/tests/pip_list.rs
@@ -100,7 +100,6 @@ fn list_single_no_editable() -> Result<()> {
     Ok(())
 }
 
-#[test]
 fn list_editable() -> Result<()> {
     let context = TestContext::new("3.12");
 
@@ -197,7 +196,6 @@ fn list_editable() -> Result<()> {
     Ok(())
 }
 
-#[test]
 fn list_editable_only() -> Result<()> {
     let context = TestContext::new("3.12");
 
@@ -323,7 +321,6 @@ fn list_editable_only() -> Result<()> {
     Ok(())
 }
 
-#[test]
 fn list_exclude() -> Result<()> {
     let context = TestContext::new("3.12");
 
diff --git a/crates/uv/tests/pip_sync.rs b/crates/uv/tests/pip_sync.rs
index af3f4946..0df9ed80 100644
--- a/crates/uv/tests/pip_sync.rs
+++ b/crates/uv/tests/pip_sync.rs
@@ -1447,7 +1447,6 @@ fn install_git_source_dist_cached() -> Result<()> {
 }
 
 /// Check that we show the right messages on cached, registry source distribution installs.
-#[test]
 fn install_registry_source_dist_cached() -> Result<()> {
     let context = TestContext::new("3.12");
 
@@ -2955,7 +2954,6 @@ fn compile_invalid_pyc_invalidation_mode() -> Result<()> {
 }
 
 /// Raise an error when an editable's `Requires-Python` constraint is not met.
-#[test]
 fn requires_python_editable() -> Result<()> {
     let context = TestContext::new("3.12");
 
diff --git a/crates/uv/tests/venv.rs b/crates/uv/tests/venv.rs
index 067c1414..1462f6a0 100644
--- a/crates/uv/tests/venv.rs
+++ b/crates/uv/tests/venv.rs
@@ -327,7 +327,6 @@ fn create_venv_unknown_python_patch() -> Result<()> {
     Ok(())
 }
 
-#[test]
 fn create_venv_python_patch() -> Result<()> {
     let temp_dir = assert_fs::TempDir::new()?;
     let cache_dir = assert_fs::TempDir::new()?;
