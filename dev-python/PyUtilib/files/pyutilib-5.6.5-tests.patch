diff --git a/pyutilib/dev/entry_point.py b/pyutilib/dev/entry_point.py
index e571cc7..e0200e9 100644
--- a/pyutilib/dev/entry_point.py
+++ b/pyutilib/dev/entry_point.py
@@ -23,7 +23,8 @@ def run_entry_point(package, script, args=[], **kwds):
     script = str(script)
     assert type(args) is list
     cmdLine \
-        = "import pkg_resources,sys; "\
+        = "import pkg_resources,sys,os; "\
+        "pkg_resources.fixup_namespace_packages(os.path.join(os.getcwd(),'build')); "\
         "sys.argv=%r; "\
         "sys.exit(pkg_resources.load_entry_point(%r,'console_scripts',%r)())" \
         % ( [script]+args, package, script ) 
diff --git a/pyutilib/enum/tests/test_enum.py b/pyutilib/enum/tests/test_enum.py
index 52451ef..66313f4 100755
--- a/pyutilib/enum/tests/test_enum.py
+++ b/pyutilib/enum/tests/test_enum.py
@@ -11,7 +11,7 @@
 """ Unit test for ‘enum’ module.
     """
 
-import unittest
+import unittest, sys
 
 import pyutilib.enum.enum as enum
 
@@ -355,6 +355,7 @@ class Test_EnumValue(unittest.TestCase):
         for other_value in self.other_values:
             self.assertNotEqual(test_value, other_value)
 
+    @unittest.skipIf(sys.hexversion > 0x03040000, "can't compare int and tuple on python3")
     def test_sequence_other_values(self):
         # An EnumValue should compare sequentially to other values.
         test_value = enum.EnumValue(self.SimpleEnum, 0, 'test')
