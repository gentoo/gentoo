From 427a34e9ef409fefd8f1f7ae7e1c2a2bb7eb4496 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Edgar=20Ram=C3=ADrez=20Mondrag=C3=B3n?=
 <edgarrm358@gmail.com>
Date: Tue, 14 Nov 2023 18:05:17 -0600
Subject: [PATCH] Use `warnings.catch_warnings` instead of `pytest.warns(None)`
 in tests

---
 tests/test_pattern_properties.py | 7 ++++---
 tests/test_string.py             | 7 ++++---
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/tests/test_pattern_properties.py b/tests/test_pattern_properties.py
index ae86946..945315b 100644
--- a/tests/test_pattern_properties.py
+++ b/tests/test_pattern_properties.py
@@ -1,3 +1,5 @@
+import warnings
+
 import pytest
 
 
@@ -59,12 +61,11 @@ def test_pattern_with_escape_no_warnings(asserter):
         'bar': {}
     }
 
-    with pytest.warns(None) as record:
+    with warnings.catch_warnings():
+        warnings.simplefilter("error")
         asserter({
             'type': 'object',
             'patternProperties': {
                 '\\w+': {'type': 'object'}
             }
         }, value, value)
-
-    assert len(record) == 0
diff --git a/tests/test_string.py b/tests/test_string.py
index a8e8318..12fc3c9 100644
--- a/tests/test_string.py
+++ b/tests/test_string.py
@@ -1,3 +1,5 @@
+import warnings
+
 import pytest
 
 from fastjsonschema import JsonSchemaValueException
@@ -74,14 +76,13 @@ def test_pattern_with_space(asserter, pattern):
 
 
 def test_pattern_with_escape_no_warnings(asserter):
-    with pytest.warns(None) as record:
+    with warnings.catch_warnings():
+        warnings.simplefilter("error")
         asserter({
             'type': 'string',
             'pattern': '\\s'
         }, ' ', ' ')
 
-    assert len(record) == 0
-
 
 exc = JsonSchemaValueException('data must be a valid regex', value='{data}', name='data', definition='{definition}', rule='format')
 @pytest.mark.parametrize('value, expected', [
-- 
2.44.0

