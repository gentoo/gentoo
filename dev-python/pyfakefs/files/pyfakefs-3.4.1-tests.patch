Drop checks that fail due to sandboxing and skip failing tell check.

--- pyfakefs-3.4.1/tests/fake_os_test.py
+++ pyfakefs-3.4.1/tests/fake_os_test.py
@@ -449,7 +449,6 @@
         self.os.chdir(directory)
         self.assert_raises_os_error(dir_error, self.os.remove, dir_path)
         self.assertTrue(self.os.path.exists(dir_path))
-        self.assert_raises_os_error(errno.ENOENT, self.os.remove, '/plugh')
 
     def test_remove_dir_linux(self):
         self.check_linux_only()
@@ -963,6 +962,8 @@
             self.assertEqual(b'\0\0abcde', f.read())
 
     def test_append_mode_tell_linux_windows(self):
+        # skipping real fs test - python2 on the actual filesystem is also 7
+        self.skip_real_fs()
         self.check_linux_and_windows()
         tell_result = 5 if self.is_python2 else 7
         self.check_append_mode_tell_after_truncate(tell_result)
@@ -1885,8 +1886,8 @@
         # trying to create a link from a non-existent file should fail
         self.skip_if_symlink_not_supported()
         self.assert_raises_os_error(errno.ENOENT,
-                                    self.os.link, '/nonexistent_source',
-                                    '/link_dest')
+                                    self.os.link, 'nonexistent_source',
+                                    'link_dest')
 
     def test_link_delete(self):
         self.skip_if_symlink_not_supported()
@@ -2233,7 +2234,6 @@
         self.os.chdir(directory)
         self.assert_raises_os_error(dir_error, self.os.remove, dir_path)
         self.assertTrue(self.os.path.exists(dir_path))
-        self.assert_raises_os_error(errno.ENOENT, self.os.remove, '/Plugh')
 
     def test_remove_dir_mac_os(self):
         self.check_macos_only()
