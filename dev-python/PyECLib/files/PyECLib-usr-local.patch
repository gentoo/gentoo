--- setup.py	2015-08-26 16:11:51.163684633 -0500
+++ setup.py.new	2015-08-26 16:14:24.203682415 -0500
@@ -55,18 +55,16 @@
 # and Tushar) cannot explain what is going on with
 # distutils or libtool here.
 #
-standard_library_paths = [('%s/usr/local/lib' % _exec_prefix),
-                          '/lib', '/usr/lib', '/usr/local/lib']
+standard_library_paths = [('%s/usr/lib' % _exec_prefix),
+                          '/lib', '/usr/lib']
 
 default_library_paths = [default_python_libdir,
-                         ('%s/usr/local/lib' % _exec_prefix),
-                         '/lib', '/usr/lib', '/usr/local/lib',
-                         'src/c/liberasurecode-1.0.7/src/.libs']
+                         ('%s/usr/lib' % _exec_prefix),
+                         '/lib', '/usr/lib']
 
 default_include_paths = [default_python_incdir,
-                         '/usr/local/include', '/usr/local/include/jerasure',
-                         '/usr/include', 'src/c/pyeclib_c',
-                         '/usr/include/liberasurecode', '/usr/local/include']
+                         '/usr/include', '/usr/include/jerasure', 'src/c/pyeclib_c',
+                         '/usr/include', '/usr/include/liberasurecode']
 
 libflags = ''
 includeflags = ''
@@ -131,8 +129,9 @@
         if (os.path.isdir(locallibsrcdir)):
             # patch default include, lib paths
             topdir = os.getcwd()
-            libdirs = [ (topdir + "/" + locallibsrcdir + "/.libs "),
-                        (topdir + "/" + locallibsrcdir + "/src/.libs ")] 
+            libdirs = []
+            libdirs = [ (topdir + "/" + locallibsrcdir + "/.libs "),
+                        (topdir + "/" + locallibsrcdir + "/src/.libs ")] 
             for d in libdirs:
                 libflags = libflags + " -L" + d
                 default_library_paths.append(d)
@@ -148,7 +147,7 @@
             statefile = "." + library + "_configured"
             if (not os.path.isfile(statefile)):
                 configure_cmd = ("CFLAGS=\"%s\" LDFLAGS=\"%s\" " % (includeflags, libflags))
-                configure_cmd = ("%s ./configure --prefix=%s/usr/local" % \
+                configure_cmd = ("%s ./configure --prefix=%s/usr" % \
                     (configure_cmd, installroot))
                 print(configure_cmd)
                 retval = os.system(configure_cmd)
@@ -218,7 +217,7 @@
                        "http://lab.jerasure.org/jerasure/jerasure.git",
                        "install", self.distribution)
         installroot = _get_installroot(self.distribution)
-        default_library_paths.insert(0, "%s/usr/local/lib" % installroot)
+        default_library_paths.insert(0, "%s/usr/lib" % installroot)
         _install.run(self)
 
         # Another Mac-ism...  If the libraries are installed
@@ -231,13 +230,13 @@
         print("***************************************************")
         print("**                                                 ")
         print("** PyECLib libraries have been installed to:       ")
-        print("**   %susr/local/lib" % installroot)
+        print("**   %susr/lib" % installroot)
         print("**                                                 ")
         print("** Any user using this library must update:        ")
         print("**   %s" % ldpath_str)
         print("**                                                 ")
         print("** Run 'ldconfig' or place this line:              ")
-        print("**   export %s=%s" % (ldpath_str, "%susr/local/lib"
+        print("**   export %s=%s" % (ldpath_str, "%susr/lib"
                                      % installroot))
         print("**                                                 ")
         print("** into .bashrc, .profile, or the appropriate shell")
@@ -256,8 +255,7 @@
                    libraries=['erasurecode'],
                    # The extra arguments are for debugging
                    # extra_compile_args=['-g', '-O0'],
-                   extra_link_args=['-Wl,-rpath,%s' %
-                                    l for l in default_library_paths],
+                   extra_link_args=[],
                    sources=['src/c/pyeclib_c/pyeclib_c.c'])
 
 setup(name='PyECLib',
