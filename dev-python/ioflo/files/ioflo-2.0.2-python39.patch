diff --git a/ioflo/aid/aiding.py b/ioflo/aid/aiding.py
index 6840d07..525b311 100644
--- a/ioflo/aid/aiding.py
+++ b/ioflo/aid/aiding.py
@@ -135,7 +135,7 @@ def nameToPath(name):
     return path
 
 def isPath(s):
-    """Returns True if string s is valid Store path name
+    r"""Returns True if string s is valid Store path name
        Returns False otherwise
 
        Faster to use precompiled versions in base
@@ -201,7 +201,7 @@ def isPath(s):
         return False
 
 def isIdentifier(s):
-    """Returns True if string s is valid python identifier (variable, attribute etc)
+    r"""Returns True if string s is valid python identifier (variable, attribute etc)
        Returns False otherwise
 
        how to determine if string is valid python identifier
diff --git a/ioflo/aid/classing.py b/ioflo/aid/classing.py
index 2bd37b5..493f5dc 100644
--- a/ioflo/aid/classing.py
+++ b/ioflo/aid/classing.py
@@ -5,7 +5,7 @@ meta class and base class utility classes and functions
 from __future__ import absolute_import, division, print_function
 
 import sys
-from collections import Iterable, Sequence
+from collections.abc import Iterable, Sequence
 from abc import ABCMeta
 import functools
 import inspect
@@ -123,7 +123,7 @@ def isIterator(obj):
 
 
 
-from collections import Generator
+from collections.abc import Generator
 
 def attributize(genfunc):
     """
diff --git a/ioflo/aid/eventing.py b/ioflo/aid/eventing.py
index 837778b..f76ff0c 100644
--- a/ioflo/aid/eventing.py
+++ b/ioflo/aid/eventing.py
@@ -7,7 +7,7 @@ from __future__ import absolute_import, division, print_function
 import sys
 import os
 import datetime
-from collections import Set  # both set and frozen set
+from collections.abc import Set  # both set and frozen set
 
 # Import ioflo libs
 from .sixing import *
diff --git a/ioflo/aid/osetting.py b/ioflo/aid/osetting.py
index 6e6fffd..a99a09c 100644
--- a/ioflo/aid/osetting.py
+++ b/ioflo/aid/osetting.py
@@ -6,11 +6,11 @@ http://code.activestate.com/recipes/576694/
 """
 from __future__ import absolute_import, division, print_function
 
-import collections
+import collections.abc
 
 from .sixing import *
 
-class oset(collections.MutableSet):
+class oset(collections.abc.MutableSet):
     """
     Ordered Set, preserves order of entry in set
 
diff --git a/ioflo/base/acting.py b/ioflo/base/acting.py
index c4b7bb3..95ad188 100644
--- a/ioflo/base/acting.py
+++ b/ioflo/base/acting.py
@@ -5,7 +5,8 @@
 
 import time
 import struct
-from collections import deque, Mapping
+from collections import deque
+from collections.abc import Mapping
 from functools import wraps
 import inspect
 import copy
diff --git a/ioflo/base/doing.py b/ioflo/base/doing.py
index 5af023c..c074380 100644
--- a/ioflo/base/doing.py
+++ b/ioflo/base/doing.py
@@ -3,7 +3,8 @@ doing.py doer module for do verb behaviors
 """
 import time
 import struct
-from collections import deque, Mapping
+from collections import deque
+from collections.abc import Mapping
 from functools import wraps
 import inspect
 import copy
diff --git a/ioflo/base/framing.py b/ioflo/base/framing.py
index 3416289..6a33a35 100644
--- a/ioflo/base/framing.py
+++ b/ioflo/base/framing.py
@@ -5,7 +5,8 @@
 import sys
 
 import copy
-from collections import deque, Mapping
+from collections import deque
+from collections.abc import Mapping
 import uuid
 
 from ..aid.sixing import *
diff --git a/ioflo/base/logging.py b/ioflo/base/logging.py
index d78a5fa..dca7460 100644
--- a/ioflo/base/logging.py
+++ b/ioflo/base/logging.py
@@ -10,7 +10,8 @@ import datetime
 import copy
 import io
 
-from collections import deque, MutableSequence, MutableMapping, Mapping
+from collections import deque
+from collections.abc import MutableSequence, MutableMapping, Mapping
 
 from ..aid.sixing import *
 from .globaling import *
