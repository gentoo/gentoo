--- a/test/test.py	2017-07-10 21:18:13.701472836 +0000
+++ b/test/test.py	2017-07-10 21:18:44.021473430 +0000
@@ -1041,32 +1041,6 @@
             self.assertEqual(self.sh.run_command('python ./prog basic f\t'), 'foo\r\n')
 
 
-class TestTcsh(_TestSh, unittest.TestCase):
-    expected_failures = [
-        'test_unquoted_space',
-        'test_quoted_space',
-        'test_continuation',
-        'test_parse_special_characters',
-        'test_parse_special_characters_dollar',
-    ]
-
-    def setUp(self):
-        sh = Shell('tcsh')
-        path = ' '.join([os.path.join(BASE_DIR, 'scripts'), TEST_DIR, '$path'])
-        sh.run_command('set path = ({0})'.format(path))
-        sh.run_command('setenv PYTHONPATH {0}'.format(BASE_DIR))
-        output = sh.run_command('eval `register-python-argcomplete --shell tcsh prog`')
-        self.assertEqual(output, '')
-        self.sh = sh
-
-    def tearDown(self):
-        # The shell wrapper is fragile; exactly which exception is raised
-        # differs depending on environment.
-        with self.assertRaises((pexpect.EOF, OSError)):
-            self.sh.run_command('exit')
-            self.sh.run_command('')
-
-
 class Shell(object):
     def __init__(self, shell):
         self.child = pexpect.spawn(shell, encoding='utf-8')
