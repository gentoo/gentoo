From e55c0bf35f4c54610c3bb40fcdc1b961bfd9f763 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Mon, 27 Mar 2023 16:38:29 +0000
Subject: [PATCH] Do not use std::monospace for absl::variant

authenticator_request_dialog_model.h introduced usage of
std::monospace, though no include was added for it. But in this file
it is using absl::variant. For uniformity, keep using absl::monospace
before all the file moves to use std variants.

This fixes a break in libstdc++ build.

Bug: 957519
Change-Id: I16adf924e935d2517916969000f8e94efc118c53
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4372590
Commit-Queue: Jos√© Dapena Paz <jdapena@igalia.com>
Reviewed-by: Nina Satragno <nsatragno@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1122463}
---

diff --git a/chrome/browser/webauthn/authenticator_request_dialog_model.h b/chrome/browser/webauthn/authenticator_request_dialog_model.h
index f4992a7..6a4bcf68 100644
--- a/chrome/browser/webauthn/authenticator_request_dialog_model.h
+++ b/chrome/browser/webauthn/authenticator_request_dialog_model.h
@@ -181,9 +181,9 @@
     // These types describe the type of Mechanism.
     using Transport =
         base::StrongAlias<class TransportTag, AuthenticatorTransport>;
-    using WindowsAPI = base::StrongAlias<class WindowsAPITag, std::monostate>;
+    using WindowsAPI = base::StrongAlias<class WindowsAPITag, absl::monostate>;
     using Phone = base::StrongAlias<class PhoneTag, std::string>;
-    using AddPhone = base::StrongAlias<class AddPhoneTag, std::monostate>;
+    using AddPhone = base::StrongAlias<class AddPhoneTag, absl::monostate>;
     using Type = absl::variant<Transport, WindowsAPI, Phone, AddPhone>;
 
     Mechanism(Type type,
