diff --git a/ui/accessibility/ax_tree.cc b/ui/accessibility/ax_tree.cc
index 616d53f..26749e3 100644
--- a/ui/accessibility/ax_tree.cc
+++ b/ui/accessibility/ax_tree.cc
@@ -565,15 +565,6 @@ struct AXTreeUpdateState {
   const AXTree& tree;
 };
 
-struct AXTree::NodeSetSizePosInSetInfo {
-  NodeSetSizePosInSetInfo() = default;
-  ~NodeSetSizePosInSetInfo() = default;
-
-  int32_t pos_in_set = 0;
-  int32_t set_size = 0;
-  base::Optional<int> lowest_hierarchical_level;
-};
-
 struct AXTree::OrderedSetContent {
   explicit OrderedSetContent(const AXNode* ordered_set = nullptr)
       : ordered_set_(ordered_set) {}
diff --git a/ui/accessibility/ax_tree.h b/ui/accessibility/ax_tree.h
index 3bbbe0c..e4288f5 100644
--- a/ui/accessibility/ax_tree.h
+++ b/ui/accessibility/ax_tree.h
@@ -323,7 +323,14 @@ class AX_EXPORT AXTree : public AXNode::OwnerTree {
   bool enable_extra_mac_nodes_ = false;
 
   // Contains pos_in_set and set_size data for an AXNode.
-  struct NodeSetSizePosInSetInfo;
+  struct NodeSetSizePosInSetInfo {
+    NodeSetSizePosInSetInfo() = default;
+    ~NodeSetSizePosInSetInfo() = default;
+
+    int32_t pos_in_set = 0;
+    int32_t set_size = 0;
+    base::Optional<int> lowest_hierarchical_level;
+  };
 
   // Represents the content of an ordered set which includes the ordered set
   // items and the ordered set container if it exists.
