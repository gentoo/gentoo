--- a/configure.ac
+++ b/configure.ac
@@ -1,6 +1,3 @@
-dnl preserve initial CFLAGS
-CFLAGS_OLD="$CFLAGS"
-
 dnl initialize
 AC_INIT(main.c)
 VER=`head -1 $srcdir/README |sed 's/ *netrik \([[^ ]]*\).*/\1/'`
@@ -56,10 +53,6 @@
 	      [AC_HELP_STRING([--disable-debug],
 			      [do not include debug options and sanity checks])])
 
-AC_ARG_ENABLE(optimization,
-	      [AC_HELP_STRING([[--enable-optimization[[[=LEVEL]]]]],
-			      [use compiler optimization with -OLEVEL (default: -O2 if CFLAGS not set)])])
-
 dnl process results
 dnl define
 if test x"$enable_debug" != "xno"; then
@@ -67,46 +60,5 @@
 	    [Define if debug options and sanity checks are desired.])
 fi
 
-dnl restore CFLAGS
-CFLAGS="$CFLAGS_OLD"
-
-dnl set default CFLAGS
-if test -z "$CFLAGS_OLD" ; then
-  CFLAGS="$CFLAGS -g"
-
-  dnl set warning options for GCC
-  if test x"$GCC" = "xyes"; then
-    CFLAGS="$CFLAGS -W -Wall -Wstrict-prototypes -Wmissing-prototypes"
-  fi
-fi
-
-dnl adjust optimization options
-case x"$enable_optimization" in
-  dnl option given but no argument specified
-  xyes)
-    CFLAGS="$CFLAGS -O2"
-    ;;
-
-  dnl chosen not to optimize
-  xno)
-    dnl use -O0 to make sure no optimization is performed
-    CFLAGS="$CFLAGS -O0"
-    ;;
-
-  dnl option not given
-  x)
-    dnl optimize if CFLAGS not specified
-    if test -z "$CFLAGS_OLD"; then
-      CFLAGS="$CFLAGS -O2"
-    fi
-    ;;
-
-  dnl argument given
-  *)
-    dnl use argument to optimize
-    CFLAGS="$CFLAGS -O${enable_optimization}"
-    ;;
-esac
-
 dnl generate Makefiles
 AC_OUTPUT(Makefile doc/Makefile debian/Makefile)
