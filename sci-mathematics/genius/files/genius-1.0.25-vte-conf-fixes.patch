From 3b0ffaf91894a70d5d3eefcf587a258cdc818a8f Mon Sep 17 00:00:00 2001
From: Mart Raudsepp <leio@gentoo.org>
Date: Fri, 13 Mar 2020 00:37:32 +0200
Subject: [PATCH] Clean up vte configure.ac handling

---
 configure.ac    | 113 +-----------------------------------------------
 src/Makefile.am |   2 -
 2 files changed, 2 insertions(+), 113 deletions(-)

diff --git a/configure.ac b/configure.ac
index 6c70c5c9..9d8e76a8 100644
--- a/configure.ac
+++ b/configure.ac
@@ -19,9 +19,9 @@ PKG_PROG_PKG_CONFIG
 
 dnl ================= Requirements ================================================
 
+VTE_REQUIRED=0.50.0
 GTK_REQUIRED=3.21.4
 GLIB_REQUIRED=2.41.1
-PANGO_REQUIRED=1.22.0
 GTKSOURCEVIEW4_REQUIRED=3.99.7
 GIO_REQUIRED=2.16.0
 
@@ -123,7 +123,7 @@ PKG_CHECK_MODULES(GLIB, glib-2.0 >= $GLIB_REQUIRED)
 AC_SUBST(GLIB_CFLAGS)
 AC_SUBST(GLIB_LIBS)
 
-GENIUS_MODULES="amtk-5 gtk+-3.0 >= $GTK_REQUIRED gio-2.0 >= $GIO_REQUIRED"
+GENIUS_MODULES="amtk-5 gtk+-3.0 >= $GTK_REQUIRED gio-2.0 >= $GIO_REQUIRED vte-2.91 >= $VTE_REQUIRED"
 
 if test "x$use_gnome" = "xyes" ; then
   echo " 
@@ -260,115 +260,6 @@ AC_ARG_ENABLE(update-mimedb,
 AM_CONDITIONAL(ENABLE_UPDATE_MIMEDB, test x$enable_update_mimedb = xyes)
 
 
-####
-# VTE STUFF, this is all temporary pending a port to gtk 3.0 in the star trek future
-# FIXME: OK this happened, so things ought to be properly "whacked" (removed)
-
-AC_PATH_PROG([GLIB_MKENUMS],[glib-mkenums])
-AC_DEFINE_UNQUOTED(VTE_DEFAULT_EMULATION,"xterm",[The default terminal type to be emulated.])
-VTE_DEFAULT_EMULATION="xterm"
-AC_SUBST(VTE_DEFAULT_EMULATION)
-
-# Check for headers.
-AC_CHECK_HEADERS(sys/select.h sys/syslimits.h sys/termios.h sys/un.h sys/wait.h stropts.h termios.h wchar.h)
-AC_HEADER_TIOCGWINSZ
-
-# Check for PTY handling functions.
-AC_CHECK_FUNCS([cfmakeraw fork setsid setpgid getpgid getpt grantpt unlockpt ptsname ptsname_r tcgetattr tcsetattr])
-
-# Pull in the right libraries for various functions which might not be
-# bundled into an exploded libc.
-AC_CHECK_FUNC(socket,[have_socket=1],AC_CHECK_LIB(socket,socket,[have_socket=1; LIBS="$LIBS -lsocket"]))
-AC_CHECK_FUNC(socketpair,[have_socketpair=1],AC_CHECK_LIB(socket,socketpair,[have_socketpair=1; LIBS="$LIBS -lsocket"]))
-AC_CHECK_FUNC(recvmsg,[have_recvmsg=1],AC_CHECK_LIB(socket,recvmsg,[have_recvmsg=1; LIBS="$LIBS -lsocket -lnsl"]))
-if test x$have_socket = x1 ; then
-	AC_DEFINE(HAVE_SOCKET,1,[Define if you have the socket function.])
-fi
-if test x$have_socketpair = x1 ; then
-	AC_DEFINE(HAVE_SOCKETPAIR,1,[Define if you have the socketpair function.])
-fi
-if test x$have_recvmsg = x1 ; then
-	AC_DEFINE(HAVE_RECVMSG,1,[Define if you have the recvmsg function.])
-fi
-AC_CHECK_FUNC(floor,,AC_CHECK_LIB(m,floor,LIBS=["$LIBS -lm"]))
-AC_CHECK_FUNCS([ceil floor])
-
-# Look for tgetent
-
-AC_CHECK_FUNC([tgetent],[vte_cv_termcap_lib=libc],
-  [AC_CHECK_LIB([ncurses],[tgetent],[vte_cv_termcap_lib=libncurses],
-    [AC_CHECK_LIB([tinfo],[tgetent],[vte_cv_termcap_lib=libtinfo],
-      [AC_CHECK_LIB([curses],[tgetent],[vte_cv_termcap_lib=libcurses],
-        [AC_CHECK_LIB([termcap],[tgetent],[vte_cv_termcap_lib=libtermcap],
-          [vte_cv_termcap_lib=])])])])])
-
-case "$vte_cv_termcap_lib" in
-  libc)       # FIXME: which headers to include here?
-              ;;
-  libncurses) # We need ncurses.h and term.h, or ncurses/curses.h and ncurses/term.h
-              AC_CHECK_HEADERS([ncurses.h term.h],[],
-                [AC_CHECK_HEADERS([ncurses/curses.h ncurses/term.h],[],
-                  [AC_MSG_ERROR([ncurses headers not found])])])
-              LIBS="-lncurses $LIBS"
-              ;;
-  libtinfo)   # Need ncurses/curses.h and ncurses/term.h
-              AC_CHECK_HEADERS([ncurses.h term.h],[],
-                [AC_CHECK_HEADERS([ncurses/curses.h ncurses/term.h],[],
-                  [AC_MSG_ERROR([ncurses headers not found])])])
-              LIBS="-ltinfo $LIBS"
-              ;;
-  libcurses)  # Need curses.h and term.h
-              AC_CHECK_HEADERS([curses.h term.h],[],
-                [AC_MSG_ERROR([curses headers not found])],
-                [[#ifdef HAVE_CURSES_H
-                  #include <curses.h>
-                  #endif]])
-              LIBS="-lcurses $LIBS"
-              ;;
-  libtermcap) # Need termcap.h
-              AC_CHECK_HEADERS([termcap.h],[],
-                [AC_MSG_ERROR([termcap headers not found])])
-              LIBS="-ltermcap $LIBS"
-              ;;
-  *)          AC_MSG_ERROR([tgetent not found in any library]) ;;
-esac
-
-# Search for the required modules.
-
-# We have a direct dependency on X11 on gdk-x11, see bug #613525
-AC_MSG_CHECKING([for GDK target])
-GDK_TARGET="$($PKG_CONFIG --variable target gdk-3.0)"
-AC_MSG_RESULT([$GDK_TARGET])
-case "$GDK_TARGET" in
-  x11) PLATFORM_PKGS="x11 cairo-xlib" ;;
-  *) PLATFORM_PKGS="" ;;
-esac
-
-VTE_PKGS="vte-2.91"
-PKG_CHECK_MODULES([VTE],[$VTE_PKGS])
-AC_SUBST([VTE_PKGS])
-
-wcs_funcs_includes="
-#ifdef HAVE_STRING_H
-# if !STDC_HEADERS && HAVE_MEMORY_H
-#  include <memory.h>
-# endif
-# include <string.h>
-#else
-# ifdef HAVE_STRINGS_H
-#  include <strings.h>
-# endif
-#endif
-#ifdef HAVE_WCHAR_H
-# include <wchar.h>
-#endif
-"
-
-AC_CHECK_TYPES(wint_t, AC_DEFINE(HAVE_WINT_T, , [Defined when the wint_t type is supported]), ,$wcs_funcs_includes)
-
-
-########
-
 AC_OUTPUT([
 genius.spec
 Makefile
diff --git a/src/Makefile.am b/src/Makefile.am
index 8408becd..f58eb689 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -22,7 +22,6 @@ AM_CPPFLAGS = \
 	-I$(top_builddir)/ve					\
 	-I$(top_builddir)/gtkextra				\
 	$(WARN_CFLAGS)						\
-	$(VTE_CFLAGS)						\
 	$(BINRELOC_CFLAGS)					\
 	$(GMP_INCLUDEDIR)					\
 	$(GENIUS_CFLAGS)					\
@@ -102,7 +101,6 @@ gnome_genius_LDADD = \
 	@LEXLIB@				\
 	$(INTLLIBS)				\
 	$(GENIUS_LIBS)				\
-	$(VTE_LIBS)				\
 	$(GENIUS_NOGUI_LIBS)			\
 	$(GSV_LIBS)				\
 	@READLINE_LIB@				\
-- 
2.20.1

