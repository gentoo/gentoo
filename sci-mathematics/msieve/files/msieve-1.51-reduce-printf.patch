--- a/common/minimize.c
+++ b/common/minimize.c
@@ -210,7 +210,7 @@
 		}
 	}
 
-	printf(":"); // "too many line iterations\n");
+	//printf(":"); // "too many line iterations\n");
 	*min_out = x;
 	*status = 1;
 	return fx;
--- a/gnfs/poly/stage2/optimize.c
+++ b/gnfs/poly/stage2/optimize.c
@@ -430,9 +430,9 @@
 #if 0
 	printf("norm %.7e skew %lf\n", *pol_norm, best[SKEWNESS]);
 	for (i = 0; i < 2; i++)
-		gmp_printf("%+Zd\n", c->gmp_lina[i]);
+		//gmp_printf("%+Zd\n", c->gmp_lina[i]);
 	for (i = 0; i <= deg; i++)
-		gmp_printf("%+Zd\n", c->gmp_a[i]);
+		//gmp_printf("%+Zd\n", c->gmp_a[i]);
 #endif
 }
 
--- a/gnfs/poly/stage2/stage2.c
+++ b/gnfs/poly/stage2/stage2.c
@@ -122,10 +122,10 @@
 	}
 
 #if 0
-	gmp_printf("%+Zd\n", c->gmp_lina[0]);
-	gmp_printf("%+Zd\n", c->gmp_lina[1]);
+	//gmp_printf("%+Zd\n", c->gmp_lina[0]);
+	//gmp_printf("%+Zd\n", c->gmp_lina[1]);
 	for (i = 0; i <= degree; i++)
-		gmp_printf("%+Zd\n", c->gmp_a[i]);
+		//gmp_printf("%+Zd\n", c->gmp_a[i]);
 
 	printf("coeff ratio = %.5lf\n",
 		fabs(mpz_get_d(c->gmp_a[degree-2])) / coeff_bound);
