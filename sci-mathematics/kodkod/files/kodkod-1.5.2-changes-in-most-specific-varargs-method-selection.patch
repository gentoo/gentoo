--- kodkod-1.5-orig/src/kodkod/util/ints/Ints.java	2011-09-22 19:00:22.000000000 +1000
+++ kodkod-1.5/src/kodkod/util/ints/Ints.java	2013-02-02 22:30:12.825378928 +1100
@@ -316,25 +316,6 @@
 	}
 	
 	/**
-	 * An implementation of Paul Hsieh's hashing function, 
-	 * described at http://www.azillionmonkeys.com/qed/hash.html.
-	 * The method returns a 32 bit hash of the given objects' hash codes,
-	 * or zero if the array is empty.  Any null references in the array
-	 * are taken to have 0 as their hash code value.
-	 * @return a 32 bit hash of the given objects' hashCodes
-	 */
-	public static int superFastHash(Object... key) {
-		if (key.length==0) return 0;
-		int hash = key.length; 
-
-		for(Object o : key) {
-			hash = superFastHashIncremental(o == null ? 0 : o.hashCode(), hash);
-		}
-		//	no end cases since the hashcodes of key parts are ints
-		return superFastHashAvalanche(hash);
-	}
-	
-	/**
 	 * An implementation of an IntSet wrapper for an IntRange.
 	 */
 	private static final class RangeIntSet extends AbstractIntSet {
