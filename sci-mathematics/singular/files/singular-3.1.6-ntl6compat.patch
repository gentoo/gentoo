diff --git a/Singular/claptmpl.cc b/Singular/claptmpl.cc
index 0fa6109..553afa5 100644
Index: Singular/claptmpl.cc
===================================================================
--- a/Singular/claptmpl.cc
+++ b/Singular/claptmpl.cc
@@ -123,3 +123,37 @@ template class std::list<PolyMinorValue>;
 template class Cache<MinorKey, IntMinorValue>;
 template class Cache<MinorKey, PolyMinorValue>;
 
+#ifdef HAVE_NTL
+#include<NTL/version.h>
+#if NTL_MAJOR_VERSION == 6
+
+#include<NTL/tools.h>
+#include<NTL/lzz_pE.h>
+#include<NTL/lzz_pEX.h>
+#include<NTL/lzz_p.h>
+#include<NTL/vector.h>
+#include<NTL/pair.h>
+#include<NTL/GF2X.h>
+#include<NTL/GF2EX.h>
+#include<NTL/ZZ.h>
+#include<NTL/ZZX.h>
+#include<NTL/ZZ_pX.h>
+#ifdef NTL_CLIENT               // in <NTL/tools.h>: using of name space NTL
+NTL_CLIENT
+#endif
+template class Vec<zz_p>;
+template class Vec<zz_pE>;
+template class Mat<zz_p>;
+template class Mat<zz_pE>;
+template class Mat<ZZ>;
+template class Vec<Pair<zz_pEX, long> >;
+template class Vec<Pair<GF2EX, long> >;
+template class Vec<Pair<ZZX, long> >;
+template class Vec<Pair<ZZ_pX, long> >;
+template class Vec<Pair<GF2X, long> >;
+template void swap<zz_pE>(Vec<zz_pE>&, Vec<zz_pE>&);
+template long operator==<zz_p>(Vec<zz_p> const&, Vec<zz_p> const&);
+template Vec<Pair<zz_pX, long> >& Vec<Pair<zz_pX, long> >::operator=(const Vec<Pair<zz_pX, long> >&);
+#endif
+
+#endif
