--- a/engine/build.jam
+++ b/engine/build.jam
@@ -3,7 +3,7 @@
 #~ (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 
 # Clean env vars of any "extra" empty values.
-for local v in ARGV CC CFLAGS LIBS
+for local v in ARGV CC CFLAGS LDFLAGS LIBS
 {
 	local values ;
 	for local x in $($(v))
@@ -179,10 +179,10 @@
 if ! $(CC) { CC = cc ; }
 toolset cc $(CC) : "-o " : -D
     : $(CFLAGS)
-    [ opt --release : -s -O ]
+    [ opt --release : ]
     [ opt --debug : -g ]
     -I$(--python-include) -I$(--extra-include)
-    : $(LIBS) -L$(--python-lib[1]) -l$(--python-lib[2]) ;
+    : $(LDFLAGS) $(LIBS) -L$(--python-lib[1]) -l$(--python-lib[2]) ;
 ## Comeau C/C++ 4.x
 toolset como como : "-o " : -D
     : --c
@@ -201,11 +201,11 @@
 ## MacOSX Darwin, using GCC 2.9.x, 3.x
 toolset darwin cc :  "-o " : -D
     :
-    [ opt --release : -Wl,-x -O3 -finline-functions ]
+    [ opt --release : -Wl,-x -finline-functions ]
     [ opt --debug : -g -O0 -fno-inline -pg ]
     [ opt --profile : -Wl,-x -O3 -finline-functions -g -pg ]
     -I$(--python-include) -I$(--extra-include)
-    : -L$(--python-lib[1]) -l$(--python-lib[2]) ;
+    : $(LDFLAGS) -L$(--python-lib[1]) -l$(--python-lib[2]) ;
 ## GCC 2.x, 3.x, 4.x
 toolset gcc gcc : "-o " : -D
     : -pedantic -fno-strict-aliasing
--- a/engine/build.sh
+++ b/engine/build.sh
@@ -224,9 +224,9 @@
     cc)
     if test -z "$CC" ; then CC=cc ; fi
     BOOST_JAM_CC=$CC
-    BOOST_JAM_OPT_JAM="$BOOST_JAM_OPT_JAM $CFLAGS $LIBS"
-    BOOST_JAM_OPT_MKJAMBASE="$BOOST_JAM_OPT_MKJAMBASE $CFLAGS $LIBS"
-    BOOST_JAM_OPT_YYACC="$BOOST_JAM_OPT_YYACC $CFLAGS $LIBS"
+    BOOST_JAM_OPT_JAM="$BOOST_JAM_OPT_JAM $CFLAGS $LDFLAGS $LIBS"
+    BOOST_JAM_OPT_MKJAMBASE="$BOOST_JAM_OPT_MKJAMBASE $CFLAGS $LDFLAGS $LIBS"
+    BOOST_JAM_OPT_YYACC="$BOOST_JAM_OPT_YYACC $CFLAGS $LDFLAGS $LIBS"
     ;;
 
     qcc)
