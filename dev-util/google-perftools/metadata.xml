<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person">
		<email>voyageur@gentoo.org</email>
		<name>Bernard Cafarelli</name>
	</maintainer>
	<use>
		<flag name="largepages">
			Use (experimental) larger pages for tcmalloc, this increases
			memory usage, but should speed up the allocation/free
			operations.
		</flag>
		<flag name="largepages64k">
			Use (experimental) 64K pages for tcmalloc, this increases
			memory usage, but should speed up the allocation/free
			operations.
		</flag>
		<flag name="pagesize-16k">
			Use 16K page size for tcmalloc. Larger size makes tcmalloc faster,
			at the cost of using more space (due to internal fragmentation)
		</flag>
		<flag name="pagesize-32k">
			Use 32K page size for tcmalloc. Larger size makes tcmalloc faster,
			at the cost of using more space (due to internal fragmentation)
		</flag>
		<flag name="pagesize-64k">
			Use 64K page size for tcmalloc. Larger size makes tcmalloc faster,
			at the cost of using more space (due to internal fragmentation)
		</flag>
		<flag name="pagesize-128k">
			Use 128K page size for tcmalloc. Larger size makes tcmalloc faster,
			at the cost of using more space (due to internal fragmentation)
		</flag>
		<flag name="pagesize-256k">
			Use 256K page size for tcmalloc. Larger size makes tcmalloc faster,
			at the cost of using more space (due to internal fragmentation)
		</flag>
		<flag name="debug">
			Build a set of libraries with debug support (so-called
			debugalloc). These are available by default but are not needed
			unless you're actually developing using tcmalloc.
		</flag>
		<flag name="minimal">
			Only build the tcmalloc_minimal library, ignoring the heap
			checker and the profilers.
		</flag>
		<flag name="optimisememory">
			To build libtcmalloc with smaller internal caches.
		</flag>
	</use>
	<upstream>
		<remote-id type="github">gperftools/gperftools</remote-id>
	</upstream>
</pkgmetadata>
