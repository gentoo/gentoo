Index: rosdep-0.19.0/src/rosdep2/platforms/osx.py
===================================================================
--- rosdep-0.19.0.orig/src/rosdep2/platforms/osx.py
+++ rosdep-0.19.0/src/rosdep2/platforms/osx.py
@@ -303,7 +303,7 @@ class HomebrewInstaller(PackageManagerIn
 
             # make sure options is a list of list of strings
             try:
-                valid = all([isinstance(x, _basestring) for l in options for x in l])
+                valid = all([isinstance(x, _basestring) for option in options for x in option])
             except Exception as e:
                 raise InvalidData("Invalid list of options '%s', error: %s" % (options, e))
             else:
Index: rosdep-0.19.0/test/test_rosdep_gentoo.py
===================================================================
--- rosdep-0.19.0.orig/test/test_rosdep_gentoo.py
+++ rosdep-0.19.0/test/test_rosdep_gentoo.py
@@ -183,13 +183,11 @@ def test_PortageInstaller():
 
         mock_method.return_value = ['a', 'b']
 
-        expected = [['sudo', '-H', 'emerge', 'a'],
-                    ['sudo', '-H', 'emerge', 'b']]
+        expected = [['sudo', '-H', 'emerge', 'a', 'b']]
         val = installer.get_install_command(['whatever'], interactive=False)
         assert val == expected, val
 
-        expected = [['sudo', '-H', 'emerge', '-a', 'a'],
-                    ['sudo', '-H', 'emerge', '-a', 'b']]
+        expected = [['sudo', '-H', 'emerge', '-a', 'a', 'b']]
         val = installer.get_install_command(['whatever'], interactive=True)
         assert val == expected, val
 
