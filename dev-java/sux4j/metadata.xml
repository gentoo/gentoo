<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer>
		<email>java@gentoo.org</email>
		<name>Java</name>
	</maintainer>
	<longdescription lang="en">
		Sux in an umbrella nickname for the results of my fiddling with the implementation of basic succinct data strucures.

The resulting code is rather sparse. The main highlights are:

    * a novel, broadword-based implementation of rank/select queries for up to 264 bits that is highly competitive with known 32-bit implementations on 64-bit architectures (additional space required is 25% for ranking and 12.5%-37.5% for selection);
    * several Java structures using the Eliasâ€“Fano representation of monotone sequences for storing pointers, variable-length bit arrays, etc.
    * Java code implementing minimal perfect hashing using around 2.65 bits per element (also using some broadword ideas);
    * a few Java implementation of monotone minimal perfect hashing. 
	</longdescription>
</pkgmetadata>
