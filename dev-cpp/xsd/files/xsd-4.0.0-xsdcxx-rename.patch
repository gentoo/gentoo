Description: change docu from xsd to xsdcxx
Author: Jörg Frings-Fürst <debian@jff-webhosting.net>
Reviewed-by: 
Last-Update: 2014-07-22
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
Index: trunk/xsd/doc/xsd.1
===================================================================
--- a/doc/xsd.1
+++ b/doc/xsd.1
@@ -1,16 +1,16 @@
 .\" Process this file with
 .\" groff -man -Tascii xsd.1
 .\"
-.TH XSD 1 "July 2014" "XSD 4.0.0"
+.TH XSDCXX 1 "July 2014" "XSDCXX 4.0.0"
 .SH NAME
-xsd \- W3C XML Schema to C++ Compiler
+xsdcxx \- W3C XML Schema to C++ Compiler
 .\"
 .\"
 .\"
 .\"--------------------------------------------------------------------
 .SH SYNOPSIS
 .\"--------------------------------------------------------------------
-.B xsd
+.B xsdcxx
 .I command
 .B [
 .I options
@@ -20,19 +20,19 @@
 .I file
 .B ...]
 .in
-.B xsd help
+.B xsdcxx help
 .B [
 .I command
 .B ]
 .in
-.B xsd version
+.B xsdcxx version
 .\"
 .\"
 .\"
 .\"--------------------------------------------------------------------
 .SH DESCRIPTION
 .\"--------------------------------------------------------------------
-.B xsd
+.B xsdcxx
 generates vocabulary-specific, statically-typed C++ mapping from W3C XML
 Schema definitions. Particular mapping to produce is selected by a
 .IR command .
@@ -96,7 +96,7 @@
 .PP
 .RS
 .RS 3
-.B xsd help
+.B xsdcxx help
 .I command
 .RE
 .PP
@@ -133,9 +133,9 @@
 
 When the C++11 mode is selected, you normally don't need to perform any
 extra steps other than enable C++11 in your C++ compiler, if required\. The
-XSD compiler will automatically add the necessary macro defines to the
-generated header files that will switch the header-only XSD runtime library
-(\fBlibxsd\fP) to the C++11 mode\. However, if you include any of the XSD
+XSDCXX compiler will automatically add the necessary macro defines to the
+generated header files that will switch the header-only XSDCXX runtime library
+(\fBlibxsd\fP) to the C++11 mode\. However, if you include any of the XSDCXX
 runtime headers directly in your application (normally you just include the
 generated headers), then you will need to define the \fBXSD_CXX11\fP macro
 for your entire project\.
@@ -1632,7 +1632,7 @@
 .\"
 .SH DIAGNOSTICS
 If the input file is not a valid W3C XML Schema definition,
-.B xsd
+.B xsdcxx
 will issue diagnostic messages to
 .B STDERR
 and exit with non-zero exit code.
Index: trunk/xsd/doc/xsd.xhtml
===================================================================
--- a/doc/xsd.xhtml
+++ b/doc/xsd.xhtml
@@ -3,11 +3,11 @@
 <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
 
 <head>
-  <title>XSD 4.0.0 Compiler Command Line Manual</title>
+  <title>XSDCXX 4.0.0 Compiler Command Line Manual</title>
 
   <meta name="copyright" content="&copy; 2005-2014 Code Synthesis Tools CC"/>
   <meta name="keywords" content="xsd,xml,schema,c++,mapping,data,binding,code,generator,manual,man,page"/>
-  <meta name="description" content="XSD Compiler Command Line Manual"/>
+  <meta name="description" content="XSDCXX Compiler Command Line Manual"/>
 
   <link rel="stylesheet" type="text/css" href="default.css" />
 
@@ -50,19 +50,19 @@
 
   <h1>NAME</h1>
 
-  <p>xsd - W3C XML Schema to C++ Compiler</p>
+  <p>xsdcxx - W3C XML Schema to C++ Compiler</p>
 
   <h1>SYNOPSIS</h1>
 
   <dl id="synopsis">
-    <dt><code><b>xsd</b> <i>command</i> [<i>options</i>] <i>file</i> [<i>file</i> ...]</code></dt>
-    <dt><code><b>xsd help</b> [<i>command</i>]</code></dt>
-    <dt><code><b>xsd version</b></code></dt>
+    <dt><code><b>xsdcxx</b> <i>command</i> [<i>options</i>] <i>file</i> [<i>file</i> ...]</code></dt>
+    <dt><code><b>xsdcxx help</b> [<i>command</i>]</code></dt>
+    <dt><code><b>xsdcxx version</b></code></dt>
   </dl>
 
   <h1>DESCRIPTION</h1>
 
-  <p><code><b>xsd</b></code> generates vocabulary-specific, statically-typed
+  <p><code><b>xsdcxx</b></code> generates vocabulary-specific, statically-typed
   C++ mapping from W3C XML Schema definitions. Particular mapping to
   produce is selected by a <code><i>command</i></code>. Each mapping has
   a number of mapping-specific <code><i>options</i></code> that should
@@ -138,10 +138,10 @@
 
   <p>When the C++11 mode is selected, you normally don't need to perform any
   extra steps other than enable C++11 in your C++ compiler, if required. The
-  XSD compiler will automatically add the necessary macro defines to the
-  generated header files that will switch the header-only XSD runtime library
+  XSDCXX compiler will automatically add the necessary macro defines to the
+  generated header files that will switch the header-only XSDCXX runtime library
   (<code><b>libxsd</b></code>) to the C++11 mode. However, if you include any
-  of the XSD runtime headers directly in your application (normally you just
+  of the XSDCXX runtime headers directly in your application (normally you just
   include the generated headers), then you will need to define the
   <code><b>XSD_CXX11</b></code> macro for your entire project.</p></dd>
 
@@ -219,7 +219,7 @@
 
   <p>For example, if you have file <code><b>hello.xsd</b></code> with
   namespace <code><b>http://example.com/hello</b></code> and you run
-  <code><b>xsd</b></code> on this file, then the string in question will
+  <code><b>xsdcxx</b></code> on this file, then the string in question will
   be:</p>
 
   <p><code><b>hello.xsd. http://example.com/hello</b></code></p>
@@ -1530,7 +1530,7 @@
   <h1>DIAGNOSTICS</h1>
 
   <p>If the input file is not a valid W3C XML Schema definition,
-    <code><b>xsd</b></code> will issue diagnostic messages to STDERR
+    <code><b>xsdcxx</b></code> will issue diagnostic messages to STDERR
     and exit with non-zero exit code.</p>
 
   <h1>BUGS</h1>
