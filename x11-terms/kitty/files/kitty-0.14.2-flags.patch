Respect user CFLAGS.

--- kitty-0.14.2/setup.py
+++ kitty-0.14.2/setup.py
@@ -198,7 +198,7 @@
     df = '-g3'
     if ccver >= (5, 0):
         df += ' -Og'
-    optimize = df if debug or sanitize else '-O3'
+    optimize = ''
     sanitize_args = get_sanitize_args(cc, ccver) if sanitize else set()
     cppflags = os.environ.get(
         'OVERRIDE_CPPFLAGS', (
@@ -213,7 +213,7 @@
     cflags = os.environ.get(
         'OVERRIDE_CFLAGS', (
             '-Wextra -Wno-missing-field-initializers -Wall -Wstrict-prototypes -std=c11'
-            ' -pedantic-errors -Werror {} {} -fwrapv {} {} -pipe {} -fvisibility=hidden'
+            ' -pedantic-errors {} {} -fwrapv {} {} {} -fvisibility=hidden'
         ).format(
             optimize,
             ' '.join(sanitize_args),
@@ -227,7 +227,7 @@
     )
     ldflags = os.environ.get(
         'OVERRIDE_LDFLAGS',
-        '-Wall ' + ' '.join(sanitize_args) + ('' if debug else ' -O3')
+        '-Wall ' + ' '.join(sanitize_args)
     )
     ldflags = shlex.split(ldflags)
     ldflags.append('-shared')
@@ -550,14 +550,14 @@
 
 
 def build_launcher(args, launcher_dir='.', for_bundle=False, sh_launcher=False, for_freeze=False):
-    cflags = '-Wall -Werror -fpie'.split()
+    cflags = '-Wall -fpie'.split()
     cppflags = []
     libs = []
     if args.profile:
         cppflags.append('-DWITH_PROFILER'), cflags.append('-g')
         libs.append('-lprofiler')
-    else:
-        cflags.append('-O3')
+    #else:
+    #    cflags.append('-O3')
     if for_bundle or for_freeze:
         cppflags.append('-DFOR_BUNDLE')
         cppflags.append('-DPYVER="{}"'.format(sysconfig.get_python_version()))
