darwin: __private_extern__ is an Apple-ism, we really don't want

In particular FSF GCC barfs about this, which is much preferred over
ancient gcc-apple (4.2.1).

--- a/compat/regex.c
+++ b/compat/regex.c
@@ -5539,9 +5539,6 @@
    It returns 0 if it succeeds, nonzero if it doesn't.  (See regex.h for
    the return codes and their meanings.)  */
 
-#ifdef __APPLE__
-__private_extern__
-#endif
 int
 regcomp (preg, pattern, cflags)
     regex_t *preg;
@@ -5620,9 +5617,6 @@
 
    We return 0 if we find a match and REG_NOMATCH if not.  */
 
-#ifdef __APPLE__
-__private_extern__
-#endif
 int
 regexec (preg, string, nmatch, pmatch, eflags)
     const regex_t *preg;
@@ -5728,9 +5722,6 @@
 
 /* Free dynamically allocated space used by PREG.  */
 
-#ifdef __APPLE__
-__private_extern__
-#endif
 void
 regfree (preg)
     regex_t *preg;
