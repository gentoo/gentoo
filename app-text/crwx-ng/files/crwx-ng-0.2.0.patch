From 146f22a7c56a3402c75b4a51b8b1940144dfd9fd Mon Sep 17 00:00:00 2001
From: Aleksey Chernov <valexlin@gmail.com>
Date: Tue, 27 Dec 2022 10:11:16 +0400
Subject: [PATCH] Compile error/warn fixed.

---
 src/cr3.cpp | 25 +++++++++++--------------
 1 file changed, 11 insertions(+), 14 deletions(-)

diff --git a/src/cr3.cpp b/src/cr3.cpp
index 19d5c4a..00e733b 100644
--- a/src/cr3.cpp
+++ b/src/cr3.cpp
@@ -341,14 +341,17 @@ void testFormatting() {
         LFormattedText txt;
         void addLine(const lChar32* str, int flags, LVFontRef font) {
             lString32 s(str);
-            txt.AddSourceLine(s.c_str(),       /* pointer to unicode text string */
-                              s.length(),      /* number of chars in text, 0 for auto(strlen) */
-                              0x000000,        /* text color */
-                              0xFFFFFF,        /* background color */
-                              font.get(),      /* font to draw string */
-                              NULL, flags, 16, /* interline space, *16 (16=single, 32=double) */
-                              30,              /* first line margin */
-                              NULL, 0);
+            txt.AddSourceLine(s.c_str(),  /* pointer to unicode text string */
+                              s.length(), /* number of chars in text, 0 for auto(strlen) */
+                              0x000000,   /* text color */
+                              0xFFFFFF,   /* background color */
+                              font.get(), /* font to draw string */
+                              NULL,       /* pointer to text lang config */
+                              flags,      /* flags */
+                              16,         /* line height in screen pixels; *16 (16=single, 32=double) */
+                              0,          /* drift y from baseline */
+                              30,         /* first line margin */
+                              NULL, 0, 0);
         }
         void dump() {
             formatted_text_fragment_t* buf = txt.GetBuffer();
@@ -1380,9 +1383,6 @@ void cr3Frame::OnFileOpen(wxCommandEvent& WXUNUSED(event)) {
             wxT(""), //const wxString& defaultFile = "",
             wxT("All supported files|*.fb2;*.fbz;*.txt;*.zip;*.rtf;*.epub;*.tcr;*.html;*.htm;*.shtml;*.xhtml|FictionBook files (*.fb2)|*.fb2;*.fbz|RTF files (*.rtf)|*.rtf|Text files (*.txt, *.tcr)|*.txt;*.tcr|HTML files|*.html;*.htm;*.shtml;*.xhtml|EPUB files (*.epub)|*.epub|ZIP archieves (*.zip)|*.zip"), //const wxString& wildcard = "*.*",
             wxFD_OPEN | wxFD_FILE_MUST_EXIST //long style = wxFD_DEFAULT_STYLE,
-            //const wxPoint& pos = wxDefaultPosition,
-            //const wxSize& sz = wxDefaultSize,
-            //const wxString& name = "filedlg"
     );
 
     if (dlg.ShowModal() == wxID_OK) {
@@ -1410,9 +1410,6 @@ void cr3Frame::OnFileSave(wxCommandEvent& WXUNUSED(event)) {
                      wxT(""),                               //const wxString& defaultFile = "",
                      wxT("Wolf EBook files (*.wol)|*.wol"), //const wxString& wildcard = "*.*",
                      wxFD_SAVE | wxFD_OVERWRITE_PROMPT      //long style = wxFD_DEFAULT_STYLE,
-                     //const wxPoint& pos = wxDefaultPosition,
-                     //const wxSize& sz = wxDefaultSize,
-                     //const wxString& name = "filedlg"
     );
     WolOptions opts(this);
     if (dlg.ShowModal() == wxID_OK && opts.ShowModal() == wxID_OK) {
-- 
2.38.2

