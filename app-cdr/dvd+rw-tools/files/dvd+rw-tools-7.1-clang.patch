--- a/dvd+rw-booktype.cpp	2006-06-24 12:21:48.000000000 +0300
+++ b/dvd+rw-booktype.cpp	2021-03-14 10:16:02.533741829 +0200
@@ -398,7 +398,7 @@
 		break;
 	case OPT_MEDIA:
 		if (profile!=0x1A && profile!=0x14 && profile!=13)
-		{   fprintf (stderr,":-( action is applicable to DVD±RW only\n");
+		{   fprintf (stderr,":-( action is applicable to DVD\xb1RW only\n");
 		    break;
 		}
 
@@ -759,7 +759,7 @@
 	    }
 	}
 
-	delete list;
+	delete[] list;
     }
 
     profile=buf[6]<<8|buf[7];
--- a/dvd+rw-mediainfo.cpp	2006-09-23 20:46:57.000000000 +0300
+++ b/dvd+rw-mediainfo.cpp	2021-03-14 10:16:02.533741829 +0200
@@ -621,7 +621,7 @@
 	if (phys_end>0)	phys_end -= phys_start;
 	if (phys_end>0) phys_end += 1;
 
-	printf (" %s    %u*2KB=%"LLU"\n",
+	printf (" %s    %u*2KB=%" LLU "\n",
 		dvd_dash>=0?"Legacy lead-out at:":"Last border-out at:",
 		phys_end,phys_end*2048LL);
 
@@ -941,14 +941,14 @@
 	    printf(" %s:\t\t%u*%u=",type[formats[8]&3],
 	        capacity=formats[4]<<24|formats[5]<<16|formats[6]<<8|formats[7],
 		blocksize);
-	    printf("%"LLU"\n",(unsigned long long)capacity*blocksize);
+	    printf("%" LLU "\n",(unsigned long long)capacity*blocksize);
 
 	    for(i=12;i<len;i+=8)
 	    {	printf(" %02Xh(%x):\t\t%u*%u=",formats[i+4]>>2,
 			formats[i+5]<<16|formats[i+6]<<8|formats[i+7],
 	    		capacity=formats[i]<<24|formats[i+1]<<16|formats[i+2]<<8|formats[i+3],
 			blocksize);
-		printf("%"LLU"\n",(unsigned long long)capacity*blocksize);
+		printf("%" LLU "\n",(unsigned long long)capacity*blocksize);
 	    }
 	    break;
 	}
@@ -1121,7 +1121,7 @@
 	if (ccity) ccity++;
 	bsize = header[4]<<24|header[5]<<16|header[6]<<8|header[7];
 
-	printf ("READ CAPACITY:          %u*%u=%"LLU"\n",
+	printf ("READ CAPACITY:          %u*%u=%" LLU "\n",
 					ccity,bsize,
 					(unsigned long long)ccity*bsize);
     } while (0);
--- a/transport.hxx	2021-03-14 10:17:54.353626017 +0200
+++ b/transport.hxx	2021-03-14 10:16:44.180365362 +0200
@@ -127,9 +127,9 @@
 	char str[MB_LEN_MAX];
     public:
 	__plusminus()	{   setlocale(LC_CTYPE,ENV_LOCALE);
-			    int l = wctomb(str,(wchar_t)(unsigned char)'±');
+			    int l = wctomb(str,(wchar_t)'\xb1');
 			    if (l>0)	str[l]='\0';
-			    else	str[0]='±',str[1]='\0';
+			    else	str[0]='\xb1',str[1]='\0';
 			}
 	~__plusminus()	{ }
 	operator char*(){ return str; }
